
TRNG_EXAMPLE1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003ecc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00403ecc  00403ecc  00013ecc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009b8  20400000  00403ed4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000fc  204009b8  0040488c  000209b8  2**2
                  ALLOC
  4 .stack        00002004  20400ab4  00404988  000209b8  2**0
                  ALLOC
  5 .heap         00000200  20402ab8  0040698c  000209b8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
  8 .debug_info   000137a9  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000029ae  00000000  00000000  000341e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003ddb  00000000  00000000  00036b96  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000a00  00000000  00000000  0003a971  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a30  00000000  00000000  0003b371  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000203d8  00000000  00000000  0003bda1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000ad7c  00000000  00000000  0005c179  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00093aa1  00000000  00000000  00066ef5  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  0000219c  00000000  00000000  000fa998  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	b8 2a 40 20 b5 07 40 00 b3 07 40 00 b3 07 40 00     .*@ ..@...@...@.
  400010:	b3 07 40 00 b3 07 40 00 b3 07 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	b3 07 40 00 b3 07 40 00 00 00 00 00 b3 07 40 00     ..@...@.......@.
  40003c:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40004c:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40005c:	b3 07 40 00 b3 07 40 00 00 00 00 00 bd 04 40 00     ..@...@.......@.
  40006c:	d1 04 40 00 e5 04 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40007c:	b3 07 40 00 f9 04 40 00 0d 05 40 00 b3 07 40 00     ..@...@...@...@.
  40008c:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40009c:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  4000ac:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  4000bc:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  4000cc:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  4000dc:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  4000ec:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  4000fc:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40010c:	b3 07 40 00 b3 07 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 b3 07 40 00 15 0c 40 00 b3 07 40 00     ......@...@...@.
  40012c:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40013c:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40014c:	b3 07 40 00 b3 07 40 00 b3 07 40 00 b3 07 40 00     ..@...@...@...@.
  40015c:	b3 07 40 00 b3 07 40 00 b3 07 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009b8 	.word	0x204009b8
  400184:	00000000 	.word	0x00000000
  400188:	00403ed4 	.word	0x00403ed4

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	00403ed4 	.word	0x00403ed4
  4001c8:	204009bc 	.word	0x204009bc
  4001cc:	00403ed4 	.word	0x00403ed4
  4001d0:	00000000 	.word	0x00000000

004001d4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4001d4:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX/2);
  4001d6:	4810      	ldr	r0, [pc, #64]	; (400218 <sysclk_init+0x44>)
  4001d8:	4b10      	ldr	r3, [pc, #64]	; (40021c <sysclk_init+0x48>)
  4001da:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4001dc:	213e      	movs	r1, #62	; 0x3e
  4001de:	2000      	movs	r0, #0
  4001e0:	4b0f      	ldr	r3, [pc, #60]	; (400220 <sysclk_init+0x4c>)
  4001e2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4001e4:	4c0f      	ldr	r4, [pc, #60]	; (400224 <sysclk_init+0x50>)
  4001e6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4001e8:	2800      	cmp	r0, #0
  4001ea:	d0fc      	beq.n	4001e6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4001ec:	4b0e      	ldr	r3, [pc, #56]	; (400228 <sysclk_init+0x54>)
  4001ee:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4001f0:	4a0e      	ldr	r2, [pc, #56]	; (40022c <sysclk_init+0x58>)
  4001f2:	4b0f      	ldr	r3, [pc, #60]	; (400230 <sysclk_init+0x5c>)
  4001f4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4001f6:	4c0f      	ldr	r4, [pc, #60]	; (400234 <sysclk_init+0x60>)
  4001f8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4001fa:	2800      	cmp	r0, #0
  4001fc:	d0fc      	beq.n	4001f8 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4001fe:	2002      	movs	r0, #2
  400200:	4b0d      	ldr	r3, [pc, #52]	; (400238 <sysclk_init+0x64>)
  400202:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400204:	2000      	movs	r0, #0
  400206:	4b0d      	ldr	r3, [pc, #52]	; (40023c <sysclk_init+0x68>)
  400208:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40020a:	4b0d      	ldr	r3, [pc, #52]	; (400240 <sysclk_init+0x6c>)
  40020c:	4798      	blx	r3

	/* Set a flash wait state depending on the master clock frequency */
	system_init_flash(sysclk_get_cpu_hz() / CONFIG_SYSCLK_DIV);
  40020e:	4802      	ldr	r0, [pc, #8]	; (400218 <sysclk_init+0x44>)
  400210:	4b02      	ldr	r3, [pc, #8]	; (40021c <sysclk_init+0x48>)
  400212:	4798      	blx	r3
  400214:	bd10      	pop	{r4, pc}
  400216:	bf00      	nop
  400218:	08f0d180 	.word	0x08f0d180
  40021c:	00400989 	.word	0x00400989
  400220:	004005bd 	.word	0x004005bd
  400224:	00400611 	.word	0x00400611
  400228:	00400621 	.word	0x00400621
  40022c:	20183f01 	.word	0x20183f01
  400230:	400e0600 	.word	0x400e0600
  400234:	00400631 	.word	0x00400631
  400238:	00400521 	.word	0x00400521
  40023c:	00400559 	.word	0x00400559
  400240:	0040087d 	.word	0x0040087d

00400244 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400248:	b980      	cbnz	r0, 40026c <_read+0x28>
  40024a:	460c      	mov	r4, r1
  40024c:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40024e:	2a00      	cmp	r2, #0
  400250:	dd0f      	ble.n	400272 <_read+0x2e>
  400252:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400254:	4e08      	ldr	r6, [pc, #32]	; (400278 <_read+0x34>)
  400256:	4d09      	ldr	r5, [pc, #36]	; (40027c <_read+0x38>)
  400258:	6830      	ldr	r0, [r6, #0]
  40025a:	4621      	mov	r1, r4
  40025c:	682b      	ldr	r3, [r5, #0]
  40025e:	4798      	blx	r3
		ptr++;
  400260:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400262:	42bc      	cmp	r4, r7
  400264:	d1f8      	bne.n	400258 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400266:	4640      	mov	r0, r8
  400268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40026c:	f04f 38ff 	mov.w	r8, #4294967295
  400270:	e7f9      	b.n	400266 <_read+0x22>
	for (; len > 0; --len) {
  400272:	4680      	mov	r8, r0
  400274:	e7f7      	b.n	400266 <_read+0x22>
  400276:	bf00      	nop
  400278:	20400a88 	.word	0x20400a88
  40027c:	20400a80 	.word	0x20400a80

00400280 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400280:	3801      	subs	r0, #1
  400282:	2802      	cmp	r0, #2
  400284:	d815      	bhi.n	4002b2 <_write+0x32>
{
  400286:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40028a:	460e      	mov	r6, r1
  40028c:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  40028e:	b19a      	cbz	r2, 4002b8 <_write+0x38>
  400290:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400292:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4002cc <_write+0x4c>
  400296:	4f0c      	ldr	r7, [pc, #48]	; (4002c8 <_write+0x48>)
  400298:	f8d8 0000 	ldr.w	r0, [r8]
  40029c:	f815 1b01 	ldrb.w	r1, [r5], #1
  4002a0:	683b      	ldr	r3, [r7, #0]
  4002a2:	4798      	blx	r3
  4002a4:	2800      	cmp	r0, #0
  4002a6:	db0a      	blt.n	4002be <_write+0x3e>
  4002a8:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4002aa:	3c01      	subs	r4, #1
  4002ac:	d1f4      	bne.n	400298 <_write+0x18>
  4002ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4002b2:	f04f 30ff 	mov.w	r0, #4294967295
  4002b6:	4770      	bx	lr
	for (; len != 0; --len) {
  4002b8:	4610      	mov	r0, r2
  4002ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4002be:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4002c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4002c6:	bf00      	nop
  4002c8:	20400a84 	.word	0x20400a84
  4002cc:	20400a88 	.word	0x20400a88

004002d0 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4002d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4002d2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4002d6:	4b5b      	ldr	r3, [pc, #364]	; (400444 <board_init+0x174>)
  4002d8:	605a      	str	r2, [r3, #4]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  4002da:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002de:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  4002e2:	4b59      	ldr	r3, [pc, #356]	; (400448 <board_init+0x178>)
  4002e4:	2100      	movs	r1, #0
  4002e6:	f8c3 1250 	str.w	r1, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
  4002ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002ee:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  4002f2:	695a      	ldr	r2, [r3, #20]
  4002f4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4002f8:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
  4002fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4002fe:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  400302:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
  400306:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
  40030a:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  40030e:	f3c7 354e 	ubfx	r5, r7, #13, #15
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  400312:	f3c7 07c9 	ubfx	r7, r7, #3, #10
  400316:	016e      	lsls	r6, r5, #5
  400318:	ea4f 7c87 	mov.w	ip, r7, lsl #30
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  40031c:	f643 7ee0 	movw	lr, #16352	; 0x3fe0
  400320:	461c      	mov	r4, r3
  400322:	ea06 000e 	and.w	r0, r6, lr
  400326:	4662      	mov	r2, ip
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  400328:	463b      	mov	r3, r7
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  40032a:	ea40 0102 	orr.w	r1, r0, r2
  40032e:	f8c4 1260 	str.w	r1, [r4, #608]	; 0x260
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  400332:	3b01      	subs	r3, #1
  400334:	f102 4240 	add.w	r2, r2, #3221225472	; 0xc0000000
  400338:	f1b3 3fff 	cmp.w	r3, #4294967295
  40033c:	d1f5      	bne.n	40032a <board_init+0x5a>
    } while(sets-- != 0U);
  40033e:	3d01      	subs	r5, #1
  400340:	3e20      	subs	r6, #32
  400342:	f1b5 3fff 	cmp.w	r5, #4294967295
  400346:	d1ec      	bne.n	400322 <board_init+0x52>
  400348:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  40034c:	4b3e      	ldr	r3, [pc, #248]	; (400448 <board_init+0x178>)
  40034e:	695a      	ldr	r2, [r3, #20]
  400350:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400354:	615a      	str	r2, [r3, #20]
  400356:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40035a:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  40035e:	4a3b      	ldr	r2, [pc, #236]	; (40044c <board_init+0x17c>)
  400360:	493b      	ldr	r1, [pc, #236]	; (400450 <board_init+0x180>)
  400362:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400364:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400368:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb 0xF":::"memory");
  40036a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40036e:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400372:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400376:	f022 0201 	bic.w	r2, r2, #1
  40037a:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  40037e:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400382:	f022 0201 	bic.w	r2, r2, #1
  400386:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb 0xF":::"memory");
  40038a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40038e:	f3bf 8f6f 	isb	sy
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400392:	200a      	movs	r0, #10
  400394:	4c2f      	ldr	r4, [pc, #188]	; (400454 <board_init+0x184>)
  400396:	47a0      	blx	r4
  400398:	200b      	movs	r0, #11
  40039a:	47a0      	blx	r4
  40039c:	200c      	movs	r0, #12
  40039e:	47a0      	blx	r4
  4003a0:	2010      	movs	r0, #16
  4003a2:	47a0      	blx	r4
  4003a4:	2011      	movs	r0, #17
  4003a6:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4003a8:	4b2b      	ldr	r3, [pc, #172]	; (400458 <board_init+0x188>)
  4003aa:	f44f 7280 	mov.w	r2, #256	; 0x100
  4003ae:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003b0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4003b4:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4003b6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4003ba:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4003be:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003c0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4003c4:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4003c6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003ca:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  4003cc:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  4003ce:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  4003d2:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4003d4:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4003d8:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4003da:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4003dc:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4003e0:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  4003e2:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  4003e6:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  4003ea:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  4003ee:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4003f2:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4003f4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003f8:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4003fa:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4003fc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400400:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400402:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400406:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400408:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40040a:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  40040e:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400410:	605a      	str	r2, [r3, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400412:	4a12      	ldr	r2, [pc, #72]	; (40045c <board_init+0x18c>)
  400414:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  400418:	f043 0310 	orr.w	r3, r3, #16
  40041c:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
		base->PIO_PUDR = mask;
  400420:	4b0f      	ldr	r3, [pc, #60]	; (400460 <board_init+0x190>)
  400422:	2210      	movs	r2, #16
  400424:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400426:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40042a:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40042c:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40042e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400432:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400434:	4311      	orrs	r1, r2
  400436:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  400438:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40043a:	4311      	orrs	r1, r2
  40043c:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40043e:	605a      	str	r2, [r3, #4]
  400440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400442:	bf00      	nop
  400444:	400e1850 	.word	0x400e1850
  400448:	e000ed00 	.word	0xe000ed00
  40044c:	400e0c00 	.word	0x400e0c00
  400450:	5a00080c 	.word	0x5a00080c
  400454:	00400641 	.word	0x00400641
  400458:	400e1200 	.word	0x400e1200
  40045c:	40088000 	.word	0x40088000
  400460:	400e1000 	.word	0x400e1000

00400464 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400464:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400466:	4770      	bx	lr

00400468 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400468:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40046a:	4770      	bx	lr

0040046c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40046c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400470:	4604      	mov	r4, r0
  400472:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400474:	4b0e      	ldr	r3, [pc, #56]	; (4004b0 <pio_handler_process+0x44>)
  400476:	4798      	blx	r3
  400478:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40047a:	4620      	mov	r0, r4
  40047c:	4b0d      	ldr	r3, [pc, #52]	; (4004b4 <pio_handler_process+0x48>)
  40047e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400480:	4005      	ands	r5, r0
  400482:	d013      	beq.n	4004ac <pio_handler_process+0x40>
  400484:	4c0c      	ldr	r4, [pc, #48]	; (4004b8 <pio_handler_process+0x4c>)
  400486:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40048a:	e003      	b.n	400494 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40048c:	42b4      	cmp	r4, r6
  40048e:	d00d      	beq.n	4004ac <pio_handler_process+0x40>
  400490:	3410      	adds	r4, #16
		while (status != 0) {
  400492:	b15d      	cbz	r5, 4004ac <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400494:	6820      	ldr	r0, [r4, #0]
  400496:	4540      	cmp	r0, r8
  400498:	d1f8      	bne.n	40048c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40049a:	6861      	ldr	r1, [r4, #4]
  40049c:	4229      	tst	r1, r5
  40049e:	d0f5      	beq.n	40048c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4004a0:	68e3      	ldr	r3, [r4, #12]
  4004a2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4004a4:	6863      	ldr	r3, [r4, #4]
  4004a6:	ea25 0503 	bic.w	r5, r5, r3
  4004aa:	e7ef      	b.n	40048c <pio_handler_process+0x20>
  4004ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4004b0:	00400465 	.word	0x00400465
  4004b4:	00400469 	.word	0x00400469
  4004b8:	204009d4 	.word	0x204009d4

004004bc <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4004bc:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4004be:	210a      	movs	r1, #10
  4004c0:	4801      	ldr	r0, [pc, #4]	; (4004c8 <PIOA_Handler+0xc>)
  4004c2:	4b02      	ldr	r3, [pc, #8]	; (4004cc <PIOA_Handler+0x10>)
  4004c4:	4798      	blx	r3
  4004c6:	bd08      	pop	{r3, pc}
  4004c8:	400e0e00 	.word	0x400e0e00
  4004cc:	0040046d 	.word	0x0040046d

004004d0 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4004d0:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  4004d2:	210b      	movs	r1, #11
  4004d4:	4801      	ldr	r0, [pc, #4]	; (4004dc <PIOB_Handler+0xc>)
  4004d6:	4b02      	ldr	r3, [pc, #8]	; (4004e0 <PIOB_Handler+0x10>)
  4004d8:	4798      	blx	r3
  4004da:	bd08      	pop	{r3, pc}
  4004dc:	400e1000 	.word	0x400e1000
  4004e0:	0040046d 	.word	0x0040046d

004004e4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  4004e4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  4004e6:	210c      	movs	r1, #12
  4004e8:	4801      	ldr	r0, [pc, #4]	; (4004f0 <PIOC_Handler+0xc>)
  4004ea:	4b02      	ldr	r3, [pc, #8]	; (4004f4 <PIOC_Handler+0x10>)
  4004ec:	4798      	blx	r3
  4004ee:	bd08      	pop	{r3, pc}
  4004f0:	400e1200 	.word	0x400e1200
  4004f4:	0040046d 	.word	0x0040046d

004004f8 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  4004f8:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  4004fa:	2110      	movs	r1, #16
  4004fc:	4801      	ldr	r0, [pc, #4]	; (400504 <PIOD_Handler+0xc>)
  4004fe:	4b02      	ldr	r3, [pc, #8]	; (400508 <PIOD_Handler+0x10>)
  400500:	4798      	blx	r3
  400502:	bd08      	pop	{r3, pc}
  400504:	400e1400 	.word	0x400e1400
  400508:	0040046d 	.word	0x0040046d

0040050c <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  40050c:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  40050e:	2111      	movs	r1, #17
  400510:	4801      	ldr	r0, [pc, #4]	; (400518 <PIOE_Handler+0xc>)
  400512:	4b02      	ldr	r3, [pc, #8]	; (40051c <PIOE_Handler+0x10>)
  400514:	4798      	blx	r3
  400516:	bd08      	pop	{r3, pc}
  400518:	400e1600 	.word	0x400e1600
  40051c:	0040046d 	.word	0x0040046d

00400520 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400520:	2803      	cmp	r0, #3
  400522:	d011      	beq.n	400548 <pmc_mck_set_division+0x28>
  400524:	2804      	cmp	r0, #4
  400526:	d012      	beq.n	40054e <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400528:	2802      	cmp	r0, #2
  40052a:	bf0c      	ite	eq
  40052c:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400530:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400532:	4a08      	ldr	r2, [pc, #32]	; (400554 <pmc_mck_set_division+0x34>)
  400534:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400536:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  40053a:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  40053c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40053e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400540:	f013 0f08 	tst.w	r3, #8
  400544:	d0fb      	beq.n	40053e <pmc_mck_set_division+0x1e>
}
  400546:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400548:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  40054c:	e7f1      	b.n	400532 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  40054e:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400552:	e7ee      	b.n	400532 <pmc_mck_set_division+0x12>
  400554:	400e0600 	.word	0x400e0600

00400558 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400558:	4a17      	ldr	r2, [pc, #92]	; (4005b8 <pmc_switch_mck_to_pllack+0x60>)
  40055a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40055c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400560:	4318      	orrs	r0, r3
  400562:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400564:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400566:	f013 0f08 	tst.w	r3, #8
  40056a:	d10a      	bne.n	400582 <pmc_switch_mck_to_pllack+0x2a>
  40056c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400570:	4911      	ldr	r1, [pc, #68]	; (4005b8 <pmc_switch_mck_to_pllack+0x60>)
  400572:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400574:	f012 0f08 	tst.w	r2, #8
  400578:	d103      	bne.n	400582 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40057a:	3b01      	subs	r3, #1
  40057c:	d1f9      	bne.n	400572 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40057e:	2001      	movs	r0, #1
  400580:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400582:	4a0d      	ldr	r2, [pc, #52]	; (4005b8 <pmc_switch_mck_to_pllack+0x60>)
  400584:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400586:	f023 0303 	bic.w	r3, r3, #3
  40058a:	f043 0302 	orr.w	r3, r3, #2
  40058e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400590:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400592:	f013 0f08 	tst.w	r3, #8
  400596:	d10a      	bne.n	4005ae <pmc_switch_mck_to_pllack+0x56>
  400598:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40059c:	4906      	ldr	r1, [pc, #24]	; (4005b8 <pmc_switch_mck_to_pllack+0x60>)
  40059e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4005a0:	f012 0f08 	tst.w	r2, #8
  4005a4:	d105      	bne.n	4005b2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4005a6:	3b01      	subs	r3, #1
  4005a8:	d1f9      	bne.n	40059e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4005aa:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4005ac:	4770      	bx	lr
	return 0;
  4005ae:	2000      	movs	r0, #0
  4005b0:	4770      	bx	lr
  4005b2:	2000      	movs	r0, #0
  4005b4:	4770      	bx	lr
  4005b6:	bf00      	nop
  4005b8:	400e0600 	.word	0x400e0600

004005bc <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4005bc:	b9a0      	cbnz	r0, 4005e8 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005be:	480e      	ldr	r0, [pc, #56]	; (4005f8 <pmc_switch_mainck_to_xtal+0x3c>)
  4005c0:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4005c2:	0209      	lsls	r1, r1, #8
  4005c4:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4005c6:	4a0d      	ldr	r2, [pc, #52]	; (4005fc <pmc_switch_mainck_to_xtal+0x40>)
  4005c8:	401a      	ands	r2, r3
  4005ca:	4b0d      	ldr	r3, [pc, #52]	; (400600 <pmc_switch_mainck_to_xtal+0x44>)
  4005cc:	4313      	orrs	r3, r2
  4005ce:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005d0:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005d2:	4602      	mov	r2, r0
  4005d4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005d6:	f013 0f01 	tst.w	r3, #1
  4005da:	d0fb      	beq.n	4005d4 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005dc:	4a06      	ldr	r2, [pc, #24]	; (4005f8 <pmc_switch_mainck_to_xtal+0x3c>)
  4005de:	6a11      	ldr	r1, [r2, #32]
  4005e0:	4b08      	ldr	r3, [pc, #32]	; (400604 <pmc_switch_mainck_to_xtal+0x48>)
  4005e2:	430b      	orrs	r3, r1
  4005e4:	6213      	str	r3, [r2, #32]
  4005e6:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005e8:	4903      	ldr	r1, [pc, #12]	; (4005f8 <pmc_switch_mainck_to_xtal+0x3c>)
  4005ea:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005ec:	4a06      	ldr	r2, [pc, #24]	; (400608 <pmc_switch_mainck_to_xtal+0x4c>)
  4005ee:	401a      	ands	r2, r3
  4005f0:	4b06      	ldr	r3, [pc, #24]	; (40060c <pmc_switch_mainck_to_xtal+0x50>)
  4005f2:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005f4:	620b      	str	r3, [r1, #32]
  4005f6:	4770      	bx	lr
  4005f8:	400e0600 	.word	0x400e0600
  4005fc:	ffc8fffc 	.word	0xffc8fffc
  400600:	00370001 	.word	0x00370001
  400604:	01370000 	.word	0x01370000
  400608:	fec8fffc 	.word	0xfec8fffc
  40060c:	01370002 	.word	0x01370002

00400610 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400610:	4b02      	ldr	r3, [pc, #8]	; (40061c <pmc_osc_is_ready_mainck+0xc>)
  400612:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400614:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400618:	4770      	bx	lr
  40061a:	bf00      	nop
  40061c:	400e0600 	.word	0x400e0600

00400620 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400620:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400624:	4b01      	ldr	r3, [pc, #4]	; (40062c <pmc_disable_pllack+0xc>)
  400626:	629a      	str	r2, [r3, #40]	; 0x28
  400628:	4770      	bx	lr
  40062a:	bf00      	nop
  40062c:	400e0600 	.word	0x400e0600

00400630 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400630:	4b02      	ldr	r3, [pc, #8]	; (40063c <pmc_is_locked_pllack+0xc>)
  400632:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400634:	f000 0002 	and.w	r0, r0, #2
  400638:	4770      	bx	lr
  40063a:	bf00      	nop
  40063c:	400e0600 	.word	0x400e0600

00400640 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  400640:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  400644:	4b05      	ldr	r3, [pc, #20]	; (40065c <pmc_enable_periph_clk+0x1c>)
  400646:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
  40064a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  40064e:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
  400652:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400656:	2000      	movs	r0, #0
  400658:	4770      	bx	lr
  40065a:	bf00      	nop
  40065c:	400e0600 	.word	0x400e0600

00400660 <trng_enable>:
 * \param p_trng  Pointer to a TRNG instance.
 *
 */
void trng_enable(Trng *p_trng)
{
	p_trng->TRNG_CR = TRNG_CR_ENABLE | TRNG_CR_KEY_PASSWD;
  400660:	4b01      	ldr	r3, [pc, #4]	; (400668 <trng_enable+0x8>)
  400662:	6003      	str	r3, [r0, #0]
  400664:	4770      	bx	lr
  400666:	bf00      	nop
  400668:	524e4701 	.word	0x524e4701

0040066c <trng_enable_interrupt>:
 * \param p_trng  Pointer to a TRNG instance.
 *
 */
void trng_enable_interrupt(Trng *p_trng)
{
	p_trng->TRNG_IER = TRNG_IER_DATRDY;
  40066c:	2301      	movs	r3, #1
  40066e:	6103      	str	r3, [r0, #16]
  400670:	4770      	bx	lr

00400672 <trng_get_interrupt_status>:
 *
 * \retval The interrupt status value.
 */
uint32_t trng_get_interrupt_status(Trng *p_trng)
{
	return p_trng->TRNG_ISR;
  400672:	69c0      	ldr	r0, [r0, #28]
}
  400674:	4770      	bx	lr

00400676 <trng_read_output_data>:
 *
 * \retval The output data value.
 */
uint32_t trng_read_output_data(Trng *p_trng)
{
	return p_trng->TRNG_ODATA;
  400676:	6d00      	ldr	r0, [r0, #80]	; 0x50
}
  400678:	4770      	bx	lr

0040067a <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  40067a:	6943      	ldr	r3, [r0, #20]
  40067c:	f013 0f02 	tst.w	r3, #2
  400680:	d002      	beq.n	400688 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400682:	61c1      	str	r1, [r0, #28]
	return 0;
  400684:	2000      	movs	r0, #0
  400686:	4770      	bx	lr
		return 1;
  400688:	2001      	movs	r0, #1
}
  40068a:	4770      	bx	lr

0040068c <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  40068c:	6943      	ldr	r3, [r0, #20]
  40068e:	f013 0f01 	tst.w	r3, #1
  400692:	d003      	beq.n	40069c <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400694:	6983      	ldr	r3, [r0, #24]
  400696:	700b      	strb	r3, [r1, #0]
	return 0;
  400698:	2000      	movs	r0, #0
  40069a:	4770      	bx	lr
		return 1;
  40069c:	2001      	movs	r0, #1
}
  40069e:	4770      	bx	lr

004006a0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4006a0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4006a2:	010b      	lsls	r3, r1, #4
  4006a4:	4293      	cmp	r3, r2
  4006a6:	d914      	bls.n	4006d2 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4006a8:	00c9      	lsls	r1, r1, #3
  4006aa:	084b      	lsrs	r3, r1, #1
  4006ac:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4006b0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4006b4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4006b6:	1e5c      	subs	r4, r3, #1
  4006b8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4006bc:	428c      	cmp	r4, r1
  4006be:	d901      	bls.n	4006c4 <usart_set_async_baudrate+0x24>
		return 1;
  4006c0:	2001      	movs	r0, #1
  4006c2:	e017      	b.n	4006f4 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  4006c4:	6841      	ldr	r1, [r0, #4]
  4006c6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4006ca:	6041      	str	r1, [r0, #4]
  4006cc:	e00c      	b.n	4006e8 <usart_set_async_baudrate+0x48>
		return 1;
  4006ce:	2001      	movs	r0, #1
  4006d0:	e010      	b.n	4006f4 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4006d2:	0859      	lsrs	r1, r3, #1
  4006d4:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  4006d8:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  4006dc:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4006de:	1e5c      	subs	r4, r3, #1
  4006e0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4006e4:	428c      	cmp	r4, r1
  4006e6:	d8f2      	bhi.n	4006ce <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  4006e8:	0412      	lsls	r2, r2, #16
  4006ea:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  4006ee:	431a      	orrs	r2, r3
  4006f0:	6202      	str	r2, [r0, #32]

	return 0;
  4006f2:	2000      	movs	r0, #0
}
  4006f4:	f85d 4b04 	ldr.w	r4, [sp], #4
  4006f8:	4770      	bx	lr
	...

004006fc <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  4006fc:	4b08      	ldr	r3, [pc, #32]	; (400720 <usart_reset+0x24>)
  4006fe:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400702:	2300      	movs	r3, #0
  400704:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400706:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400708:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  40070a:	2388      	movs	r3, #136	; 0x88
  40070c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  40070e:	2324      	movs	r3, #36	; 0x24
  400710:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400712:	f44f 7380 	mov.w	r3, #256	; 0x100
  400716:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400718:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  40071c:	6003      	str	r3, [r0, #0]
  40071e:	4770      	bx	lr
  400720:	55534100 	.word	0x55534100

00400724 <usart_init_rs232>:
{
  400724:	b570      	push	{r4, r5, r6, lr}
  400726:	4605      	mov	r5, r0
  400728:	460c      	mov	r4, r1
  40072a:	4616      	mov	r6, r2
	usart_reset(p_usart);
  40072c:	4b0f      	ldr	r3, [pc, #60]	; (40076c <usart_init_rs232+0x48>)
  40072e:	4798      	blx	r3
	ul_reg_val = 0;
  400730:	2200      	movs	r2, #0
  400732:	4b0f      	ldr	r3, [pc, #60]	; (400770 <usart_init_rs232+0x4c>)
  400734:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400736:	b1a4      	cbz	r4, 400762 <usart_init_rs232+0x3e>
  400738:	4632      	mov	r2, r6
  40073a:	6821      	ldr	r1, [r4, #0]
  40073c:	4628      	mov	r0, r5
  40073e:	4b0d      	ldr	r3, [pc, #52]	; (400774 <usart_init_rs232+0x50>)
  400740:	4798      	blx	r3
  400742:	4602      	mov	r2, r0
  400744:	b978      	cbnz	r0, 400766 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400746:	6863      	ldr	r3, [r4, #4]
  400748:	68a1      	ldr	r1, [r4, #8]
  40074a:	430b      	orrs	r3, r1
  40074c:	6921      	ldr	r1, [r4, #16]
  40074e:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400750:	68e1      	ldr	r1, [r4, #12]
  400752:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400754:	4906      	ldr	r1, [pc, #24]	; (400770 <usart_init_rs232+0x4c>)
  400756:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400758:	6869      	ldr	r1, [r5, #4]
  40075a:	430b      	orrs	r3, r1
  40075c:	606b      	str	r3, [r5, #4]
}
  40075e:	4610      	mov	r0, r2
  400760:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400762:	2201      	movs	r2, #1
  400764:	e7fb      	b.n	40075e <usart_init_rs232+0x3a>
  400766:	2201      	movs	r2, #1
  400768:	e7f9      	b.n	40075e <usart_init_rs232+0x3a>
  40076a:	bf00      	nop
  40076c:	004006fd 	.word	0x004006fd
  400770:	20400a44 	.word	0x20400a44
  400774:	004006a1 	.word	0x004006a1

00400778 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400778:	2340      	movs	r3, #64	; 0x40
  40077a:	6003      	str	r3, [r0, #0]
  40077c:	4770      	bx	lr

0040077e <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  40077e:	2310      	movs	r3, #16
  400780:	6003      	str	r3, [r0, #0]
  400782:	4770      	bx	lr

00400784 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400784:	6943      	ldr	r3, [r0, #20]
  400786:	f013 0f02 	tst.w	r3, #2
  40078a:	d004      	beq.n	400796 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  40078c:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400790:	61c1      	str	r1, [r0, #28]
	return 0;
  400792:	2000      	movs	r0, #0
  400794:	4770      	bx	lr
		return 1;
  400796:	2001      	movs	r0, #1
}
  400798:	4770      	bx	lr

0040079a <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  40079a:	6943      	ldr	r3, [r0, #20]
  40079c:	f013 0f01 	tst.w	r3, #1
  4007a0:	d005      	beq.n	4007ae <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4007a2:	6983      	ldr	r3, [r0, #24]
  4007a4:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4007a8:	600b      	str	r3, [r1, #0]
	return 0;
  4007aa:	2000      	movs	r0, #0
  4007ac:	4770      	bx	lr
		return 1;
  4007ae:	2001      	movs	r0, #1
}
  4007b0:	4770      	bx	lr

004007b2 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4007b2:	e7fe      	b.n	4007b2 <Dummy_Handler>

004007b4 <Reset_Handler>:
{
  4007b4:	b500      	push	{lr}
  4007b6:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4007b8:	4b25      	ldr	r3, [pc, #148]	; (400850 <Reset_Handler+0x9c>)
  4007ba:	4a26      	ldr	r2, [pc, #152]	; (400854 <Reset_Handler+0xa0>)
  4007bc:	429a      	cmp	r2, r3
  4007be:	d010      	beq.n	4007e2 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4007c0:	4b25      	ldr	r3, [pc, #148]	; (400858 <Reset_Handler+0xa4>)
  4007c2:	4a23      	ldr	r2, [pc, #140]	; (400850 <Reset_Handler+0x9c>)
  4007c4:	429a      	cmp	r2, r3
  4007c6:	d20c      	bcs.n	4007e2 <Reset_Handler+0x2e>
  4007c8:	3b01      	subs	r3, #1
  4007ca:	1a9b      	subs	r3, r3, r2
  4007cc:	f023 0303 	bic.w	r3, r3, #3
  4007d0:	3304      	adds	r3, #4
  4007d2:	4413      	add	r3, r2
  4007d4:	491f      	ldr	r1, [pc, #124]	; (400854 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4007d6:	f851 0b04 	ldr.w	r0, [r1], #4
  4007da:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4007de:	429a      	cmp	r2, r3
  4007e0:	d1f9      	bne.n	4007d6 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4007e2:	4b1e      	ldr	r3, [pc, #120]	; (40085c <Reset_Handler+0xa8>)
  4007e4:	4a1e      	ldr	r2, [pc, #120]	; (400860 <Reset_Handler+0xac>)
  4007e6:	429a      	cmp	r2, r3
  4007e8:	d20a      	bcs.n	400800 <Reset_Handler+0x4c>
  4007ea:	3b01      	subs	r3, #1
  4007ec:	1a9b      	subs	r3, r3, r2
  4007ee:	f023 0303 	bic.w	r3, r3, #3
  4007f2:	3304      	adds	r3, #4
  4007f4:	4413      	add	r3, r2
                *pDest++ = 0;
  4007f6:	2100      	movs	r1, #0
  4007f8:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4007fc:	4293      	cmp	r3, r2
  4007fe:	d1fb      	bne.n	4007f8 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400800:	4a18      	ldr	r2, [pc, #96]	; (400864 <Reset_Handler+0xb0>)
  400802:	4b19      	ldr	r3, [pc, #100]	; (400868 <Reset_Handler+0xb4>)
  400804:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400808:	6093      	str	r3, [r2, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40080a:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40080e:	fab3 f383 	clz	r3, r3
  400812:	095b      	lsrs	r3, r3, #5
  400814:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400816:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  400818:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40081c:	2200      	movs	r2, #0
  40081e:	4b13      	ldr	r3, [pc, #76]	; (40086c <Reset_Handler+0xb8>)
  400820:	701a      	strb	r2, [r3, #0]
	return flags;
  400822:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400824:	4a12      	ldr	r2, [pc, #72]	; (400870 <Reset_Handler+0xbc>)
  400826:	6813      	ldr	r3, [r2, #0]
  400828:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  40082c:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb 0xF":::"memory");
  40082e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400832:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400836:	b129      	cbz	r1, 400844 <Reset_Handler+0x90>
		cpu_irq_enable();
  400838:	2201      	movs	r2, #1
  40083a:	4b0c      	ldr	r3, [pc, #48]	; (40086c <Reset_Handler+0xb8>)
  40083c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  40083e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400842:	b662      	cpsie	i
        __libc_init_array();
  400844:	4b0b      	ldr	r3, [pc, #44]	; (400874 <Reset_Handler+0xc0>)
  400846:	4798      	blx	r3
        main();
  400848:	4b0b      	ldr	r3, [pc, #44]	; (400878 <Reset_Handler+0xc4>)
  40084a:	4798      	blx	r3
  40084c:	e7fe      	b.n	40084c <Reset_Handler+0x98>
  40084e:	bf00      	nop
  400850:	20400000 	.word	0x20400000
  400854:	00403ed4 	.word	0x00403ed4
  400858:	204009b8 	.word	0x204009b8
  40085c:	20400ab4 	.word	0x20400ab4
  400860:	204009b8 	.word	0x204009b8
  400864:	e000ed00 	.word	0xe000ed00
  400868:	00400000 	.word	0x00400000
  40086c:	20400000 	.word	0x20400000
  400870:	e000ed88 	.word	0xe000ed88
  400874:	00400d5d 	.word	0x00400d5d
  400878:	00400c49 	.word	0x00400c49

0040087c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  40087c:	4b3b      	ldr	r3, [pc, #236]	; (40096c <SystemCoreClockUpdate+0xf0>)
  40087e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400880:	f003 0303 	and.w	r3, r3, #3
  400884:	2b01      	cmp	r3, #1
  400886:	d01d      	beq.n	4008c4 <SystemCoreClockUpdate+0x48>
  400888:	b183      	cbz	r3, 4008ac <SystemCoreClockUpdate+0x30>
  40088a:	2b02      	cmp	r3, #2
  40088c:	d036      	beq.n	4008fc <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40088e:	4b37      	ldr	r3, [pc, #220]	; (40096c <SystemCoreClockUpdate+0xf0>)
  400890:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400892:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400896:	2b70      	cmp	r3, #112	; 0x70
  400898:	d05f      	beq.n	40095a <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40089a:	4b34      	ldr	r3, [pc, #208]	; (40096c <SystemCoreClockUpdate+0xf0>)
  40089c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40089e:	4934      	ldr	r1, [pc, #208]	; (400970 <SystemCoreClockUpdate+0xf4>)
  4008a0:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4008a4:	680b      	ldr	r3, [r1, #0]
  4008a6:	40d3      	lsrs	r3, r2
  4008a8:	600b      	str	r3, [r1, #0]
  4008aa:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4008ac:	4b31      	ldr	r3, [pc, #196]	; (400974 <SystemCoreClockUpdate+0xf8>)
  4008ae:	695b      	ldr	r3, [r3, #20]
  4008b0:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4008b4:	bf14      	ite	ne
  4008b6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4008ba:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4008be:	4b2c      	ldr	r3, [pc, #176]	; (400970 <SystemCoreClockUpdate+0xf4>)
  4008c0:	601a      	str	r2, [r3, #0]
  4008c2:	e7e4      	b.n	40088e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4008c4:	4b29      	ldr	r3, [pc, #164]	; (40096c <SystemCoreClockUpdate+0xf0>)
  4008c6:	6a1b      	ldr	r3, [r3, #32]
  4008c8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4008cc:	d003      	beq.n	4008d6 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4008ce:	4a2a      	ldr	r2, [pc, #168]	; (400978 <SystemCoreClockUpdate+0xfc>)
  4008d0:	4b27      	ldr	r3, [pc, #156]	; (400970 <SystemCoreClockUpdate+0xf4>)
  4008d2:	601a      	str	r2, [r3, #0]
  4008d4:	e7db      	b.n	40088e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4008d6:	4a29      	ldr	r2, [pc, #164]	; (40097c <SystemCoreClockUpdate+0x100>)
  4008d8:	4b25      	ldr	r3, [pc, #148]	; (400970 <SystemCoreClockUpdate+0xf4>)
  4008da:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4008dc:	4b23      	ldr	r3, [pc, #140]	; (40096c <SystemCoreClockUpdate+0xf0>)
  4008de:	6a1b      	ldr	r3, [r3, #32]
  4008e0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4008e4:	2b10      	cmp	r3, #16
  4008e6:	d005      	beq.n	4008f4 <SystemCoreClockUpdate+0x78>
  4008e8:	2b20      	cmp	r3, #32
  4008ea:	d1d0      	bne.n	40088e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4008ec:	4a22      	ldr	r2, [pc, #136]	; (400978 <SystemCoreClockUpdate+0xfc>)
  4008ee:	4b20      	ldr	r3, [pc, #128]	; (400970 <SystemCoreClockUpdate+0xf4>)
  4008f0:	601a      	str	r2, [r3, #0]
          break;
  4008f2:	e7cc      	b.n	40088e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4008f4:	4a22      	ldr	r2, [pc, #136]	; (400980 <SystemCoreClockUpdate+0x104>)
  4008f6:	4b1e      	ldr	r3, [pc, #120]	; (400970 <SystemCoreClockUpdate+0xf4>)
  4008f8:	601a      	str	r2, [r3, #0]
          break;
  4008fa:	e7c8      	b.n	40088e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4008fc:	4b1b      	ldr	r3, [pc, #108]	; (40096c <SystemCoreClockUpdate+0xf0>)
  4008fe:	6a1b      	ldr	r3, [r3, #32]
  400900:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400904:	d016      	beq.n	400934 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  400906:	4a1c      	ldr	r2, [pc, #112]	; (400978 <SystemCoreClockUpdate+0xfc>)
  400908:	4b19      	ldr	r3, [pc, #100]	; (400970 <SystemCoreClockUpdate+0xf4>)
  40090a:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  40090c:	4b17      	ldr	r3, [pc, #92]	; (40096c <SystemCoreClockUpdate+0xf0>)
  40090e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400910:	f003 0303 	and.w	r3, r3, #3
  400914:	2b02      	cmp	r3, #2
  400916:	d1ba      	bne.n	40088e <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400918:	4a14      	ldr	r2, [pc, #80]	; (40096c <SystemCoreClockUpdate+0xf0>)
  40091a:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40091c:	6a92      	ldr	r2, [r2, #40]	; 0x28
  40091e:	4814      	ldr	r0, [pc, #80]	; (400970 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400920:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400924:	6803      	ldr	r3, [r0, #0]
  400926:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40092a:	b2d2      	uxtb	r2, r2
  40092c:	fbb3 f3f2 	udiv	r3, r3, r2
  400930:	6003      	str	r3, [r0, #0]
  400932:	e7ac      	b.n	40088e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400934:	4a11      	ldr	r2, [pc, #68]	; (40097c <SystemCoreClockUpdate+0x100>)
  400936:	4b0e      	ldr	r3, [pc, #56]	; (400970 <SystemCoreClockUpdate+0xf4>)
  400938:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40093a:	4b0c      	ldr	r3, [pc, #48]	; (40096c <SystemCoreClockUpdate+0xf0>)
  40093c:	6a1b      	ldr	r3, [r3, #32]
  40093e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400942:	2b10      	cmp	r3, #16
  400944:	d005      	beq.n	400952 <SystemCoreClockUpdate+0xd6>
  400946:	2b20      	cmp	r3, #32
  400948:	d1e0      	bne.n	40090c <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40094a:	4a0b      	ldr	r2, [pc, #44]	; (400978 <SystemCoreClockUpdate+0xfc>)
  40094c:	4b08      	ldr	r3, [pc, #32]	; (400970 <SystemCoreClockUpdate+0xf4>)
  40094e:	601a      	str	r2, [r3, #0]
          break;
  400950:	e7dc      	b.n	40090c <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  400952:	4a0b      	ldr	r2, [pc, #44]	; (400980 <SystemCoreClockUpdate+0x104>)
  400954:	4b06      	ldr	r3, [pc, #24]	; (400970 <SystemCoreClockUpdate+0xf4>)
  400956:	601a      	str	r2, [r3, #0]
          break;
  400958:	e7d8      	b.n	40090c <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40095a:	4a05      	ldr	r2, [pc, #20]	; (400970 <SystemCoreClockUpdate+0xf4>)
  40095c:	6813      	ldr	r3, [r2, #0]
  40095e:	4909      	ldr	r1, [pc, #36]	; (400984 <SystemCoreClockUpdate+0x108>)
  400960:	fba1 1303 	umull	r1, r3, r1, r3
  400964:	085b      	lsrs	r3, r3, #1
  400966:	6013      	str	r3, [r2, #0]
  400968:	4770      	bx	lr
  40096a:	bf00      	nop
  40096c:	400e0600 	.word	0x400e0600
  400970:	20400004 	.word	0x20400004
  400974:	400e1810 	.word	0x400e1810
  400978:	00b71b00 	.word	0x00b71b00
  40097c:	003d0900 	.word	0x003d0900
  400980:	007a1200 	.word	0x007a1200
  400984:	aaaaaaab 	.word	0xaaaaaaab

00400988 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  400988:	4b16      	ldr	r3, [pc, #88]	; (4009e4 <system_init_flash+0x5c>)
  40098a:	4298      	cmp	r0, r3
  40098c:	d913      	bls.n	4009b6 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40098e:	4b16      	ldr	r3, [pc, #88]	; (4009e8 <system_init_flash+0x60>)
  400990:	4298      	cmp	r0, r3
  400992:	d915      	bls.n	4009c0 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  400994:	4b15      	ldr	r3, [pc, #84]	; (4009ec <system_init_flash+0x64>)
  400996:	4298      	cmp	r0, r3
  400998:	d916      	bls.n	4009c8 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40099a:	4b15      	ldr	r3, [pc, #84]	; (4009f0 <system_init_flash+0x68>)
  40099c:	4298      	cmp	r0, r3
  40099e:	d917      	bls.n	4009d0 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4009a0:	4b14      	ldr	r3, [pc, #80]	; (4009f4 <system_init_flash+0x6c>)
  4009a2:	4298      	cmp	r0, r3
  4009a4:	d918      	bls.n	4009d8 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4009a6:	4b14      	ldr	r3, [pc, #80]	; (4009f8 <system_init_flash+0x70>)
  4009a8:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4009aa:	bf94      	ite	ls
  4009ac:	4a13      	ldrls	r2, [pc, #76]	; (4009fc <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4009ae:	4a14      	ldrhi	r2, [pc, #80]	; (400a00 <system_init_flash+0x78>)
  4009b0:	4b14      	ldr	r3, [pc, #80]	; (400a04 <system_init_flash+0x7c>)
  4009b2:	601a      	str	r2, [r3, #0]
  4009b4:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4009b6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4009ba:	4b12      	ldr	r3, [pc, #72]	; (400a04 <system_init_flash+0x7c>)
  4009bc:	601a      	str	r2, [r3, #0]
  4009be:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4009c0:	4a11      	ldr	r2, [pc, #68]	; (400a08 <system_init_flash+0x80>)
  4009c2:	4b10      	ldr	r3, [pc, #64]	; (400a04 <system_init_flash+0x7c>)
  4009c4:	601a      	str	r2, [r3, #0]
  4009c6:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4009c8:	4a10      	ldr	r2, [pc, #64]	; (400a0c <system_init_flash+0x84>)
  4009ca:	4b0e      	ldr	r3, [pc, #56]	; (400a04 <system_init_flash+0x7c>)
  4009cc:	601a      	str	r2, [r3, #0]
  4009ce:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4009d0:	4a0f      	ldr	r2, [pc, #60]	; (400a10 <system_init_flash+0x88>)
  4009d2:	4b0c      	ldr	r3, [pc, #48]	; (400a04 <system_init_flash+0x7c>)
  4009d4:	601a      	str	r2, [r3, #0]
  4009d6:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4009d8:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4009dc:	4b09      	ldr	r3, [pc, #36]	; (400a04 <system_init_flash+0x7c>)
  4009de:	601a      	str	r2, [r3, #0]
  4009e0:	4770      	bx	lr
  4009e2:	bf00      	nop
  4009e4:	015ef3bf 	.word	0x015ef3bf
  4009e8:	02bde77f 	.word	0x02bde77f
  4009ec:	041cdb3f 	.word	0x041cdb3f
  4009f0:	057bceff 	.word	0x057bceff
  4009f4:	06dac2bf 	.word	0x06dac2bf
  4009f8:	0839b67f 	.word	0x0839b67f
  4009fc:	04000500 	.word	0x04000500
  400a00:	04000600 	.word	0x04000600
  400a04:	400e0c00 	.word	0x400e0c00
  400a08:	04000100 	.word	0x04000100
  400a0c:	04000200 	.word	0x04000200
  400a10:	04000300 	.word	0x04000300

00400a14 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a14:	4b0a      	ldr	r3, [pc, #40]	; (400a40 <_sbrk+0x2c>)
  400a16:	681b      	ldr	r3, [r3, #0]
  400a18:	b153      	cbz	r3, 400a30 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400a1a:	4b09      	ldr	r3, [pc, #36]	; (400a40 <_sbrk+0x2c>)
  400a1c:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400a1e:	181a      	adds	r2, r3, r0
  400a20:	4908      	ldr	r1, [pc, #32]	; (400a44 <_sbrk+0x30>)
  400a22:	4291      	cmp	r1, r2
  400a24:	db08      	blt.n	400a38 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400a26:	4610      	mov	r0, r2
  400a28:	4a05      	ldr	r2, [pc, #20]	; (400a40 <_sbrk+0x2c>)
  400a2a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400a2c:	4618      	mov	r0, r3
  400a2e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400a30:	4a05      	ldr	r2, [pc, #20]	; (400a48 <_sbrk+0x34>)
  400a32:	4b03      	ldr	r3, [pc, #12]	; (400a40 <_sbrk+0x2c>)
  400a34:	601a      	str	r2, [r3, #0]
  400a36:	e7f0      	b.n	400a1a <_sbrk+0x6>
		return (caddr_t) -1;	
  400a38:	f04f 30ff 	mov.w	r0, #4294967295
}
  400a3c:	4770      	bx	lr
  400a3e:	bf00      	nop
  400a40:	20400a48 	.word	0x20400a48
  400a44:	2045fffc 	.word	0x2045fffc
  400a48:	20402cb8 	.word	0x20402cb8

00400a4c <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400a4c:	f04f 30ff 	mov.w	r0, #4294967295
  400a50:	4770      	bx	lr

00400a52 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400a52:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400a56:	604b      	str	r3, [r1, #4]

	return 0;
}
  400a58:	2000      	movs	r0, #0
  400a5a:	4770      	bx	lr

00400a5c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400a5c:	2001      	movs	r0, #1
  400a5e:	4770      	bx	lr

00400a60 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400a60:	2000      	movs	r0, #0
  400a62:	4770      	bx	lr

00400a64 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400a64:	b5f0      	push	{r4, r5, r6, r7, lr}
  400a66:	b083      	sub	sp, #12
  400a68:	4605      	mov	r5, r0
  400a6a:	460c      	mov	r4, r1
	uint32_t val = 0;
  400a6c:	2300      	movs	r3, #0
  400a6e:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400a70:	4b2a      	ldr	r3, [pc, #168]	; (400b1c <usart_serial_getchar+0xb8>)
  400a72:	4298      	cmp	r0, r3
  400a74:	d013      	beq.n	400a9e <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400a76:	4b2a      	ldr	r3, [pc, #168]	; (400b20 <usart_serial_getchar+0xbc>)
  400a78:	4298      	cmp	r0, r3
  400a7a:	d018      	beq.n	400aae <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400a7c:	4b29      	ldr	r3, [pc, #164]	; (400b24 <usart_serial_getchar+0xc0>)
  400a7e:	4298      	cmp	r0, r3
  400a80:	d01d      	beq.n	400abe <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  400a82:	4b29      	ldr	r3, [pc, #164]	; (400b28 <usart_serial_getchar+0xc4>)
  400a84:	429d      	cmp	r5, r3
  400a86:	d022      	beq.n	400ace <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400a88:	4b28      	ldr	r3, [pc, #160]	; (400b2c <usart_serial_getchar+0xc8>)
  400a8a:	429d      	cmp	r5, r3
  400a8c:	d027      	beq.n	400ade <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400a8e:	4b28      	ldr	r3, [pc, #160]	; (400b30 <usart_serial_getchar+0xcc>)
  400a90:	429d      	cmp	r5, r3
  400a92:	d02e      	beq.n	400af2 <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  400a94:	4b27      	ldr	r3, [pc, #156]	; (400b34 <usart_serial_getchar+0xd0>)
  400a96:	429d      	cmp	r5, r3
  400a98:	d035      	beq.n	400b06 <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400a9a:	b003      	add	sp, #12
  400a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400a9e:	461f      	mov	r7, r3
  400aa0:	4e25      	ldr	r6, [pc, #148]	; (400b38 <usart_serial_getchar+0xd4>)
  400aa2:	4621      	mov	r1, r4
  400aa4:	4638      	mov	r0, r7
  400aa6:	47b0      	blx	r6
  400aa8:	2800      	cmp	r0, #0
  400aaa:	d1fa      	bne.n	400aa2 <usart_serial_getchar+0x3e>
  400aac:	e7e9      	b.n	400a82 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400aae:	461f      	mov	r7, r3
  400ab0:	4e21      	ldr	r6, [pc, #132]	; (400b38 <usart_serial_getchar+0xd4>)
  400ab2:	4621      	mov	r1, r4
  400ab4:	4638      	mov	r0, r7
  400ab6:	47b0      	blx	r6
  400ab8:	2800      	cmp	r0, #0
  400aba:	d1fa      	bne.n	400ab2 <usart_serial_getchar+0x4e>
  400abc:	e7e4      	b.n	400a88 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  400abe:	461f      	mov	r7, r3
  400ac0:	4e1d      	ldr	r6, [pc, #116]	; (400b38 <usart_serial_getchar+0xd4>)
  400ac2:	4621      	mov	r1, r4
  400ac4:	4638      	mov	r0, r7
  400ac6:	47b0      	blx	r6
  400ac8:	2800      	cmp	r0, #0
  400aca:	d1fa      	bne.n	400ac2 <usart_serial_getchar+0x5e>
  400acc:	e7df      	b.n	400a8e <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  400ace:	461f      	mov	r7, r3
  400ad0:	4e19      	ldr	r6, [pc, #100]	; (400b38 <usart_serial_getchar+0xd4>)
  400ad2:	4621      	mov	r1, r4
  400ad4:	4638      	mov	r0, r7
  400ad6:	47b0      	blx	r6
  400ad8:	2800      	cmp	r0, #0
  400ada:	d1fa      	bne.n	400ad2 <usart_serial_getchar+0x6e>
  400adc:	e7da      	b.n	400a94 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  400ade:	461e      	mov	r6, r3
  400ae0:	4d16      	ldr	r5, [pc, #88]	; (400b3c <usart_serial_getchar+0xd8>)
  400ae2:	a901      	add	r1, sp, #4
  400ae4:	4630      	mov	r0, r6
  400ae6:	47a8      	blx	r5
  400ae8:	2800      	cmp	r0, #0
  400aea:	d1fa      	bne.n	400ae2 <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  400aec:	9b01      	ldr	r3, [sp, #4]
  400aee:	7023      	strb	r3, [r4, #0]
  400af0:	e7d3      	b.n	400a9a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400af2:	461e      	mov	r6, r3
  400af4:	4d11      	ldr	r5, [pc, #68]	; (400b3c <usart_serial_getchar+0xd8>)
  400af6:	a901      	add	r1, sp, #4
  400af8:	4630      	mov	r0, r6
  400afa:	47a8      	blx	r5
  400afc:	2800      	cmp	r0, #0
  400afe:	d1fa      	bne.n	400af6 <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  400b00:	9b01      	ldr	r3, [sp, #4]
  400b02:	7023      	strb	r3, [r4, #0]
  400b04:	e7c9      	b.n	400a9a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400b06:	461e      	mov	r6, r3
  400b08:	4d0c      	ldr	r5, [pc, #48]	; (400b3c <usart_serial_getchar+0xd8>)
  400b0a:	a901      	add	r1, sp, #4
  400b0c:	4630      	mov	r0, r6
  400b0e:	47a8      	blx	r5
  400b10:	2800      	cmp	r0, #0
  400b12:	d1fa      	bne.n	400b0a <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  400b14:	9b01      	ldr	r3, [sp, #4]
  400b16:	7023      	strb	r3, [r4, #0]
}
  400b18:	e7bf      	b.n	400a9a <usart_serial_getchar+0x36>
  400b1a:	bf00      	nop
  400b1c:	400e0800 	.word	0x400e0800
  400b20:	400e0a00 	.word	0x400e0a00
  400b24:	400e1a00 	.word	0x400e1a00
  400b28:	400e1c00 	.word	0x400e1c00
  400b2c:	40024000 	.word	0x40024000
  400b30:	40028000 	.word	0x40028000
  400b34:	4002c000 	.word	0x4002c000
  400b38:	0040068d 	.word	0x0040068d
  400b3c:	0040079b 	.word	0x0040079b

00400b40 <usart_serial_putchar>:
{
  400b40:	b570      	push	{r4, r5, r6, lr}
  400b42:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400b44:	4b2a      	ldr	r3, [pc, #168]	; (400bf0 <usart_serial_putchar+0xb0>)
  400b46:	4298      	cmp	r0, r3
  400b48:	d013      	beq.n	400b72 <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  400b4a:	4b2a      	ldr	r3, [pc, #168]	; (400bf4 <usart_serial_putchar+0xb4>)
  400b4c:	4298      	cmp	r0, r3
  400b4e:	d019      	beq.n	400b84 <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  400b50:	4b29      	ldr	r3, [pc, #164]	; (400bf8 <usart_serial_putchar+0xb8>)
  400b52:	4298      	cmp	r0, r3
  400b54:	d01f      	beq.n	400b96 <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  400b56:	4b29      	ldr	r3, [pc, #164]	; (400bfc <usart_serial_putchar+0xbc>)
  400b58:	4298      	cmp	r0, r3
  400b5a:	d025      	beq.n	400ba8 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  400b5c:	4b28      	ldr	r3, [pc, #160]	; (400c00 <usart_serial_putchar+0xc0>)
  400b5e:	4298      	cmp	r0, r3
  400b60:	d02b      	beq.n	400bba <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  400b62:	4b28      	ldr	r3, [pc, #160]	; (400c04 <usart_serial_putchar+0xc4>)
  400b64:	4298      	cmp	r0, r3
  400b66:	d031      	beq.n	400bcc <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  400b68:	4b27      	ldr	r3, [pc, #156]	; (400c08 <usart_serial_putchar+0xc8>)
  400b6a:	4298      	cmp	r0, r3
  400b6c:	d037      	beq.n	400bde <usart_serial_putchar+0x9e>
	return 0;
  400b6e:	2000      	movs	r0, #0
}
  400b70:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400b72:	461e      	mov	r6, r3
  400b74:	4d25      	ldr	r5, [pc, #148]	; (400c0c <usart_serial_putchar+0xcc>)
  400b76:	4621      	mov	r1, r4
  400b78:	4630      	mov	r0, r6
  400b7a:	47a8      	blx	r5
  400b7c:	2800      	cmp	r0, #0
  400b7e:	d1fa      	bne.n	400b76 <usart_serial_putchar+0x36>
		return 1;
  400b80:	2001      	movs	r0, #1
  400b82:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400b84:	461e      	mov	r6, r3
  400b86:	4d21      	ldr	r5, [pc, #132]	; (400c0c <usart_serial_putchar+0xcc>)
  400b88:	4621      	mov	r1, r4
  400b8a:	4630      	mov	r0, r6
  400b8c:	47a8      	blx	r5
  400b8e:	2800      	cmp	r0, #0
  400b90:	d1fa      	bne.n	400b88 <usart_serial_putchar+0x48>
		return 1;
  400b92:	2001      	movs	r0, #1
  400b94:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400b96:	461e      	mov	r6, r3
  400b98:	4d1c      	ldr	r5, [pc, #112]	; (400c0c <usart_serial_putchar+0xcc>)
  400b9a:	4621      	mov	r1, r4
  400b9c:	4630      	mov	r0, r6
  400b9e:	47a8      	blx	r5
  400ba0:	2800      	cmp	r0, #0
  400ba2:	d1fa      	bne.n	400b9a <usart_serial_putchar+0x5a>
		return 1;
  400ba4:	2001      	movs	r0, #1
  400ba6:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400ba8:	461e      	mov	r6, r3
  400baa:	4d18      	ldr	r5, [pc, #96]	; (400c0c <usart_serial_putchar+0xcc>)
  400bac:	4621      	mov	r1, r4
  400bae:	4630      	mov	r0, r6
  400bb0:	47a8      	blx	r5
  400bb2:	2800      	cmp	r0, #0
  400bb4:	d1fa      	bne.n	400bac <usart_serial_putchar+0x6c>
		return 1;
  400bb6:	2001      	movs	r0, #1
  400bb8:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400bba:	461e      	mov	r6, r3
  400bbc:	4d14      	ldr	r5, [pc, #80]	; (400c10 <usart_serial_putchar+0xd0>)
  400bbe:	4621      	mov	r1, r4
  400bc0:	4630      	mov	r0, r6
  400bc2:	47a8      	blx	r5
  400bc4:	2800      	cmp	r0, #0
  400bc6:	d1fa      	bne.n	400bbe <usart_serial_putchar+0x7e>
		return 1;
  400bc8:	2001      	movs	r0, #1
  400bca:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400bcc:	461e      	mov	r6, r3
  400bce:	4d10      	ldr	r5, [pc, #64]	; (400c10 <usart_serial_putchar+0xd0>)
  400bd0:	4621      	mov	r1, r4
  400bd2:	4630      	mov	r0, r6
  400bd4:	47a8      	blx	r5
  400bd6:	2800      	cmp	r0, #0
  400bd8:	d1fa      	bne.n	400bd0 <usart_serial_putchar+0x90>
		return 1;
  400bda:	2001      	movs	r0, #1
  400bdc:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400bde:	461e      	mov	r6, r3
  400be0:	4d0b      	ldr	r5, [pc, #44]	; (400c10 <usart_serial_putchar+0xd0>)
  400be2:	4621      	mov	r1, r4
  400be4:	4630      	mov	r0, r6
  400be6:	47a8      	blx	r5
  400be8:	2800      	cmp	r0, #0
  400bea:	d1fa      	bne.n	400be2 <usart_serial_putchar+0xa2>
		return 1;
  400bec:	2001      	movs	r0, #1
  400bee:	bd70      	pop	{r4, r5, r6, pc}
  400bf0:	400e0800 	.word	0x400e0800
  400bf4:	400e0a00 	.word	0x400e0a00
  400bf8:	400e1a00 	.word	0x400e1a00
  400bfc:	400e1c00 	.word	0x400e1c00
  400c00:	40024000 	.word	0x40024000
  400c04:	40028000 	.word	0x40028000
  400c08:	4002c000 	.word	0x4002c000
  400c0c:	0040067b 	.word	0x0040067b
  400c10:	00400785 	.word	0x00400785

00400c14 <TRNG_Handler>:
 * \brief Interrupt handler for the TRNG.
 *
 * Display the random value on the terminal.
 */
void TRNG_Handler(void)
{
  400c14:	b508      	push	{r3, lr}
	uint32_t status;

	status = trng_get_interrupt_status(TRNG);
  400c16:	4807      	ldr	r0, [pc, #28]	; (400c34 <TRNG_Handler+0x20>)
  400c18:	4b07      	ldr	r3, [pc, #28]	; (400c38 <TRNG_Handler+0x24>)
  400c1a:	4798      	blx	r3

	if ((status & TRNG_ISR_DATRDY) == TRNG_ISR_DATRDY) {
  400c1c:	f010 0f01 	tst.w	r0, #1
  400c20:	d100      	bne.n	400c24 <TRNG_Handler+0x10>
  400c22:	bd08      	pop	{r3, pc}
		printf("-- Random Value: %lx --\n\r", trng_read_output_data(TRNG));
  400c24:	4803      	ldr	r0, [pc, #12]	; (400c34 <TRNG_Handler+0x20>)
  400c26:	4b05      	ldr	r3, [pc, #20]	; (400c3c <TRNG_Handler+0x28>)
  400c28:	4798      	blx	r3
  400c2a:	4601      	mov	r1, r0
  400c2c:	4804      	ldr	r0, [pc, #16]	; (400c40 <TRNG_Handler+0x2c>)
  400c2e:	4b05      	ldr	r3, [pc, #20]	; (400c44 <TRNG_Handler+0x30>)
  400c30:	4798      	blx	r3
	}
}
  400c32:	e7f6      	b.n	400c22 <TRNG_Handler+0xe>
  400c34:	40070000 	.word	0x40070000
  400c38:	00400673 	.word	0x00400673
  400c3c:	00400677 	.word	0x00400677
  400c40:	00403cc8 	.word	0x00403cc8
  400c44:	00400dad 	.word	0x00400dad

00400c48 <main>:
 * Enable the TRNG, display the generated random value.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  400c48:	b580      	push	{r7, lr}
  400c4a:	b086      	sub	sp, #24
	/* Initialize the SAM system */
	sysclk_init();
  400c4c:	4b29      	ldr	r3, [pc, #164]	; (400cf4 <main+0xac>)
  400c4e:	4798      	blx	r3
	board_init();
  400c50:	4b29      	ldr	r3, [pc, #164]	; (400cf8 <main+0xb0>)
  400c52:	4798      	blx	r3
  400c54:	200e      	movs	r0, #14
  400c56:	4e29      	ldr	r6, [pc, #164]	; (400cfc <main+0xb4>)
  400c58:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400c5a:	4d29      	ldr	r5, [pc, #164]	; (400d00 <main+0xb8>)
  400c5c:	4b29      	ldr	r3, [pc, #164]	; (400d04 <main+0xbc>)
  400c5e:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400c60:	4a29      	ldr	r2, [pc, #164]	; (400d08 <main+0xc0>)
  400c62:	4b2a      	ldr	r3, [pc, #168]	; (400d0c <main+0xc4>)
  400c64:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400c66:	4a2a      	ldr	r2, [pc, #168]	; (400d10 <main+0xc8>)
  400c68:	4b2a      	ldr	r3, [pc, #168]	; (400d14 <main+0xcc>)
  400c6a:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  400c6c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400c70:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
  400c72:	23c0      	movs	r3, #192	; 0xc0
  400c74:	9301      	str	r3, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
  400c76:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400c7a:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
  400c7c:	2400      	movs	r4, #0
  400c7e:	9403      	str	r4, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  400c80:	9404      	str	r4, [sp, #16]
  400c82:	200e      	movs	r0, #14
  400c84:	47b0      	blx	r6
		usart_init_rs232(p_usart, &usart_settings,
  400c86:	4a24      	ldr	r2, [pc, #144]	; (400d18 <main+0xd0>)
  400c88:	4669      	mov	r1, sp
  400c8a:	4628      	mov	r0, r5
  400c8c:	4b23      	ldr	r3, [pc, #140]	; (400d1c <main+0xd4>)
  400c8e:	4798      	blx	r3
		usart_enable_tx(p_usart);
  400c90:	4628      	mov	r0, r5
  400c92:	4b23      	ldr	r3, [pc, #140]	; (400d20 <main+0xd8>)
  400c94:	4798      	blx	r3
		usart_enable_rx(p_usart);
  400c96:	4628      	mov	r0, r5
  400c98:	4b22      	ldr	r3, [pc, #136]	; (400d24 <main+0xdc>)
  400c9a:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400c9c:	4f22      	ldr	r7, [pc, #136]	; (400d28 <main+0xe0>)
  400c9e:	683b      	ldr	r3, [r7, #0]
  400ca0:	4621      	mov	r1, r4
  400ca2:	6898      	ldr	r0, [r3, #8]
  400ca4:	4d21      	ldr	r5, [pc, #132]	; (400d2c <main+0xe4>)
  400ca6:	47a8      	blx	r5
	setbuf(stdin, NULL);
  400ca8:	683b      	ldr	r3, [r7, #0]
  400caa:	4621      	mov	r1, r4
  400cac:	6858      	ldr	r0, [r3, #4]
  400cae:	47a8      	blx	r5

	/* Configure console UART */
	configure_console();

	/* Output example information */
	printf("-- TRNG Example --\n\r");
  400cb0:	481f      	ldr	r0, [pc, #124]	; (400d30 <main+0xe8>)
  400cb2:	4d20      	ldr	r5, [pc, #128]	; (400d34 <main+0xec>)
  400cb4:	47a8      	blx	r5
	printf("-- %s\n\r", BOARD_NAME);
  400cb6:	4920      	ldr	r1, [pc, #128]	; (400d38 <main+0xf0>)
  400cb8:	4820      	ldr	r0, [pc, #128]	; (400d3c <main+0xf4>)
  400cba:	47a8      	blx	r5
	printf("-- Compiled: %s %s --\n\r", __DATE__, __TIME__);
  400cbc:	4a20      	ldr	r2, [pc, #128]	; (400d40 <main+0xf8>)
  400cbe:	4921      	ldr	r1, [pc, #132]	; (400d44 <main+0xfc>)
  400cc0:	4821      	ldr	r0, [pc, #132]	; (400d48 <main+0x100>)
  400cc2:	47a8      	blx	r5

	/* Configure PMC */
	pmc_enable_periph_clk(ID_TRNG);
  400cc4:	2039      	movs	r0, #57	; 0x39
  400cc6:	47b0      	blx	r6

	/* Enable TRNG */
	trng_enable(TRNG);
  400cc8:	4d20      	ldr	r5, [pc, #128]	; (400d4c <main+0x104>)
  400cca:	4628      	mov	r0, r5
  400ccc:	4b20      	ldr	r3, [pc, #128]	; (400d50 <main+0x108>)
  400cce:	4798      	blx	r3
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400cd0:	4b20      	ldr	r3, [pc, #128]	; (400d54 <main+0x10c>)
  400cd2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400cd6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
  400cda:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400cde:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400ce2:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400ce6:	f883 4339 	strb.w	r4, [r3, #825]	; 0x339
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400cea:	605a      	str	r2, [r3, #4]
	/* Enable TRNG interrupt */
	NVIC_DisableIRQ(TRNG_IRQn);
	NVIC_ClearPendingIRQ(TRNG_IRQn);
	NVIC_SetPriority(TRNG_IRQn, 0);
	NVIC_EnableIRQ(TRNG_IRQn);
	trng_enable_interrupt(TRNG);
  400cec:	4628      	mov	r0, r5
  400cee:	4b1a      	ldr	r3, [pc, #104]	; (400d58 <main+0x110>)
  400cf0:	4798      	blx	r3
  400cf2:	e7fe      	b.n	400cf2 <main+0xaa>
  400cf4:	004001d5 	.word	0x004001d5
  400cf8:	004002d1 	.word	0x004002d1
  400cfc:	00400641 	.word	0x00400641
  400d00:	40028000 	.word	0x40028000
  400d04:	20400a88 	.word	0x20400a88
  400d08:	00400b41 	.word	0x00400b41
  400d0c:	20400a84 	.word	0x20400a84
  400d10:	00400a65 	.word	0x00400a65
  400d14:	20400a80 	.word	0x20400a80
  400d18:	08f0d180 	.word	0x08f0d180
  400d1c:	00400725 	.word	0x00400725
  400d20:	00400779 	.word	0x00400779
  400d24:	0040077f 	.word	0x0040077f
  400d28:	20400008 	.word	0x20400008
  400d2c:	00400e71 	.word	0x00400e71
  400d30:	00403ce4 	.word	0x00403ce4
  400d34:	00400dad 	.word	0x00400dad
  400d38:	00403cfc 	.word	0x00403cfc
  400d3c:	00403d08 	.word	0x00403d08
  400d40:	00403d10 	.word	0x00403d10
  400d44:	00403d1c 	.word	0x00403d1c
  400d48:	00403d28 	.word	0x00403d28
  400d4c:	40070000 	.word	0x40070000
  400d50:	00400661 	.word	0x00400661
  400d54:	e000e100 	.word	0xe000e100
  400d58:	0040066d 	.word	0x0040066d

00400d5c <__libc_init_array>:
  400d5c:	b570      	push	{r4, r5, r6, lr}
  400d5e:	4e0f      	ldr	r6, [pc, #60]	; (400d9c <__libc_init_array+0x40>)
  400d60:	4d0f      	ldr	r5, [pc, #60]	; (400da0 <__libc_init_array+0x44>)
  400d62:	1b76      	subs	r6, r6, r5
  400d64:	10b6      	asrs	r6, r6, #2
  400d66:	bf18      	it	ne
  400d68:	2400      	movne	r4, #0
  400d6a:	d005      	beq.n	400d78 <__libc_init_array+0x1c>
  400d6c:	3401      	adds	r4, #1
  400d6e:	f855 3b04 	ldr.w	r3, [r5], #4
  400d72:	4798      	blx	r3
  400d74:	42a6      	cmp	r6, r4
  400d76:	d1f9      	bne.n	400d6c <__libc_init_array+0x10>
  400d78:	4e0a      	ldr	r6, [pc, #40]	; (400da4 <__libc_init_array+0x48>)
  400d7a:	4d0b      	ldr	r5, [pc, #44]	; (400da8 <__libc_init_array+0x4c>)
  400d7c:	1b76      	subs	r6, r6, r5
  400d7e:	f003 f893 	bl	403ea8 <_init>
  400d82:	10b6      	asrs	r6, r6, #2
  400d84:	bf18      	it	ne
  400d86:	2400      	movne	r4, #0
  400d88:	d006      	beq.n	400d98 <__libc_init_array+0x3c>
  400d8a:	3401      	adds	r4, #1
  400d8c:	f855 3b04 	ldr.w	r3, [r5], #4
  400d90:	4798      	blx	r3
  400d92:	42a6      	cmp	r6, r4
  400d94:	d1f9      	bne.n	400d8a <__libc_init_array+0x2e>
  400d96:	bd70      	pop	{r4, r5, r6, pc}
  400d98:	bd70      	pop	{r4, r5, r6, pc}
  400d9a:	bf00      	nop
  400d9c:	00403eb4 	.word	0x00403eb4
  400da0:	00403eb4 	.word	0x00403eb4
  400da4:	00403ebc 	.word	0x00403ebc
  400da8:	00403eb4 	.word	0x00403eb4

00400dac <iprintf>:
  400dac:	b40f      	push	{r0, r1, r2, r3}
  400dae:	b500      	push	{lr}
  400db0:	4907      	ldr	r1, [pc, #28]	; (400dd0 <iprintf+0x24>)
  400db2:	b083      	sub	sp, #12
  400db4:	ab04      	add	r3, sp, #16
  400db6:	6808      	ldr	r0, [r1, #0]
  400db8:	f853 2b04 	ldr.w	r2, [r3], #4
  400dbc:	6881      	ldr	r1, [r0, #8]
  400dbe:	9301      	str	r3, [sp, #4]
  400dc0:	f000 f966 	bl	401090 <_vfiprintf_r>
  400dc4:	b003      	add	sp, #12
  400dc6:	f85d eb04 	ldr.w	lr, [sp], #4
  400dca:	b004      	add	sp, #16
  400dcc:	4770      	bx	lr
  400dce:	bf00      	nop
  400dd0:	20400008 	.word	0x20400008

00400dd4 <memset>:
  400dd4:	b470      	push	{r4, r5, r6}
  400dd6:	0786      	lsls	r6, r0, #30
  400dd8:	d046      	beq.n	400e68 <memset+0x94>
  400dda:	1e54      	subs	r4, r2, #1
  400ddc:	2a00      	cmp	r2, #0
  400dde:	d041      	beq.n	400e64 <memset+0x90>
  400de0:	b2ca      	uxtb	r2, r1
  400de2:	4603      	mov	r3, r0
  400de4:	e002      	b.n	400dec <memset+0x18>
  400de6:	f114 34ff 	adds.w	r4, r4, #4294967295
  400dea:	d33b      	bcc.n	400e64 <memset+0x90>
  400dec:	f803 2b01 	strb.w	r2, [r3], #1
  400df0:	079d      	lsls	r5, r3, #30
  400df2:	d1f8      	bne.n	400de6 <memset+0x12>
  400df4:	2c03      	cmp	r4, #3
  400df6:	d92e      	bls.n	400e56 <memset+0x82>
  400df8:	b2cd      	uxtb	r5, r1
  400dfa:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  400dfe:	2c0f      	cmp	r4, #15
  400e00:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  400e04:	d919      	bls.n	400e3a <memset+0x66>
  400e06:	f103 0210 	add.w	r2, r3, #16
  400e0a:	4626      	mov	r6, r4
  400e0c:	3e10      	subs	r6, #16
  400e0e:	2e0f      	cmp	r6, #15
  400e10:	f842 5c10 	str.w	r5, [r2, #-16]
  400e14:	f842 5c0c 	str.w	r5, [r2, #-12]
  400e18:	f842 5c08 	str.w	r5, [r2, #-8]
  400e1c:	f842 5c04 	str.w	r5, [r2, #-4]
  400e20:	f102 0210 	add.w	r2, r2, #16
  400e24:	d8f2      	bhi.n	400e0c <memset+0x38>
  400e26:	f1a4 0210 	sub.w	r2, r4, #16
  400e2a:	f022 020f 	bic.w	r2, r2, #15
  400e2e:	f004 040f 	and.w	r4, r4, #15
  400e32:	3210      	adds	r2, #16
  400e34:	2c03      	cmp	r4, #3
  400e36:	4413      	add	r3, r2
  400e38:	d90d      	bls.n	400e56 <memset+0x82>
  400e3a:	461e      	mov	r6, r3
  400e3c:	4622      	mov	r2, r4
  400e3e:	3a04      	subs	r2, #4
  400e40:	2a03      	cmp	r2, #3
  400e42:	f846 5b04 	str.w	r5, [r6], #4
  400e46:	d8fa      	bhi.n	400e3e <memset+0x6a>
  400e48:	1f22      	subs	r2, r4, #4
  400e4a:	f022 0203 	bic.w	r2, r2, #3
  400e4e:	3204      	adds	r2, #4
  400e50:	4413      	add	r3, r2
  400e52:	f004 0403 	and.w	r4, r4, #3
  400e56:	b12c      	cbz	r4, 400e64 <memset+0x90>
  400e58:	b2c9      	uxtb	r1, r1
  400e5a:	441c      	add	r4, r3
  400e5c:	f803 1b01 	strb.w	r1, [r3], #1
  400e60:	429c      	cmp	r4, r3
  400e62:	d1fb      	bne.n	400e5c <memset+0x88>
  400e64:	bc70      	pop	{r4, r5, r6}
  400e66:	4770      	bx	lr
  400e68:	4614      	mov	r4, r2
  400e6a:	4603      	mov	r3, r0
  400e6c:	e7c2      	b.n	400df4 <memset+0x20>
  400e6e:	bf00      	nop

00400e70 <setbuf>:
  400e70:	2900      	cmp	r1, #0
  400e72:	bf0c      	ite	eq
  400e74:	2202      	moveq	r2, #2
  400e76:	2200      	movne	r2, #0
  400e78:	f44f 6380 	mov.w	r3, #1024	; 0x400
  400e7c:	f000 b800 	b.w	400e80 <setvbuf>

00400e80 <setvbuf>:
  400e80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400e84:	4c61      	ldr	r4, [pc, #388]	; (40100c <setvbuf+0x18c>)
  400e86:	6825      	ldr	r5, [r4, #0]
  400e88:	b083      	sub	sp, #12
  400e8a:	4604      	mov	r4, r0
  400e8c:	460f      	mov	r7, r1
  400e8e:	4690      	mov	r8, r2
  400e90:	461e      	mov	r6, r3
  400e92:	b115      	cbz	r5, 400e9a <setvbuf+0x1a>
  400e94:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400e96:	2b00      	cmp	r3, #0
  400e98:	d064      	beq.n	400f64 <setvbuf+0xe4>
  400e9a:	f1b8 0f02 	cmp.w	r8, #2
  400e9e:	d006      	beq.n	400eae <setvbuf+0x2e>
  400ea0:	f1b8 0f01 	cmp.w	r8, #1
  400ea4:	f200 809f 	bhi.w	400fe6 <setvbuf+0x166>
  400ea8:	2e00      	cmp	r6, #0
  400eaa:	f2c0 809c 	blt.w	400fe6 <setvbuf+0x166>
  400eae:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400eb0:	07d8      	lsls	r0, r3, #31
  400eb2:	d534      	bpl.n	400f1e <setvbuf+0x9e>
  400eb4:	4621      	mov	r1, r4
  400eb6:	4628      	mov	r0, r5
  400eb8:	f001 f888 	bl	401fcc <_fflush_r>
  400ebc:	6b21      	ldr	r1, [r4, #48]	; 0x30
  400ebe:	b141      	cbz	r1, 400ed2 <setvbuf+0x52>
  400ec0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  400ec4:	4299      	cmp	r1, r3
  400ec6:	d002      	beq.n	400ece <setvbuf+0x4e>
  400ec8:	4628      	mov	r0, r5
  400eca:	f001 f9fd 	bl	4022c8 <_free_r>
  400ece:	2300      	movs	r3, #0
  400ed0:	6323      	str	r3, [r4, #48]	; 0x30
  400ed2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400ed6:	2200      	movs	r2, #0
  400ed8:	61a2      	str	r2, [r4, #24]
  400eda:	6062      	str	r2, [r4, #4]
  400edc:	061a      	lsls	r2, r3, #24
  400ede:	d43a      	bmi.n	400f56 <setvbuf+0xd6>
  400ee0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  400ee4:	f023 0303 	bic.w	r3, r3, #3
  400ee8:	f1b8 0f02 	cmp.w	r8, #2
  400eec:	81a3      	strh	r3, [r4, #12]
  400eee:	d01d      	beq.n	400f2c <setvbuf+0xac>
  400ef0:	ab01      	add	r3, sp, #4
  400ef2:	466a      	mov	r2, sp
  400ef4:	4621      	mov	r1, r4
  400ef6:	4628      	mov	r0, r5
  400ef8:	f001 fc84 	bl	402804 <__swhatbuf_r>
  400efc:	89a3      	ldrh	r3, [r4, #12]
  400efe:	4318      	orrs	r0, r3
  400f00:	81a0      	strh	r0, [r4, #12]
  400f02:	2e00      	cmp	r6, #0
  400f04:	d132      	bne.n	400f6c <setvbuf+0xec>
  400f06:	9e00      	ldr	r6, [sp, #0]
  400f08:	4630      	mov	r0, r6
  400f0a:	f001 fcf3 	bl	4028f4 <malloc>
  400f0e:	4607      	mov	r7, r0
  400f10:	2800      	cmp	r0, #0
  400f12:	d06b      	beq.n	400fec <setvbuf+0x16c>
  400f14:	89a3      	ldrh	r3, [r4, #12]
  400f16:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400f1a:	81a3      	strh	r3, [r4, #12]
  400f1c:	e028      	b.n	400f70 <setvbuf+0xf0>
  400f1e:	89a3      	ldrh	r3, [r4, #12]
  400f20:	0599      	lsls	r1, r3, #22
  400f22:	d4c7      	bmi.n	400eb4 <setvbuf+0x34>
  400f24:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400f26:	f001 fc69 	bl	4027fc <__retarget_lock_acquire_recursive>
  400f2a:	e7c3      	b.n	400eb4 <setvbuf+0x34>
  400f2c:	2500      	movs	r5, #0
  400f2e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  400f30:	2600      	movs	r6, #0
  400f32:	f104 0243 	add.w	r2, r4, #67	; 0x43
  400f36:	f043 0302 	orr.w	r3, r3, #2
  400f3a:	2001      	movs	r0, #1
  400f3c:	60a6      	str	r6, [r4, #8]
  400f3e:	07ce      	lsls	r6, r1, #31
  400f40:	81a3      	strh	r3, [r4, #12]
  400f42:	6022      	str	r2, [r4, #0]
  400f44:	6122      	str	r2, [r4, #16]
  400f46:	6160      	str	r0, [r4, #20]
  400f48:	d401      	bmi.n	400f4e <setvbuf+0xce>
  400f4a:	0598      	lsls	r0, r3, #22
  400f4c:	d53e      	bpl.n	400fcc <setvbuf+0x14c>
  400f4e:	4628      	mov	r0, r5
  400f50:	b003      	add	sp, #12
  400f52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400f56:	6921      	ldr	r1, [r4, #16]
  400f58:	4628      	mov	r0, r5
  400f5a:	f001 f9b5 	bl	4022c8 <_free_r>
  400f5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400f62:	e7bd      	b.n	400ee0 <setvbuf+0x60>
  400f64:	4628      	mov	r0, r5
  400f66:	f001 f889 	bl	40207c <__sinit>
  400f6a:	e796      	b.n	400e9a <setvbuf+0x1a>
  400f6c:	2f00      	cmp	r7, #0
  400f6e:	d0cb      	beq.n	400f08 <setvbuf+0x88>
  400f70:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400f72:	2b00      	cmp	r3, #0
  400f74:	d033      	beq.n	400fde <setvbuf+0x15e>
  400f76:	9b00      	ldr	r3, [sp, #0]
  400f78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  400f7c:	6027      	str	r7, [r4, #0]
  400f7e:	429e      	cmp	r6, r3
  400f80:	bf1c      	itt	ne
  400f82:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  400f86:	81a2      	strhne	r2, [r4, #12]
  400f88:	f1b8 0f01 	cmp.w	r8, #1
  400f8c:	bf04      	itt	eq
  400f8e:	f042 0201 	orreq.w	r2, r2, #1
  400f92:	81a2      	strheq	r2, [r4, #12]
  400f94:	b292      	uxth	r2, r2
  400f96:	f012 0308 	ands.w	r3, r2, #8
  400f9a:	6127      	str	r7, [r4, #16]
  400f9c:	6166      	str	r6, [r4, #20]
  400f9e:	d00e      	beq.n	400fbe <setvbuf+0x13e>
  400fa0:	07d1      	lsls	r1, r2, #31
  400fa2:	d51a      	bpl.n	400fda <setvbuf+0x15a>
  400fa4:	6e65      	ldr	r5, [r4, #100]	; 0x64
  400fa6:	4276      	negs	r6, r6
  400fa8:	2300      	movs	r3, #0
  400faa:	f015 0501 	ands.w	r5, r5, #1
  400fae:	61a6      	str	r6, [r4, #24]
  400fb0:	60a3      	str	r3, [r4, #8]
  400fb2:	d009      	beq.n	400fc8 <setvbuf+0x148>
  400fb4:	2500      	movs	r5, #0
  400fb6:	4628      	mov	r0, r5
  400fb8:	b003      	add	sp, #12
  400fba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400fbe:	60a3      	str	r3, [r4, #8]
  400fc0:	6e65      	ldr	r5, [r4, #100]	; 0x64
  400fc2:	f015 0501 	ands.w	r5, r5, #1
  400fc6:	d1f5      	bne.n	400fb4 <setvbuf+0x134>
  400fc8:	0593      	lsls	r3, r2, #22
  400fca:	d4c0      	bmi.n	400f4e <setvbuf+0xce>
  400fcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400fce:	f001 fc17 	bl	402800 <__retarget_lock_release_recursive>
  400fd2:	4628      	mov	r0, r5
  400fd4:	b003      	add	sp, #12
  400fd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400fda:	60a6      	str	r6, [r4, #8]
  400fdc:	e7f0      	b.n	400fc0 <setvbuf+0x140>
  400fde:	4628      	mov	r0, r5
  400fe0:	f001 f84c 	bl	40207c <__sinit>
  400fe4:	e7c7      	b.n	400f76 <setvbuf+0xf6>
  400fe6:	f04f 35ff 	mov.w	r5, #4294967295
  400fea:	e7b0      	b.n	400f4e <setvbuf+0xce>
  400fec:	f8dd 9000 	ldr.w	r9, [sp]
  400ff0:	45b1      	cmp	r9, r6
  400ff2:	d004      	beq.n	400ffe <setvbuf+0x17e>
  400ff4:	4648      	mov	r0, r9
  400ff6:	f001 fc7d 	bl	4028f4 <malloc>
  400ffa:	4607      	mov	r7, r0
  400ffc:	b920      	cbnz	r0, 401008 <setvbuf+0x188>
  400ffe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401002:	f04f 35ff 	mov.w	r5, #4294967295
  401006:	e792      	b.n	400f2e <setvbuf+0xae>
  401008:	464e      	mov	r6, r9
  40100a:	e783      	b.n	400f14 <setvbuf+0x94>
  40100c:	20400008 	.word	0x20400008

00401010 <__sprint_r.part.0>:
  401010:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401014:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  401016:	049c      	lsls	r4, r3, #18
  401018:	4693      	mov	fp, r2
  40101a:	d52f      	bpl.n	40107c <__sprint_r.part.0+0x6c>
  40101c:	6893      	ldr	r3, [r2, #8]
  40101e:	6812      	ldr	r2, [r2, #0]
  401020:	b353      	cbz	r3, 401078 <__sprint_r.part.0+0x68>
  401022:	460e      	mov	r6, r1
  401024:	4607      	mov	r7, r0
  401026:	f102 0908 	add.w	r9, r2, #8
  40102a:	e919 0420 	ldmdb	r9, {r5, sl}
  40102e:	ea5f 089a 	movs.w	r8, sl, lsr #2
  401032:	d017      	beq.n	401064 <__sprint_r.part.0+0x54>
  401034:	3d04      	subs	r5, #4
  401036:	2400      	movs	r4, #0
  401038:	e001      	b.n	40103e <__sprint_r.part.0+0x2e>
  40103a:	45a0      	cmp	r8, r4
  40103c:	d010      	beq.n	401060 <__sprint_r.part.0+0x50>
  40103e:	4632      	mov	r2, r6
  401040:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401044:	4638      	mov	r0, r7
  401046:	f001 f8bb 	bl	4021c0 <_fputwc_r>
  40104a:	1c43      	adds	r3, r0, #1
  40104c:	f104 0401 	add.w	r4, r4, #1
  401050:	d1f3      	bne.n	40103a <__sprint_r.part.0+0x2a>
  401052:	2300      	movs	r3, #0
  401054:	f8cb 3008 	str.w	r3, [fp, #8]
  401058:	f8cb 3004 	str.w	r3, [fp, #4]
  40105c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401060:	f8db 3008 	ldr.w	r3, [fp, #8]
  401064:	f02a 0a03 	bic.w	sl, sl, #3
  401068:	eba3 030a 	sub.w	r3, r3, sl
  40106c:	f8cb 3008 	str.w	r3, [fp, #8]
  401070:	f109 0908 	add.w	r9, r9, #8
  401074:	2b00      	cmp	r3, #0
  401076:	d1d8      	bne.n	40102a <__sprint_r.part.0+0x1a>
  401078:	2000      	movs	r0, #0
  40107a:	e7ea      	b.n	401052 <__sprint_r.part.0+0x42>
  40107c:	f001 fa0a 	bl	402494 <__sfvwrite_r>
  401080:	2300      	movs	r3, #0
  401082:	f8cb 3008 	str.w	r3, [fp, #8]
  401086:	f8cb 3004 	str.w	r3, [fp, #4]
  40108a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40108e:	bf00      	nop

00401090 <_vfiprintf_r>:
  401090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401094:	b0ad      	sub	sp, #180	; 0xb4
  401096:	461d      	mov	r5, r3
  401098:	468b      	mov	fp, r1
  40109a:	4690      	mov	r8, r2
  40109c:	9307      	str	r3, [sp, #28]
  40109e:	9006      	str	r0, [sp, #24]
  4010a0:	b118      	cbz	r0, 4010aa <_vfiprintf_r+0x1a>
  4010a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4010a4:	2b00      	cmp	r3, #0
  4010a6:	f000 80f3 	beq.w	401290 <_vfiprintf_r+0x200>
  4010aa:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4010ae:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4010b2:	07df      	lsls	r7, r3, #31
  4010b4:	b281      	uxth	r1, r0
  4010b6:	d402      	bmi.n	4010be <_vfiprintf_r+0x2e>
  4010b8:	058e      	lsls	r6, r1, #22
  4010ba:	f140 80fc 	bpl.w	4012b6 <_vfiprintf_r+0x226>
  4010be:	048c      	lsls	r4, r1, #18
  4010c0:	d40a      	bmi.n	4010d8 <_vfiprintf_r+0x48>
  4010c2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4010c6:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4010ca:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4010ce:	f8ab 100c 	strh.w	r1, [fp, #12]
  4010d2:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4010d6:	b289      	uxth	r1, r1
  4010d8:	0708      	lsls	r0, r1, #28
  4010da:	f140 80b3 	bpl.w	401244 <_vfiprintf_r+0x1b4>
  4010de:	f8db 3010 	ldr.w	r3, [fp, #16]
  4010e2:	2b00      	cmp	r3, #0
  4010e4:	f000 80ae 	beq.w	401244 <_vfiprintf_r+0x1b4>
  4010e8:	f001 031a 	and.w	r3, r1, #26
  4010ec:	2b0a      	cmp	r3, #10
  4010ee:	f000 80b5 	beq.w	40125c <_vfiprintf_r+0x1cc>
  4010f2:	2300      	movs	r3, #0
  4010f4:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4010f8:	930b      	str	r3, [sp, #44]	; 0x2c
  4010fa:	9311      	str	r3, [sp, #68]	; 0x44
  4010fc:	9310      	str	r3, [sp, #64]	; 0x40
  4010fe:	9303      	str	r3, [sp, #12]
  401100:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  401104:	46ca      	mov	sl, r9
  401106:	f8cd b010 	str.w	fp, [sp, #16]
  40110a:	f898 3000 	ldrb.w	r3, [r8]
  40110e:	4644      	mov	r4, r8
  401110:	b1fb      	cbz	r3, 401152 <_vfiprintf_r+0xc2>
  401112:	2b25      	cmp	r3, #37	; 0x25
  401114:	d102      	bne.n	40111c <_vfiprintf_r+0x8c>
  401116:	e01c      	b.n	401152 <_vfiprintf_r+0xc2>
  401118:	2b25      	cmp	r3, #37	; 0x25
  40111a:	d003      	beq.n	401124 <_vfiprintf_r+0x94>
  40111c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401120:	2b00      	cmp	r3, #0
  401122:	d1f9      	bne.n	401118 <_vfiprintf_r+0x88>
  401124:	eba4 0508 	sub.w	r5, r4, r8
  401128:	b19d      	cbz	r5, 401152 <_vfiprintf_r+0xc2>
  40112a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40112c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40112e:	f8ca 8000 	str.w	r8, [sl]
  401132:	3301      	adds	r3, #1
  401134:	442a      	add	r2, r5
  401136:	2b07      	cmp	r3, #7
  401138:	f8ca 5004 	str.w	r5, [sl, #4]
  40113c:	9211      	str	r2, [sp, #68]	; 0x44
  40113e:	9310      	str	r3, [sp, #64]	; 0x40
  401140:	dd7a      	ble.n	401238 <_vfiprintf_r+0x1a8>
  401142:	2a00      	cmp	r2, #0
  401144:	f040 84b0 	bne.w	401aa8 <_vfiprintf_r+0xa18>
  401148:	9b03      	ldr	r3, [sp, #12]
  40114a:	9210      	str	r2, [sp, #64]	; 0x40
  40114c:	442b      	add	r3, r5
  40114e:	46ca      	mov	sl, r9
  401150:	9303      	str	r3, [sp, #12]
  401152:	7823      	ldrb	r3, [r4, #0]
  401154:	2b00      	cmp	r3, #0
  401156:	f000 83e0 	beq.w	40191a <_vfiprintf_r+0x88a>
  40115a:	2000      	movs	r0, #0
  40115c:	f04f 0300 	mov.w	r3, #0
  401160:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  401164:	f104 0801 	add.w	r8, r4, #1
  401168:	7862      	ldrb	r2, [r4, #1]
  40116a:	4605      	mov	r5, r0
  40116c:	4606      	mov	r6, r0
  40116e:	4603      	mov	r3, r0
  401170:	f04f 34ff 	mov.w	r4, #4294967295
  401174:	f108 0801 	add.w	r8, r8, #1
  401178:	f1a2 0120 	sub.w	r1, r2, #32
  40117c:	2958      	cmp	r1, #88	; 0x58
  40117e:	f200 82de 	bhi.w	40173e <_vfiprintf_r+0x6ae>
  401182:	e8df f011 	tbh	[pc, r1, lsl #1]
  401186:	0221      	.short	0x0221
  401188:	02dc02dc 	.word	0x02dc02dc
  40118c:	02dc0229 	.word	0x02dc0229
  401190:	02dc02dc 	.word	0x02dc02dc
  401194:	02dc02dc 	.word	0x02dc02dc
  401198:	028902dc 	.word	0x028902dc
  40119c:	02dc0295 	.word	0x02dc0295
  4011a0:	02bd00a2 	.word	0x02bd00a2
  4011a4:	019f02dc 	.word	0x019f02dc
  4011a8:	01a401a4 	.word	0x01a401a4
  4011ac:	01a401a4 	.word	0x01a401a4
  4011b0:	01a401a4 	.word	0x01a401a4
  4011b4:	01a401a4 	.word	0x01a401a4
  4011b8:	02dc01a4 	.word	0x02dc01a4
  4011bc:	02dc02dc 	.word	0x02dc02dc
  4011c0:	02dc02dc 	.word	0x02dc02dc
  4011c4:	02dc02dc 	.word	0x02dc02dc
  4011c8:	02dc02dc 	.word	0x02dc02dc
  4011cc:	01b202dc 	.word	0x01b202dc
  4011d0:	02dc02dc 	.word	0x02dc02dc
  4011d4:	02dc02dc 	.word	0x02dc02dc
  4011d8:	02dc02dc 	.word	0x02dc02dc
  4011dc:	02dc02dc 	.word	0x02dc02dc
  4011e0:	02dc02dc 	.word	0x02dc02dc
  4011e4:	02dc0197 	.word	0x02dc0197
  4011e8:	02dc02dc 	.word	0x02dc02dc
  4011ec:	02dc02dc 	.word	0x02dc02dc
  4011f0:	02dc019b 	.word	0x02dc019b
  4011f4:	025302dc 	.word	0x025302dc
  4011f8:	02dc02dc 	.word	0x02dc02dc
  4011fc:	02dc02dc 	.word	0x02dc02dc
  401200:	02dc02dc 	.word	0x02dc02dc
  401204:	02dc02dc 	.word	0x02dc02dc
  401208:	02dc02dc 	.word	0x02dc02dc
  40120c:	021b025a 	.word	0x021b025a
  401210:	02dc02dc 	.word	0x02dc02dc
  401214:	026e02dc 	.word	0x026e02dc
  401218:	02dc021b 	.word	0x02dc021b
  40121c:	027302dc 	.word	0x027302dc
  401220:	01f502dc 	.word	0x01f502dc
  401224:	02090182 	.word	0x02090182
  401228:	02dc02d7 	.word	0x02dc02d7
  40122c:	02dc029a 	.word	0x02dc029a
  401230:	02dc00a7 	.word	0x02dc00a7
  401234:	022e02dc 	.word	0x022e02dc
  401238:	f10a 0a08 	add.w	sl, sl, #8
  40123c:	9b03      	ldr	r3, [sp, #12]
  40123e:	442b      	add	r3, r5
  401240:	9303      	str	r3, [sp, #12]
  401242:	e786      	b.n	401152 <_vfiprintf_r+0xc2>
  401244:	4659      	mov	r1, fp
  401246:	9806      	ldr	r0, [sp, #24]
  401248:	f000 fdac 	bl	401da4 <__swsetup_r>
  40124c:	bb18      	cbnz	r0, 401296 <_vfiprintf_r+0x206>
  40124e:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  401252:	f001 031a 	and.w	r3, r1, #26
  401256:	2b0a      	cmp	r3, #10
  401258:	f47f af4b 	bne.w	4010f2 <_vfiprintf_r+0x62>
  40125c:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  401260:	2b00      	cmp	r3, #0
  401262:	f6ff af46 	blt.w	4010f2 <_vfiprintf_r+0x62>
  401266:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40126a:	07db      	lsls	r3, r3, #31
  40126c:	d405      	bmi.n	40127a <_vfiprintf_r+0x1ea>
  40126e:	058f      	lsls	r7, r1, #22
  401270:	d403      	bmi.n	40127a <_vfiprintf_r+0x1ea>
  401272:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401276:	f001 fac3 	bl	402800 <__retarget_lock_release_recursive>
  40127a:	462b      	mov	r3, r5
  40127c:	4642      	mov	r2, r8
  40127e:	4659      	mov	r1, fp
  401280:	9806      	ldr	r0, [sp, #24]
  401282:	f000 fd4d 	bl	401d20 <__sbprintf>
  401286:	9003      	str	r0, [sp, #12]
  401288:	9803      	ldr	r0, [sp, #12]
  40128a:	b02d      	add	sp, #180	; 0xb4
  40128c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401290:	f000 fef4 	bl	40207c <__sinit>
  401294:	e709      	b.n	4010aa <_vfiprintf_r+0x1a>
  401296:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40129a:	07d9      	lsls	r1, r3, #31
  40129c:	d404      	bmi.n	4012a8 <_vfiprintf_r+0x218>
  40129e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4012a2:	059a      	lsls	r2, r3, #22
  4012a4:	f140 84aa 	bpl.w	401bfc <_vfiprintf_r+0xb6c>
  4012a8:	f04f 33ff 	mov.w	r3, #4294967295
  4012ac:	9303      	str	r3, [sp, #12]
  4012ae:	9803      	ldr	r0, [sp, #12]
  4012b0:	b02d      	add	sp, #180	; 0xb4
  4012b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4012b6:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4012ba:	f001 fa9f 	bl	4027fc <__retarget_lock_acquire_recursive>
  4012be:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4012c2:	b281      	uxth	r1, r0
  4012c4:	e6fb      	b.n	4010be <_vfiprintf_r+0x2e>
  4012c6:	4276      	negs	r6, r6
  4012c8:	9207      	str	r2, [sp, #28]
  4012ca:	f043 0304 	orr.w	r3, r3, #4
  4012ce:	f898 2000 	ldrb.w	r2, [r8]
  4012d2:	e74f      	b.n	401174 <_vfiprintf_r+0xe4>
  4012d4:	9608      	str	r6, [sp, #32]
  4012d6:	069e      	lsls	r6, r3, #26
  4012d8:	f100 8450 	bmi.w	401b7c <_vfiprintf_r+0xaec>
  4012dc:	9907      	ldr	r1, [sp, #28]
  4012de:	06dd      	lsls	r5, r3, #27
  4012e0:	460a      	mov	r2, r1
  4012e2:	f100 83ef 	bmi.w	401ac4 <_vfiprintf_r+0xa34>
  4012e6:	0658      	lsls	r0, r3, #25
  4012e8:	f140 83ec 	bpl.w	401ac4 <_vfiprintf_r+0xa34>
  4012ec:	880e      	ldrh	r6, [r1, #0]
  4012ee:	3104      	adds	r1, #4
  4012f0:	2700      	movs	r7, #0
  4012f2:	2201      	movs	r2, #1
  4012f4:	9107      	str	r1, [sp, #28]
  4012f6:	f04f 0100 	mov.w	r1, #0
  4012fa:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  4012fe:	2500      	movs	r5, #0
  401300:	1c61      	adds	r1, r4, #1
  401302:	f000 8116 	beq.w	401532 <_vfiprintf_r+0x4a2>
  401306:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  40130a:	9102      	str	r1, [sp, #8]
  40130c:	ea56 0107 	orrs.w	r1, r6, r7
  401310:	f040 8114 	bne.w	40153c <_vfiprintf_r+0x4ac>
  401314:	2c00      	cmp	r4, #0
  401316:	f040 835c 	bne.w	4019d2 <_vfiprintf_r+0x942>
  40131a:	2a00      	cmp	r2, #0
  40131c:	f040 83b7 	bne.w	401a8e <_vfiprintf_r+0x9fe>
  401320:	f013 0301 	ands.w	r3, r3, #1
  401324:	9305      	str	r3, [sp, #20]
  401326:	f000 8457 	beq.w	401bd8 <_vfiprintf_r+0xb48>
  40132a:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  40132e:	2330      	movs	r3, #48	; 0x30
  401330:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  401334:	9b05      	ldr	r3, [sp, #20]
  401336:	42a3      	cmp	r3, r4
  401338:	bfb8      	it	lt
  40133a:	4623      	movlt	r3, r4
  40133c:	9301      	str	r3, [sp, #4]
  40133e:	b10d      	cbz	r5, 401344 <_vfiprintf_r+0x2b4>
  401340:	3301      	adds	r3, #1
  401342:	9301      	str	r3, [sp, #4]
  401344:	9b02      	ldr	r3, [sp, #8]
  401346:	f013 0302 	ands.w	r3, r3, #2
  40134a:	9309      	str	r3, [sp, #36]	; 0x24
  40134c:	d002      	beq.n	401354 <_vfiprintf_r+0x2c4>
  40134e:	9b01      	ldr	r3, [sp, #4]
  401350:	3302      	adds	r3, #2
  401352:	9301      	str	r3, [sp, #4]
  401354:	9b02      	ldr	r3, [sp, #8]
  401356:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  40135a:	930a      	str	r3, [sp, #40]	; 0x28
  40135c:	f040 8217 	bne.w	40178e <_vfiprintf_r+0x6fe>
  401360:	9b08      	ldr	r3, [sp, #32]
  401362:	9a01      	ldr	r2, [sp, #4]
  401364:	1a9d      	subs	r5, r3, r2
  401366:	2d00      	cmp	r5, #0
  401368:	f340 8211 	ble.w	40178e <_vfiprintf_r+0x6fe>
  40136c:	2d10      	cmp	r5, #16
  40136e:	f340 8490 	ble.w	401c92 <_vfiprintf_r+0xc02>
  401372:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401374:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401376:	4ec4      	ldr	r6, [pc, #784]	; (401688 <_vfiprintf_r+0x5f8>)
  401378:	46d6      	mov	lr, sl
  40137a:	2710      	movs	r7, #16
  40137c:	46a2      	mov	sl, r4
  40137e:	4619      	mov	r1, r3
  401380:	9c06      	ldr	r4, [sp, #24]
  401382:	e007      	b.n	401394 <_vfiprintf_r+0x304>
  401384:	f101 0c02 	add.w	ip, r1, #2
  401388:	f10e 0e08 	add.w	lr, lr, #8
  40138c:	4601      	mov	r1, r0
  40138e:	3d10      	subs	r5, #16
  401390:	2d10      	cmp	r5, #16
  401392:	dd11      	ble.n	4013b8 <_vfiprintf_r+0x328>
  401394:	1c48      	adds	r0, r1, #1
  401396:	3210      	adds	r2, #16
  401398:	2807      	cmp	r0, #7
  40139a:	9211      	str	r2, [sp, #68]	; 0x44
  40139c:	e88e 00c0 	stmia.w	lr, {r6, r7}
  4013a0:	9010      	str	r0, [sp, #64]	; 0x40
  4013a2:	ddef      	ble.n	401384 <_vfiprintf_r+0x2f4>
  4013a4:	2a00      	cmp	r2, #0
  4013a6:	f040 81e4 	bne.w	401772 <_vfiprintf_r+0x6e2>
  4013aa:	3d10      	subs	r5, #16
  4013ac:	2d10      	cmp	r5, #16
  4013ae:	4611      	mov	r1, r2
  4013b0:	f04f 0c01 	mov.w	ip, #1
  4013b4:	46ce      	mov	lr, r9
  4013b6:	dced      	bgt.n	401394 <_vfiprintf_r+0x304>
  4013b8:	4654      	mov	r4, sl
  4013ba:	4661      	mov	r1, ip
  4013bc:	46f2      	mov	sl, lr
  4013be:	442a      	add	r2, r5
  4013c0:	2907      	cmp	r1, #7
  4013c2:	9211      	str	r2, [sp, #68]	; 0x44
  4013c4:	f8ca 6000 	str.w	r6, [sl]
  4013c8:	f8ca 5004 	str.w	r5, [sl, #4]
  4013cc:	9110      	str	r1, [sp, #64]	; 0x40
  4013ce:	f300 82ec 	bgt.w	4019aa <_vfiprintf_r+0x91a>
  4013d2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4013d6:	f10a 0a08 	add.w	sl, sl, #8
  4013da:	1c48      	adds	r0, r1, #1
  4013dc:	2d00      	cmp	r5, #0
  4013de:	f040 81de 	bne.w	40179e <_vfiprintf_r+0x70e>
  4013e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4013e4:	2b00      	cmp	r3, #0
  4013e6:	f000 81f8 	beq.w	4017da <_vfiprintf_r+0x74a>
  4013ea:	3202      	adds	r2, #2
  4013ec:	a90e      	add	r1, sp, #56	; 0x38
  4013ee:	2302      	movs	r3, #2
  4013f0:	2807      	cmp	r0, #7
  4013f2:	9211      	str	r2, [sp, #68]	; 0x44
  4013f4:	9010      	str	r0, [sp, #64]	; 0x40
  4013f6:	e88a 000a 	stmia.w	sl, {r1, r3}
  4013fa:	f340 81ea 	ble.w	4017d2 <_vfiprintf_r+0x742>
  4013fe:	2a00      	cmp	r2, #0
  401400:	f040 838c 	bne.w	401b1c <_vfiprintf_r+0xa8c>
  401404:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401406:	2b80      	cmp	r3, #128	; 0x80
  401408:	f04f 0001 	mov.w	r0, #1
  40140c:	4611      	mov	r1, r2
  40140e:	46ca      	mov	sl, r9
  401410:	f040 81e7 	bne.w	4017e2 <_vfiprintf_r+0x752>
  401414:	9b08      	ldr	r3, [sp, #32]
  401416:	9d01      	ldr	r5, [sp, #4]
  401418:	1b5e      	subs	r6, r3, r5
  40141a:	2e00      	cmp	r6, #0
  40141c:	f340 81e1 	ble.w	4017e2 <_vfiprintf_r+0x752>
  401420:	2e10      	cmp	r6, #16
  401422:	4d9a      	ldr	r5, [pc, #616]	; (40168c <_vfiprintf_r+0x5fc>)
  401424:	f340 8450 	ble.w	401cc8 <_vfiprintf_r+0xc38>
  401428:	46d4      	mov	ip, sl
  40142a:	2710      	movs	r7, #16
  40142c:	46a2      	mov	sl, r4
  40142e:	9c06      	ldr	r4, [sp, #24]
  401430:	e007      	b.n	401442 <_vfiprintf_r+0x3b2>
  401432:	f101 0e02 	add.w	lr, r1, #2
  401436:	f10c 0c08 	add.w	ip, ip, #8
  40143a:	4601      	mov	r1, r0
  40143c:	3e10      	subs	r6, #16
  40143e:	2e10      	cmp	r6, #16
  401440:	dd11      	ble.n	401466 <_vfiprintf_r+0x3d6>
  401442:	1c48      	adds	r0, r1, #1
  401444:	3210      	adds	r2, #16
  401446:	2807      	cmp	r0, #7
  401448:	9211      	str	r2, [sp, #68]	; 0x44
  40144a:	e88c 00a0 	stmia.w	ip, {r5, r7}
  40144e:	9010      	str	r0, [sp, #64]	; 0x40
  401450:	ddef      	ble.n	401432 <_vfiprintf_r+0x3a2>
  401452:	2a00      	cmp	r2, #0
  401454:	f040 829d 	bne.w	401992 <_vfiprintf_r+0x902>
  401458:	3e10      	subs	r6, #16
  40145a:	2e10      	cmp	r6, #16
  40145c:	f04f 0e01 	mov.w	lr, #1
  401460:	4611      	mov	r1, r2
  401462:	46cc      	mov	ip, r9
  401464:	dced      	bgt.n	401442 <_vfiprintf_r+0x3b2>
  401466:	4654      	mov	r4, sl
  401468:	46e2      	mov	sl, ip
  40146a:	4432      	add	r2, r6
  40146c:	f1be 0f07 	cmp.w	lr, #7
  401470:	9211      	str	r2, [sp, #68]	; 0x44
  401472:	e88a 0060 	stmia.w	sl, {r5, r6}
  401476:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  40147a:	f300 8369 	bgt.w	401b50 <_vfiprintf_r+0xac0>
  40147e:	f10a 0a08 	add.w	sl, sl, #8
  401482:	f10e 0001 	add.w	r0, lr, #1
  401486:	4671      	mov	r1, lr
  401488:	e1ab      	b.n	4017e2 <_vfiprintf_r+0x752>
  40148a:	9608      	str	r6, [sp, #32]
  40148c:	f013 0220 	ands.w	r2, r3, #32
  401490:	f040 838c 	bne.w	401bac <_vfiprintf_r+0xb1c>
  401494:	f013 0110 	ands.w	r1, r3, #16
  401498:	f040 831a 	bne.w	401ad0 <_vfiprintf_r+0xa40>
  40149c:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  4014a0:	f000 8316 	beq.w	401ad0 <_vfiprintf_r+0xa40>
  4014a4:	9807      	ldr	r0, [sp, #28]
  4014a6:	460a      	mov	r2, r1
  4014a8:	4601      	mov	r1, r0
  4014aa:	3104      	adds	r1, #4
  4014ac:	8806      	ldrh	r6, [r0, #0]
  4014ae:	9107      	str	r1, [sp, #28]
  4014b0:	2700      	movs	r7, #0
  4014b2:	e720      	b.n	4012f6 <_vfiprintf_r+0x266>
  4014b4:	9608      	str	r6, [sp, #32]
  4014b6:	f043 0310 	orr.w	r3, r3, #16
  4014ba:	e7e7      	b.n	40148c <_vfiprintf_r+0x3fc>
  4014bc:	9608      	str	r6, [sp, #32]
  4014be:	f043 0310 	orr.w	r3, r3, #16
  4014c2:	e708      	b.n	4012d6 <_vfiprintf_r+0x246>
  4014c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4014c8:	f898 2000 	ldrb.w	r2, [r8]
  4014cc:	e652      	b.n	401174 <_vfiprintf_r+0xe4>
  4014ce:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4014d2:	2600      	movs	r6, #0
  4014d4:	f818 2b01 	ldrb.w	r2, [r8], #1
  4014d8:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4014dc:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  4014e0:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4014e4:	2909      	cmp	r1, #9
  4014e6:	d9f5      	bls.n	4014d4 <_vfiprintf_r+0x444>
  4014e8:	e646      	b.n	401178 <_vfiprintf_r+0xe8>
  4014ea:	9608      	str	r6, [sp, #32]
  4014ec:	2800      	cmp	r0, #0
  4014ee:	f040 8408 	bne.w	401d02 <_vfiprintf_r+0xc72>
  4014f2:	f043 0310 	orr.w	r3, r3, #16
  4014f6:	069e      	lsls	r6, r3, #26
  4014f8:	f100 834c 	bmi.w	401b94 <_vfiprintf_r+0xb04>
  4014fc:	06dd      	lsls	r5, r3, #27
  4014fe:	f100 82f3 	bmi.w	401ae8 <_vfiprintf_r+0xa58>
  401502:	0658      	lsls	r0, r3, #25
  401504:	f140 82f0 	bpl.w	401ae8 <_vfiprintf_r+0xa58>
  401508:	9d07      	ldr	r5, [sp, #28]
  40150a:	f9b5 6000 	ldrsh.w	r6, [r5]
  40150e:	462a      	mov	r2, r5
  401510:	17f7      	asrs	r7, r6, #31
  401512:	3204      	adds	r2, #4
  401514:	4630      	mov	r0, r6
  401516:	4639      	mov	r1, r7
  401518:	9207      	str	r2, [sp, #28]
  40151a:	2800      	cmp	r0, #0
  40151c:	f171 0200 	sbcs.w	r2, r1, #0
  401520:	f2c0 835d 	blt.w	401bde <_vfiprintf_r+0xb4e>
  401524:	1c61      	adds	r1, r4, #1
  401526:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40152a:	f04f 0201 	mov.w	r2, #1
  40152e:	f47f aeea 	bne.w	401306 <_vfiprintf_r+0x276>
  401532:	ea56 0107 	orrs.w	r1, r6, r7
  401536:	f000 824d 	beq.w	4019d4 <_vfiprintf_r+0x944>
  40153a:	9302      	str	r3, [sp, #8]
  40153c:	2a01      	cmp	r2, #1
  40153e:	f000 828c 	beq.w	401a5a <_vfiprintf_r+0x9ca>
  401542:	2a02      	cmp	r2, #2
  401544:	f040 825c 	bne.w	401a00 <_vfiprintf_r+0x970>
  401548:	980b      	ldr	r0, [sp, #44]	; 0x2c
  40154a:	46cb      	mov	fp, r9
  40154c:	0933      	lsrs	r3, r6, #4
  40154e:	f006 010f 	and.w	r1, r6, #15
  401552:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401556:	093a      	lsrs	r2, r7, #4
  401558:	461e      	mov	r6, r3
  40155a:	4617      	mov	r7, r2
  40155c:	5c43      	ldrb	r3, [r0, r1]
  40155e:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  401562:	ea56 0307 	orrs.w	r3, r6, r7
  401566:	d1f1      	bne.n	40154c <_vfiprintf_r+0x4bc>
  401568:	eba9 030b 	sub.w	r3, r9, fp
  40156c:	9305      	str	r3, [sp, #20]
  40156e:	e6e1      	b.n	401334 <_vfiprintf_r+0x2a4>
  401570:	2800      	cmp	r0, #0
  401572:	f040 83c0 	bne.w	401cf6 <_vfiprintf_r+0xc66>
  401576:	0699      	lsls	r1, r3, #26
  401578:	f100 8367 	bmi.w	401c4a <_vfiprintf_r+0xbba>
  40157c:	06da      	lsls	r2, r3, #27
  40157e:	f100 80f1 	bmi.w	401764 <_vfiprintf_r+0x6d4>
  401582:	065b      	lsls	r3, r3, #25
  401584:	f140 80ee 	bpl.w	401764 <_vfiprintf_r+0x6d4>
  401588:	9a07      	ldr	r2, [sp, #28]
  40158a:	6813      	ldr	r3, [r2, #0]
  40158c:	3204      	adds	r2, #4
  40158e:	9207      	str	r2, [sp, #28]
  401590:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  401594:	801a      	strh	r2, [r3, #0]
  401596:	e5b8      	b.n	40110a <_vfiprintf_r+0x7a>
  401598:	9807      	ldr	r0, [sp, #28]
  40159a:	4a3d      	ldr	r2, [pc, #244]	; (401690 <_vfiprintf_r+0x600>)
  40159c:	9608      	str	r6, [sp, #32]
  40159e:	920b      	str	r2, [sp, #44]	; 0x2c
  4015a0:	6806      	ldr	r6, [r0, #0]
  4015a2:	2278      	movs	r2, #120	; 0x78
  4015a4:	2130      	movs	r1, #48	; 0x30
  4015a6:	3004      	adds	r0, #4
  4015a8:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4015ac:	f043 0302 	orr.w	r3, r3, #2
  4015b0:	9007      	str	r0, [sp, #28]
  4015b2:	2700      	movs	r7, #0
  4015b4:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4015b8:	2202      	movs	r2, #2
  4015ba:	e69c      	b.n	4012f6 <_vfiprintf_r+0x266>
  4015bc:	9608      	str	r6, [sp, #32]
  4015be:	2800      	cmp	r0, #0
  4015c0:	d099      	beq.n	4014f6 <_vfiprintf_r+0x466>
  4015c2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4015c6:	e796      	b.n	4014f6 <_vfiprintf_r+0x466>
  4015c8:	f898 2000 	ldrb.w	r2, [r8]
  4015cc:	2d00      	cmp	r5, #0
  4015ce:	f47f add1 	bne.w	401174 <_vfiprintf_r+0xe4>
  4015d2:	2001      	movs	r0, #1
  4015d4:	2520      	movs	r5, #32
  4015d6:	e5cd      	b.n	401174 <_vfiprintf_r+0xe4>
  4015d8:	f043 0301 	orr.w	r3, r3, #1
  4015dc:	f898 2000 	ldrb.w	r2, [r8]
  4015e0:	e5c8      	b.n	401174 <_vfiprintf_r+0xe4>
  4015e2:	9608      	str	r6, [sp, #32]
  4015e4:	2800      	cmp	r0, #0
  4015e6:	f040 8393 	bne.w	401d10 <_vfiprintf_r+0xc80>
  4015ea:	4929      	ldr	r1, [pc, #164]	; (401690 <_vfiprintf_r+0x600>)
  4015ec:	910b      	str	r1, [sp, #44]	; 0x2c
  4015ee:	069f      	lsls	r7, r3, #26
  4015f0:	f100 82e8 	bmi.w	401bc4 <_vfiprintf_r+0xb34>
  4015f4:	9807      	ldr	r0, [sp, #28]
  4015f6:	06de      	lsls	r6, r3, #27
  4015f8:	4601      	mov	r1, r0
  4015fa:	f100 8270 	bmi.w	401ade <_vfiprintf_r+0xa4e>
  4015fe:	065d      	lsls	r5, r3, #25
  401600:	f140 826d 	bpl.w	401ade <_vfiprintf_r+0xa4e>
  401604:	3104      	adds	r1, #4
  401606:	8806      	ldrh	r6, [r0, #0]
  401608:	9107      	str	r1, [sp, #28]
  40160a:	2700      	movs	r7, #0
  40160c:	07d8      	lsls	r0, r3, #31
  40160e:	f140 8222 	bpl.w	401a56 <_vfiprintf_r+0x9c6>
  401612:	ea56 0107 	orrs.w	r1, r6, r7
  401616:	f000 821e 	beq.w	401a56 <_vfiprintf_r+0x9c6>
  40161a:	2130      	movs	r1, #48	; 0x30
  40161c:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401620:	f043 0302 	orr.w	r3, r3, #2
  401624:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401628:	2202      	movs	r2, #2
  40162a:	e664      	b.n	4012f6 <_vfiprintf_r+0x266>
  40162c:	9608      	str	r6, [sp, #32]
  40162e:	2800      	cmp	r0, #0
  401630:	f040 836b 	bne.w	401d0a <_vfiprintf_r+0xc7a>
  401634:	4917      	ldr	r1, [pc, #92]	; (401694 <_vfiprintf_r+0x604>)
  401636:	910b      	str	r1, [sp, #44]	; 0x2c
  401638:	e7d9      	b.n	4015ee <_vfiprintf_r+0x55e>
  40163a:	9907      	ldr	r1, [sp, #28]
  40163c:	9608      	str	r6, [sp, #32]
  40163e:	680a      	ldr	r2, [r1, #0]
  401640:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401644:	f04f 0000 	mov.w	r0, #0
  401648:	460a      	mov	r2, r1
  40164a:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  40164e:	3204      	adds	r2, #4
  401650:	2001      	movs	r0, #1
  401652:	9001      	str	r0, [sp, #4]
  401654:	9207      	str	r2, [sp, #28]
  401656:	9005      	str	r0, [sp, #20]
  401658:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  40165c:	9302      	str	r3, [sp, #8]
  40165e:	2400      	movs	r4, #0
  401660:	e670      	b.n	401344 <_vfiprintf_r+0x2b4>
  401662:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401666:	f898 2000 	ldrb.w	r2, [r8]
  40166a:	e583      	b.n	401174 <_vfiprintf_r+0xe4>
  40166c:	f898 2000 	ldrb.w	r2, [r8]
  401670:	2a6c      	cmp	r2, #108	; 0x6c
  401672:	bf03      	ittte	eq
  401674:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  401678:	f043 0320 	orreq.w	r3, r3, #32
  40167c:	f108 0801 	addeq.w	r8, r8, #1
  401680:	f043 0310 	orrne.w	r3, r3, #16
  401684:	e576      	b.n	401174 <_vfiprintf_r+0xe4>
  401686:	bf00      	nop
  401688:	00403d74 	.word	0x00403d74
  40168c:	00403d84 	.word	0x00403d84
  401690:	00403d58 	.word	0x00403d58
  401694:	00403d44 	.word	0x00403d44
  401698:	9907      	ldr	r1, [sp, #28]
  40169a:	680e      	ldr	r6, [r1, #0]
  40169c:	460a      	mov	r2, r1
  40169e:	2e00      	cmp	r6, #0
  4016a0:	f102 0204 	add.w	r2, r2, #4
  4016a4:	f6ff ae0f 	blt.w	4012c6 <_vfiprintf_r+0x236>
  4016a8:	9207      	str	r2, [sp, #28]
  4016aa:	f898 2000 	ldrb.w	r2, [r8]
  4016ae:	e561      	b.n	401174 <_vfiprintf_r+0xe4>
  4016b0:	f898 2000 	ldrb.w	r2, [r8]
  4016b4:	2001      	movs	r0, #1
  4016b6:	252b      	movs	r5, #43	; 0x2b
  4016b8:	e55c      	b.n	401174 <_vfiprintf_r+0xe4>
  4016ba:	9907      	ldr	r1, [sp, #28]
  4016bc:	9608      	str	r6, [sp, #32]
  4016be:	f8d1 b000 	ldr.w	fp, [r1]
  4016c2:	f04f 0200 	mov.w	r2, #0
  4016c6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4016ca:	1d0e      	adds	r6, r1, #4
  4016cc:	f1bb 0f00 	cmp.w	fp, #0
  4016d0:	f000 82e5 	beq.w	401c9e <_vfiprintf_r+0xc0e>
  4016d4:	1c67      	adds	r7, r4, #1
  4016d6:	f000 82c4 	beq.w	401c62 <_vfiprintf_r+0xbd2>
  4016da:	4622      	mov	r2, r4
  4016dc:	2100      	movs	r1, #0
  4016de:	4658      	mov	r0, fp
  4016e0:	9301      	str	r3, [sp, #4]
  4016e2:	f001 fbd5 	bl	402e90 <memchr>
  4016e6:	9b01      	ldr	r3, [sp, #4]
  4016e8:	2800      	cmp	r0, #0
  4016ea:	f000 82e5 	beq.w	401cb8 <_vfiprintf_r+0xc28>
  4016ee:	eba0 020b 	sub.w	r2, r0, fp
  4016f2:	9205      	str	r2, [sp, #20]
  4016f4:	9607      	str	r6, [sp, #28]
  4016f6:	9302      	str	r3, [sp, #8]
  4016f8:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4016fc:	2400      	movs	r4, #0
  4016fe:	e619      	b.n	401334 <_vfiprintf_r+0x2a4>
  401700:	f898 2000 	ldrb.w	r2, [r8]
  401704:	2a2a      	cmp	r2, #42	; 0x2a
  401706:	f108 0701 	add.w	r7, r8, #1
  40170a:	f000 82e9 	beq.w	401ce0 <_vfiprintf_r+0xc50>
  40170e:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401712:	2909      	cmp	r1, #9
  401714:	46b8      	mov	r8, r7
  401716:	f04f 0400 	mov.w	r4, #0
  40171a:	f63f ad2d 	bhi.w	401178 <_vfiprintf_r+0xe8>
  40171e:	f818 2b01 	ldrb.w	r2, [r8], #1
  401722:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401726:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  40172a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40172e:	2909      	cmp	r1, #9
  401730:	d9f5      	bls.n	40171e <_vfiprintf_r+0x68e>
  401732:	e521      	b.n	401178 <_vfiprintf_r+0xe8>
  401734:	f043 0320 	orr.w	r3, r3, #32
  401738:	f898 2000 	ldrb.w	r2, [r8]
  40173c:	e51a      	b.n	401174 <_vfiprintf_r+0xe4>
  40173e:	9608      	str	r6, [sp, #32]
  401740:	2800      	cmp	r0, #0
  401742:	f040 82db 	bne.w	401cfc <_vfiprintf_r+0xc6c>
  401746:	2a00      	cmp	r2, #0
  401748:	f000 80e7 	beq.w	40191a <_vfiprintf_r+0x88a>
  40174c:	2101      	movs	r1, #1
  40174e:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401752:	f04f 0200 	mov.w	r2, #0
  401756:	9101      	str	r1, [sp, #4]
  401758:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  40175c:	9105      	str	r1, [sp, #20]
  40175e:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  401762:	e77b      	b.n	40165c <_vfiprintf_r+0x5cc>
  401764:	9a07      	ldr	r2, [sp, #28]
  401766:	6813      	ldr	r3, [r2, #0]
  401768:	3204      	adds	r2, #4
  40176a:	9207      	str	r2, [sp, #28]
  40176c:	9a03      	ldr	r2, [sp, #12]
  40176e:	601a      	str	r2, [r3, #0]
  401770:	e4cb      	b.n	40110a <_vfiprintf_r+0x7a>
  401772:	aa0f      	add	r2, sp, #60	; 0x3c
  401774:	9904      	ldr	r1, [sp, #16]
  401776:	4620      	mov	r0, r4
  401778:	f7ff fc4a 	bl	401010 <__sprint_r.part.0>
  40177c:	2800      	cmp	r0, #0
  40177e:	f040 8139 	bne.w	4019f4 <_vfiprintf_r+0x964>
  401782:	9910      	ldr	r1, [sp, #64]	; 0x40
  401784:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401786:	f101 0c01 	add.w	ip, r1, #1
  40178a:	46ce      	mov	lr, r9
  40178c:	e5ff      	b.n	40138e <_vfiprintf_r+0x2fe>
  40178e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401790:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401792:	1c48      	adds	r0, r1, #1
  401794:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401798:	2d00      	cmp	r5, #0
  40179a:	f43f ae22 	beq.w	4013e2 <_vfiprintf_r+0x352>
  40179e:	3201      	adds	r2, #1
  4017a0:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  4017a4:	2101      	movs	r1, #1
  4017a6:	2807      	cmp	r0, #7
  4017a8:	9211      	str	r2, [sp, #68]	; 0x44
  4017aa:	9010      	str	r0, [sp, #64]	; 0x40
  4017ac:	f8ca 5000 	str.w	r5, [sl]
  4017b0:	f8ca 1004 	str.w	r1, [sl, #4]
  4017b4:	f340 8108 	ble.w	4019c8 <_vfiprintf_r+0x938>
  4017b8:	2a00      	cmp	r2, #0
  4017ba:	f040 81bc 	bne.w	401b36 <_vfiprintf_r+0xaa6>
  4017be:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4017c0:	2b00      	cmp	r3, #0
  4017c2:	f43f ae1f 	beq.w	401404 <_vfiprintf_r+0x374>
  4017c6:	ab0e      	add	r3, sp, #56	; 0x38
  4017c8:	2202      	movs	r2, #2
  4017ca:	4608      	mov	r0, r1
  4017cc:	931c      	str	r3, [sp, #112]	; 0x70
  4017ce:	921d      	str	r2, [sp, #116]	; 0x74
  4017d0:	46ca      	mov	sl, r9
  4017d2:	4601      	mov	r1, r0
  4017d4:	f10a 0a08 	add.w	sl, sl, #8
  4017d8:	3001      	adds	r0, #1
  4017da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4017dc:	2b80      	cmp	r3, #128	; 0x80
  4017de:	f43f ae19 	beq.w	401414 <_vfiprintf_r+0x384>
  4017e2:	9b05      	ldr	r3, [sp, #20]
  4017e4:	1ae4      	subs	r4, r4, r3
  4017e6:	2c00      	cmp	r4, #0
  4017e8:	dd2e      	ble.n	401848 <_vfiprintf_r+0x7b8>
  4017ea:	2c10      	cmp	r4, #16
  4017ec:	4db3      	ldr	r5, [pc, #716]	; (401abc <_vfiprintf_r+0xa2c>)
  4017ee:	dd1e      	ble.n	40182e <_vfiprintf_r+0x79e>
  4017f0:	46d6      	mov	lr, sl
  4017f2:	2610      	movs	r6, #16
  4017f4:	9f06      	ldr	r7, [sp, #24]
  4017f6:	f8dd a010 	ldr.w	sl, [sp, #16]
  4017fa:	e006      	b.n	40180a <_vfiprintf_r+0x77a>
  4017fc:	1c88      	adds	r0, r1, #2
  4017fe:	f10e 0e08 	add.w	lr, lr, #8
  401802:	4619      	mov	r1, r3
  401804:	3c10      	subs	r4, #16
  401806:	2c10      	cmp	r4, #16
  401808:	dd10      	ble.n	40182c <_vfiprintf_r+0x79c>
  40180a:	1c4b      	adds	r3, r1, #1
  40180c:	3210      	adds	r2, #16
  40180e:	2b07      	cmp	r3, #7
  401810:	9211      	str	r2, [sp, #68]	; 0x44
  401812:	e88e 0060 	stmia.w	lr, {r5, r6}
  401816:	9310      	str	r3, [sp, #64]	; 0x40
  401818:	ddf0      	ble.n	4017fc <_vfiprintf_r+0x76c>
  40181a:	2a00      	cmp	r2, #0
  40181c:	d165      	bne.n	4018ea <_vfiprintf_r+0x85a>
  40181e:	3c10      	subs	r4, #16
  401820:	2c10      	cmp	r4, #16
  401822:	f04f 0001 	mov.w	r0, #1
  401826:	4611      	mov	r1, r2
  401828:	46ce      	mov	lr, r9
  40182a:	dcee      	bgt.n	40180a <_vfiprintf_r+0x77a>
  40182c:	46f2      	mov	sl, lr
  40182e:	4422      	add	r2, r4
  401830:	2807      	cmp	r0, #7
  401832:	9211      	str	r2, [sp, #68]	; 0x44
  401834:	f8ca 5000 	str.w	r5, [sl]
  401838:	f8ca 4004 	str.w	r4, [sl, #4]
  40183c:	9010      	str	r0, [sp, #64]	; 0x40
  40183e:	f300 8085 	bgt.w	40194c <_vfiprintf_r+0x8bc>
  401842:	f10a 0a08 	add.w	sl, sl, #8
  401846:	3001      	adds	r0, #1
  401848:	9905      	ldr	r1, [sp, #20]
  40184a:	f8ca b000 	str.w	fp, [sl]
  40184e:	440a      	add	r2, r1
  401850:	2807      	cmp	r0, #7
  401852:	9211      	str	r2, [sp, #68]	; 0x44
  401854:	f8ca 1004 	str.w	r1, [sl, #4]
  401858:	9010      	str	r0, [sp, #64]	; 0x40
  40185a:	f340 8082 	ble.w	401962 <_vfiprintf_r+0x8d2>
  40185e:	2a00      	cmp	r2, #0
  401860:	f040 8118 	bne.w	401a94 <_vfiprintf_r+0xa04>
  401864:	9b02      	ldr	r3, [sp, #8]
  401866:	9210      	str	r2, [sp, #64]	; 0x40
  401868:	0758      	lsls	r0, r3, #29
  40186a:	d535      	bpl.n	4018d8 <_vfiprintf_r+0x848>
  40186c:	9b08      	ldr	r3, [sp, #32]
  40186e:	9901      	ldr	r1, [sp, #4]
  401870:	1a5c      	subs	r4, r3, r1
  401872:	2c00      	cmp	r4, #0
  401874:	f340 80e7 	ble.w	401a46 <_vfiprintf_r+0x9b6>
  401878:	46ca      	mov	sl, r9
  40187a:	2c10      	cmp	r4, #16
  40187c:	f340 8218 	ble.w	401cb0 <_vfiprintf_r+0xc20>
  401880:	9910      	ldr	r1, [sp, #64]	; 0x40
  401882:	4e8f      	ldr	r6, [pc, #572]	; (401ac0 <_vfiprintf_r+0xa30>)
  401884:	9f06      	ldr	r7, [sp, #24]
  401886:	f8dd b010 	ldr.w	fp, [sp, #16]
  40188a:	2510      	movs	r5, #16
  40188c:	e006      	b.n	40189c <_vfiprintf_r+0x80c>
  40188e:	1c88      	adds	r0, r1, #2
  401890:	f10a 0a08 	add.w	sl, sl, #8
  401894:	4619      	mov	r1, r3
  401896:	3c10      	subs	r4, #16
  401898:	2c10      	cmp	r4, #16
  40189a:	dd11      	ble.n	4018c0 <_vfiprintf_r+0x830>
  40189c:	1c4b      	adds	r3, r1, #1
  40189e:	3210      	adds	r2, #16
  4018a0:	2b07      	cmp	r3, #7
  4018a2:	9211      	str	r2, [sp, #68]	; 0x44
  4018a4:	f8ca 6000 	str.w	r6, [sl]
  4018a8:	f8ca 5004 	str.w	r5, [sl, #4]
  4018ac:	9310      	str	r3, [sp, #64]	; 0x40
  4018ae:	ddee      	ble.n	40188e <_vfiprintf_r+0x7fe>
  4018b0:	bb42      	cbnz	r2, 401904 <_vfiprintf_r+0x874>
  4018b2:	3c10      	subs	r4, #16
  4018b4:	2c10      	cmp	r4, #16
  4018b6:	f04f 0001 	mov.w	r0, #1
  4018ba:	4611      	mov	r1, r2
  4018bc:	46ca      	mov	sl, r9
  4018be:	dced      	bgt.n	40189c <_vfiprintf_r+0x80c>
  4018c0:	4422      	add	r2, r4
  4018c2:	2807      	cmp	r0, #7
  4018c4:	9211      	str	r2, [sp, #68]	; 0x44
  4018c6:	f8ca 6000 	str.w	r6, [sl]
  4018ca:	f8ca 4004 	str.w	r4, [sl, #4]
  4018ce:	9010      	str	r0, [sp, #64]	; 0x40
  4018d0:	dd51      	ble.n	401976 <_vfiprintf_r+0x8e6>
  4018d2:	2a00      	cmp	r2, #0
  4018d4:	f040 819b 	bne.w	401c0e <_vfiprintf_r+0xb7e>
  4018d8:	9b03      	ldr	r3, [sp, #12]
  4018da:	9a08      	ldr	r2, [sp, #32]
  4018dc:	9901      	ldr	r1, [sp, #4]
  4018de:	428a      	cmp	r2, r1
  4018e0:	bfac      	ite	ge
  4018e2:	189b      	addge	r3, r3, r2
  4018e4:	185b      	addlt	r3, r3, r1
  4018e6:	9303      	str	r3, [sp, #12]
  4018e8:	e04e      	b.n	401988 <_vfiprintf_r+0x8f8>
  4018ea:	aa0f      	add	r2, sp, #60	; 0x3c
  4018ec:	4651      	mov	r1, sl
  4018ee:	4638      	mov	r0, r7
  4018f0:	f7ff fb8e 	bl	401010 <__sprint_r.part.0>
  4018f4:	2800      	cmp	r0, #0
  4018f6:	f040 813f 	bne.w	401b78 <_vfiprintf_r+0xae8>
  4018fa:	9910      	ldr	r1, [sp, #64]	; 0x40
  4018fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4018fe:	1c48      	adds	r0, r1, #1
  401900:	46ce      	mov	lr, r9
  401902:	e77f      	b.n	401804 <_vfiprintf_r+0x774>
  401904:	aa0f      	add	r2, sp, #60	; 0x3c
  401906:	4659      	mov	r1, fp
  401908:	4638      	mov	r0, r7
  40190a:	f7ff fb81 	bl	401010 <__sprint_r.part.0>
  40190e:	b960      	cbnz	r0, 40192a <_vfiprintf_r+0x89a>
  401910:	9910      	ldr	r1, [sp, #64]	; 0x40
  401912:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401914:	1c48      	adds	r0, r1, #1
  401916:	46ca      	mov	sl, r9
  401918:	e7bd      	b.n	401896 <_vfiprintf_r+0x806>
  40191a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40191c:	f8dd b010 	ldr.w	fp, [sp, #16]
  401920:	2b00      	cmp	r3, #0
  401922:	f040 81d4 	bne.w	401cce <_vfiprintf_r+0xc3e>
  401926:	2300      	movs	r3, #0
  401928:	9310      	str	r3, [sp, #64]	; 0x40
  40192a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40192e:	f013 0f01 	tst.w	r3, #1
  401932:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401936:	d102      	bne.n	40193e <_vfiprintf_r+0x8ae>
  401938:	059a      	lsls	r2, r3, #22
  40193a:	f140 80de 	bpl.w	401afa <_vfiprintf_r+0xa6a>
  40193e:	065b      	lsls	r3, r3, #25
  401940:	f53f acb2 	bmi.w	4012a8 <_vfiprintf_r+0x218>
  401944:	9803      	ldr	r0, [sp, #12]
  401946:	b02d      	add	sp, #180	; 0xb4
  401948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40194c:	2a00      	cmp	r2, #0
  40194e:	f040 8106 	bne.w	401b5e <_vfiprintf_r+0xace>
  401952:	9a05      	ldr	r2, [sp, #20]
  401954:	921d      	str	r2, [sp, #116]	; 0x74
  401956:	2301      	movs	r3, #1
  401958:	9211      	str	r2, [sp, #68]	; 0x44
  40195a:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  40195e:	9310      	str	r3, [sp, #64]	; 0x40
  401960:	46ca      	mov	sl, r9
  401962:	f10a 0a08 	add.w	sl, sl, #8
  401966:	9b02      	ldr	r3, [sp, #8]
  401968:	0759      	lsls	r1, r3, #29
  40196a:	d504      	bpl.n	401976 <_vfiprintf_r+0x8e6>
  40196c:	9b08      	ldr	r3, [sp, #32]
  40196e:	9901      	ldr	r1, [sp, #4]
  401970:	1a5c      	subs	r4, r3, r1
  401972:	2c00      	cmp	r4, #0
  401974:	dc81      	bgt.n	40187a <_vfiprintf_r+0x7ea>
  401976:	9b03      	ldr	r3, [sp, #12]
  401978:	9908      	ldr	r1, [sp, #32]
  40197a:	9801      	ldr	r0, [sp, #4]
  40197c:	4281      	cmp	r1, r0
  40197e:	bfac      	ite	ge
  401980:	185b      	addge	r3, r3, r1
  401982:	181b      	addlt	r3, r3, r0
  401984:	9303      	str	r3, [sp, #12]
  401986:	bb72      	cbnz	r2, 4019e6 <_vfiprintf_r+0x956>
  401988:	2300      	movs	r3, #0
  40198a:	9310      	str	r3, [sp, #64]	; 0x40
  40198c:	46ca      	mov	sl, r9
  40198e:	f7ff bbbc 	b.w	40110a <_vfiprintf_r+0x7a>
  401992:	aa0f      	add	r2, sp, #60	; 0x3c
  401994:	9904      	ldr	r1, [sp, #16]
  401996:	4620      	mov	r0, r4
  401998:	f7ff fb3a 	bl	401010 <__sprint_r.part.0>
  40199c:	bb50      	cbnz	r0, 4019f4 <_vfiprintf_r+0x964>
  40199e:	9910      	ldr	r1, [sp, #64]	; 0x40
  4019a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4019a2:	f101 0e01 	add.w	lr, r1, #1
  4019a6:	46cc      	mov	ip, r9
  4019a8:	e548      	b.n	40143c <_vfiprintf_r+0x3ac>
  4019aa:	2a00      	cmp	r2, #0
  4019ac:	f040 8140 	bne.w	401c30 <_vfiprintf_r+0xba0>
  4019b0:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  4019b4:	2900      	cmp	r1, #0
  4019b6:	f000 811b 	beq.w	401bf0 <_vfiprintf_r+0xb60>
  4019ba:	2201      	movs	r2, #1
  4019bc:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  4019c0:	4610      	mov	r0, r2
  4019c2:	921d      	str	r2, [sp, #116]	; 0x74
  4019c4:	911c      	str	r1, [sp, #112]	; 0x70
  4019c6:	46ca      	mov	sl, r9
  4019c8:	4601      	mov	r1, r0
  4019ca:	f10a 0a08 	add.w	sl, sl, #8
  4019ce:	3001      	adds	r0, #1
  4019d0:	e507      	b.n	4013e2 <_vfiprintf_r+0x352>
  4019d2:	9b02      	ldr	r3, [sp, #8]
  4019d4:	2a01      	cmp	r2, #1
  4019d6:	f000 8098 	beq.w	401b0a <_vfiprintf_r+0xa7a>
  4019da:	2a02      	cmp	r2, #2
  4019dc:	d10d      	bne.n	4019fa <_vfiprintf_r+0x96a>
  4019de:	9302      	str	r3, [sp, #8]
  4019e0:	2600      	movs	r6, #0
  4019e2:	2700      	movs	r7, #0
  4019e4:	e5b0      	b.n	401548 <_vfiprintf_r+0x4b8>
  4019e6:	aa0f      	add	r2, sp, #60	; 0x3c
  4019e8:	9904      	ldr	r1, [sp, #16]
  4019ea:	9806      	ldr	r0, [sp, #24]
  4019ec:	f7ff fb10 	bl	401010 <__sprint_r.part.0>
  4019f0:	2800      	cmp	r0, #0
  4019f2:	d0c9      	beq.n	401988 <_vfiprintf_r+0x8f8>
  4019f4:	f8dd b010 	ldr.w	fp, [sp, #16]
  4019f8:	e797      	b.n	40192a <_vfiprintf_r+0x89a>
  4019fa:	9302      	str	r3, [sp, #8]
  4019fc:	2600      	movs	r6, #0
  4019fe:	2700      	movs	r7, #0
  401a00:	4649      	mov	r1, r9
  401a02:	e000      	b.n	401a06 <_vfiprintf_r+0x976>
  401a04:	4659      	mov	r1, fp
  401a06:	08f2      	lsrs	r2, r6, #3
  401a08:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  401a0c:	08f8      	lsrs	r0, r7, #3
  401a0e:	f006 0307 	and.w	r3, r6, #7
  401a12:	4607      	mov	r7, r0
  401a14:	4616      	mov	r6, r2
  401a16:	3330      	adds	r3, #48	; 0x30
  401a18:	ea56 0207 	orrs.w	r2, r6, r7
  401a1c:	f801 3c01 	strb.w	r3, [r1, #-1]
  401a20:	f101 3bff 	add.w	fp, r1, #4294967295
  401a24:	d1ee      	bne.n	401a04 <_vfiprintf_r+0x974>
  401a26:	9a02      	ldr	r2, [sp, #8]
  401a28:	07d6      	lsls	r6, r2, #31
  401a2a:	f57f ad9d 	bpl.w	401568 <_vfiprintf_r+0x4d8>
  401a2e:	2b30      	cmp	r3, #48	; 0x30
  401a30:	f43f ad9a 	beq.w	401568 <_vfiprintf_r+0x4d8>
  401a34:	3902      	subs	r1, #2
  401a36:	2330      	movs	r3, #48	; 0x30
  401a38:	f80b 3c01 	strb.w	r3, [fp, #-1]
  401a3c:	eba9 0301 	sub.w	r3, r9, r1
  401a40:	9305      	str	r3, [sp, #20]
  401a42:	468b      	mov	fp, r1
  401a44:	e476      	b.n	401334 <_vfiprintf_r+0x2a4>
  401a46:	9b03      	ldr	r3, [sp, #12]
  401a48:	9a08      	ldr	r2, [sp, #32]
  401a4a:	428a      	cmp	r2, r1
  401a4c:	bfac      	ite	ge
  401a4e:	189b      	addge	r3, r3, r2
  401a50:	185b      	addlt	r3, r3, r1
  401a52:	9303      	str	r3, [sp, #12]
  401a54:	e798      	b.n	401988 <_vfiprintf_r+0x8f8>
  401a56:	2202      	movs	r2, #2
  401a58:	e44d      	b.n	4012f6 <_vfiprintf_r+0x266>
  401a5a:	2f00      	cmp	r7, #0
  401a5c:	bf08      	it	eq
  401a5e:	2e0a      	cmpeq	r6, #10
  401a60:	d352      	bcc.n	401b08 <_vfiprintf_r+0xa78>
  401a62:	46cb      	mov	fp, r9
  401a64:	4630      	mov	r0, r6
  401a66:	4639      	mov	r1, r7
  401a68:	220a      	movs	r2, #10
  401a6a:	2300      	movs	r3, #0
  401a6c:	f001 ffa4 	bl	4039b8 <__aeabi_uldivmod>
  401a70:	3230      	adds	r2, #48	; 0x30
  401a72:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  401a76:	4630      	mov	r0, r6
  401a78:	4639      	mov	r1, r7
  401a7a:	2300      	movs	r3, #0
  401a7c:	220a      	movs	r2, #10
  401a7e:	f001 ff9b 	bl	4039b8 <__aeabi_uldivmod>
  401a82:	4606      	mov	r6, r0
  401a84:	460f      	mov	r7, r1
  401a86:	ea56 0307 	orrs.w	r3, r6, r7
  401a8a:	d1eb      	bne.n	401a64 <_vfiprintf_r+0x9d4>
  401a8c:	e56c      	b.n	401568 <_vfiprintf_r+0x4d8>
  401a8e:	9405      	str	r4, [sp, #20]
  401a90:	46cb      	mov	fp, r9
  401a92:	e44f      	b.n	401334 <_vfiprintf_r+0x2a4>
  401a94:	aa0f      	add	r2, sp, #60	; 0x3c
  401a96:	9904      	ldr	r1, [sp, #16]
  401a98:	9806      	ldr	r0, [sp, #24]
  401a9a:	f7ff fab9 	bl	401010 <__sprint_r.part.0>
  401a9e:	2800      	cmp	r0, #0
  401aa0:	d1a8      	bne.n	4019f4 <_vfiprintf_r+0x964>
  401aa2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401aa4:	46ca      	mov	sl, r9
  401aa6:	e75e      	b.n	401966 <_vfiprintf_r+0x8d6>
  401aa8:	aa0f      	add	r2, sp, #60	; 0x3c
  401aaa:	9904      	ldr	r1, [sp, #16]
  401aac:	9806      	ldr	r0, [sp, #24]
  401aae:	f7ff faaf 	bl	401010 <__sprint_r.part.0>
  401ab2:	2800      	cmp	r0, #0
  401ab4:	d19e      	bne.n	4019f4 <_vfiprintf_r+0x964>
  401ab6:	46ca      	mov	sl, r9
  401ab8:	f7ff bbc0 	b.w	40123c <_vfiprintf_r+0x1ac>
  401abc:	00403d84 	.word	0x00403d84
  401ac0:	00403d74 	.word	0x00403d74
  401ac4:	3104      	adds	r1, #4
  401ac6:	6816      	ldr	r6, [r2, #0]
  401ac8:	9107      	str	r1, [sp, #28]
  401aca:	2201      	movs	r2, #1
  401acc:	2700      	movs	r7, #0
  401ace:	e412      	b.n	4012f6 <_vfiprintf_r+0x266>
  401ad0:	9807      	ldr	r0, [sp, #28]
  401ad2:	4601      	mov	r1, r0
  401ad4:	3104      	adds	r1, #4
  401ad6:	6806      	ldr	r6, [r0, #0]
  401ad8:	9107      	str	r1, [sp, #28]
  401ada:	2700      	movs	r7, #0
  401adc:	e40b      	b.n	4012f6 <_vfiprintf_r+0x266>
  401ade:	680e      	ldr	r6, [r1, #0]
  401ae0:	3104      	adds	r1, #4
  401ae2:	9107      	str	r1, [sp, #28]
  401ae4:	2700      	movs	r7, #0
  401ae6:	e591      	b.n	40160c <_vfiprintf_r+0x57c>
  401ae8:	9907      	ldr	r1, [sp, #28]
  401aea:	680e      	ldr	r6, [r1, #0]
  401aec:	460a      	mov	r2, r1
  401aee:	17f7      	asrs	r7, r6, #31
  401af0:	3204      	adds	r2, #4
  401af2:	9207      	str	r2, [sp, #28]
  401af4:	4630      	mov	r0, r6
  401af6:	4639      	mov	r1, r7
  401af8:	e50f      	b.n	40151a <_vfiprintf_r+0x48a>
  401afa:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401afe:	f000 fe7f 	bl	402800 <__retarget_lock_release_recursive>
  401b02:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401b06:	e71a      	b.n	40193e <_vfiprintf_r+0x8ae>
  401b08:	9b02      	ldr	r3, [sp, #8]
  401b0a:	9302      	str	r3, [sp, #8]
  401b0c:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  401b10:	3630      	adds	r6, #48	; 0x30
  401b12:	2301      	movs	r3, #1
  401b14:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  401b18:	9305      	str	r3, [sp, #20]
  401b1a:	e40b      	b.n	401334 <_vfiprintf_r+0x2a4>
  401b1c:	aa0f      	add	r2, sp, #60	; 0x3c
  401b1e:	9904      	ldr	r1, [sp, #16]
  401b20:	9806      	ldr	r0, [sp, #24]
  401b22:	f7ff fa75 	bl	401010 <__sprint_r.part.0>
  401b26:	2800      	cmp	r0, #0
  401b28:	f47f af64 	bne.w	4019f4 <_vfiprintf_r+0x964>
  401b2c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401b2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b30:	1c48      	adds	r0, r1, #1
  401b32:	46ca      	mov	sl, r9
  401b34:	e651      	b.n	4017da <_vfiprintf_r+0x74a>
  401b36:	aa0f      	add	r2, sp, #60	; 0x3c
  401b38:	9904      	ldr	r1, [sp, #16]
  401b3a:	9806      	ldr	r0, [sp, #24]
  401b3c:	f7ff fa68 	bl	401010 <__sprint_r.part.0>
  401b40:	2800      	cmp	r0, #0
  401b42:	f47f af57 	bne.w	4019f4 <_vfiprintf_r+0x964>
  401b46:	9910      	ldr	r1, [sp, #64]	; 0x40
  401b48:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b4a:	1c48      	adds	r0, r1, #1
  401b4c:	46ca      	mov	sl, r9
  401b4e:	e448      	b.n	4013e2 <_vfiprintf_r+0x352>
  401b50:	2a00      	cmp	r2, #0
  401b52:	f040 8091 	bne.w	401c78 <_vfiprintf_r+0xbe8>
  401b56:	2001      	movs	r0, #1
  401b58:	4611      	mov	r1, r2
  401b5a:	46ca      	mov	sl, r9
  401b5c:	e641      	b.n	4017e2 <_vfiprintf_r+0x752>
  401b5e:	aa0f      	add	r2, sp, #60	; 0x3c
  401b60:	9904      	ldr	r1, [sp, #16]
  401b62:	9806      	ldr	r0, [sp, #24]
  401b64:	f7ff fa54 	bl	401010 <__sprint_r.part.0>
  401b68:	2800      	cmp	r0, #0
  401b6a:	f47f af43 	bne.w	4019f4 <_vfiprintf_r+0x964>
  401b6e:	9810      	ldr	r0, [sp, #64]	; 0x40
  401b70:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b72:	3001      	adds	r0, #1
  401b74:	46ca      	mov	sl, r9
  401b76:	e667      	b.n	401848 <_vfiprintf_r+0x7b8>
  401b78:	46d3      	mov	fp, sl
  401b7a:	e6d6      	b.n	40192a <_vfiprintf_r+0x89a>
  401b7c:	9e07      	ldr	r6, [sp, #28]
  401b7e:	3607      	adds	r6, #7
  401b80:	f026 0207 	bic.w	r2, r6, #7
  401b84:	f102 0108 	add.w	r1, r2, #8
  401b88:	e9d2 6700 	ldrd	r6, r7, [r2]
  401b8c:	9107      	str	r1, [sp, #28]
  401b8e:	2201      	movs	r2, #1
  401b90:	f7ff bbb1 	b.w	4012f6 <_vfiprintf_r+0x266>
  401b94:	9e07      	ldr	r6, [sp, #28]
  401b96:	3607      	adds	r6, #7
  401b98:	f026 0607 	bic.w	r6, r6, #7
  401b9c:	e9d6 0100 	ldrd	r0, r1, [r6]
  401ba0:	f106 0208 	add.w	r2, r6, #8
  401ba4:	9207      	str	r2, [sp, #28]
  401ba6:	4606      	mov	r6, r0
  401ba8:	460f      	mov	r7, r1
  401baa:	e4b6      	b.n	40151a <_vfiprintf_r+0x48a>
  401bac:	9e07      	ldr	r6, [sp, #28]
  401bae:	3607      	adds	r6, #7
  401bb0:	f026 0207 	bic.w	r2, r6, #7
  401bb4:	f102 0108 	add.w	r1, r2, #8
  401bb8:	e9d2 6700 	ldrd	r6, r7, [r2]
  401bbc:	9107      	str	r1, [sp, #28]
  401bbe:	2200      	movs	r2, #0
  401bc0:	f7ff bb99 	b.w	4012f6 <_vfiprintf_r+0x266>
  401bc4:	9e07      	ldr	r6, [sp, #28]
  401bc6:	3607      	adds	r6, #7
  401bc8:	f026 0107 	bic.w	r1, r6, #7
  401bcc:	f101 0008 	add.w	r0, r1, #8
  401bd0:	9007      	str	r0, [sp, #28]
  401bd2:	e9d1 6700 	ldrd	r6, r7, [r1]
  401bd6:	e519      	b.n	40160c <_vfiprintf_r+0x57c>
  401bd8:	46cb      	mov	fp, r9
  401bda:	f7ff bbab 	b.w	401334 <_vfiprintf_r+0x2a4>
  401bde:	252d      	movs	r5, #45	; 0x2d
  401be0:	4276      	negs	r6, r6
  401be2:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  401be6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401bea:	2201      	movs	r2, #1
  401bec:	f7ff bb88 	b.w	401300 <_vfiprintf_r+0x270>
  401bf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401bf2:	b9b3      	cbnz	r3, 401c22 <_vfiprintf_r+0xb92>
  401bf4:	4611      	mov	r1, r2
  401bf6:	2001      	movs	r0, #1
  401bf8:	46ca      	mov	sl, r9
  401bfa:	e5f2      	b.n	4017e2 <_vfiprintf_r+0x752>
  401bfc:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401c00:	f000 fdfe 	bl	402800 <__retarget_lock_release_recursive>
  401c04:	f04f 33ff 	mov.w	r3, #4294967295
  401c08:	9303      	str	r3, [sp, #12]
  401c0a:	f7ff bb50 	b.w	4012ae <_vfiprintf_r+0x21e>
  401c0e:	aa0f      	add	r2, sp, #60	; 0x3c
  401c10:	9904      	ldr	r1, [sp, #16]
  401c12:	9806      	ldr	r0, [sp, #24]
  401c14:	f7ff f9fc 	bl	401010 <__sprint_r.part.0>
  401c18:	2800      	cmp	r0, #0
  401c1a:	f47f aeeb 	bne.w	4019f4 <_vfiprintf_r+0x964>
  401c1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401c20:	e6a9      	b.n	401976 <_vfiprintf_r+0x8e6>
  401c22:	ab0e      	add	r3, sp, #56	; 0x38
  401c24:	2202      	movs	r2, #2
  401c26:	931c      	str	r3, [sp, #112]	; 0x70
  401c28:	921d      	str	r2, [sp, #116]	; 0x74
  401c2a:	2001      	movs	r0, #1
  401c2c:	46ca      	mov	sl, r9
  401c2e:	e5d0      	b.n	4017d2 <_vfiprintf_r+0x742>
  401c30:	aa0f      	add	r2, sp, #60	; 0x3c
  401c32:	9904      	ldr	r1, [sp, #16]
  401c34:	9806      	ldr	r0, [sp, #24]
  401c36:	f7ff f9eb 	bl	401010 <__sprint_r.part.0>
  401c3a:	2800      	cmp	r0, #0
  401c3c:	f47f aeda 	bne.w	4019f4 <_vfiprintf_r+0x964>
  401c40:	9910      	ldr	r1, [sp, #64]	; 0x40
  401c42:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401c44:	1c48      	adds	r0, r1, #1
  401c46:	46ca      	mov	sl, r9
  401c48:	e5a4      	b.n	401794 <_vfiprintf_r+0x704>
  401c4a:	9a07      	ldr	r2, [sp, #28]
  401c4c:	9903      	ldr	r1, [sp, #12]
  401c4e:	6813      	ldr	r3, [r2, #0]
  401c50:	17cd      	asrs	r5, r1, #31
  401c52:	4608      	mov	r0, r1
  401c54:	3204      	adds	r2, #4
  401c56:	4629      	mov	r1, r5
  401c58:	9207      	str	r2, [sp, #28]
  401c5a:	e9c3 0100 	strd	r0, r1, [r3]
  401c5e:	f7ff ba54 	b.w	40110a <_vfiprintf_r+0x7a>
  401c62:	4658      	mov	r0, fp
  401c64:	9607      	str	r6, [sp, #28]
  401c66:	9302      	str	r3, [sp, #8]
  401c68:	f001 fc6a 	bl	403540 <strlen>
  401c6c:	2400      	movs	r4, #0
  401c6e:	9005      	str	r0, [sp, #20]
  401c70:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401c74:	f7ff bb5e 	b.w	401334 <_vfiprintf_r+0x2a4>
  401c78:	aa0f      	add	r2, sp, #60	; 0x3c
  401c7a:	9904      	ldr	r1, [sp, #16]
  401c7c:	9806      	ldr	r0, [sp, #24]
  401c7e:	f7ff f9c7 	bl	401010 <__sprint_r.part.0>
  401c82:	2800      	cmp	r0, #0
  401c84:	f47f aeb6 	bne.w	4019f4 <_vfiprintf_r+0x964>
  401c88:	9910      	ldr	r1, [sp, #64]	; 0x40
  401c8a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401c8c:	1c48      	adds	r0, r1, #1
  401c8e:	46ca      	mov	sl, r9
  401c90:	e5a7      	b.n	4017e2 <_vfiprintf_r+0x752>
  401c92:	9910      	ldr	r1, [sp, #64]	; 0x40
  401c94:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401c96:	4e20      	ldr	r6, [pc, #128]	; (401d18 <_vfiprintf_r+0xc88>)
  401c98:	3101      	adds	r1, #1
  401c9a:	f7ff bb90 	b.w	4013be <_vfiprintf_r+0x32e>
  401c9e:	2c06      	cmp	r4, #6
  401ca0:	bf28      	it	cs
  401ca2:	2406      	movcs	r4, #6
  401ca4:	9405      	str	r4, [sp, #20]
  401ca6:	9607      	str	r6, [sp, #28]
  401ca8:	9401      	str	r4, [sp, #4]
  401caa:	f8df b070 	ldr.w	fp, [pc, #112]	; 401d1c <_vfiprintf_r+0xc8c>
  401cae:	e4d5      	b.n	40165c <_vfiprintf_r+0x5cc>
  401cb0:	9810      	ldr	r0, [sp, #64]	; 0x40
  401cb2:	4e19      	ldr	r6, [pc, #100]	; (401d18 <_vfiprintf_r+0xc88>)
  401cb4:	3001      	adds	r0, #1
  401cb6:	e603      	b.n	4018c0 <_vfiprintf_r+0x830>
  401cb8:	9405      	str	r4, [sp, #20]
  401cba:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401cbe:	9607      	str	r6, [sp, #28]
  401cc0:	9302      	str	r3, [sp, #8]
  401cc2:	4604      	mov	r4, r0
  401cc4:	f7ff bb36 	b.w	401334 <_vfiprintf_r+0x2a4>
  401cc8:	4686      	mov	lr, r0
  401cca:	f7ff bbce 	b.w	40146a <_vfiprintf_r+0x3da>
  401cce:	9806      	ldr	r0, [sp, #24]
  401cd0:	aa0f      	add	r2, sp, #60	; 0x3c
  401cd2:	4659      	mov	r1, fp
  401cd4:	f7ff f99c 	bl	401010 <__sprint_r.part.0>
  401cd8:	2800      	cmp	r0, #0
  401cda:	f43f ae24 	beq.w	401926 <_vfiprintf_r+0x896>
  401cde:	e624      	b.n	40192a <_vfiprintf_r+0x89a>
  401ce0:	9907      	ldr	r1, [sp, #28]
  401ce2:	f898 2001 	ldrb.w	r2, [r8, #1]
  401ce6:	680c      	ldr	r4, [r1, #0]
  401ce8:	3104      	adds	r1, #4
  401cea:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  401cee:	46b8      	mov	r8, r7
  401cf0:	9107      	str	r1, [sp, #28]
  401cf2:	f7ff ba3f 	b.w	401174 <_vfiprintf_r+0xe4>
  401cf6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401cfa:	e43c      	b.n	401576 <_vfiprintf_r+0x4e6>
  401cfc:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401d00:	e521      	b.n	401746 <_vfiprintf_r+0x6b6>
  401d02:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401d06:	f7ff bbf4 	b.w	4014f2 <_vfiprintf_r+0x462>
  401d0a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401d0e:	e491      	b.n	401634 <_vfiprintf_r+0x5a4>
  401d10:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401d14:	e469      	b.n	4015ea <_vfiprintf_r+0x55a>
  401d16:	bf00      	nop
  401d18:	00403d74 	.word	0x00403d74
  401d1c:	00403d6c 	.word	0x00403d6c

00401d20 <__sbprintf>:
  401d20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401d24:	460c      	mov	r4, r1
  401d26:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  401d2a:	8989      	ldrh	r1, [r1, #12]
  401d2c:	6e66      	ldr	r6, [r4, #100]	; 0x64
  401d2e:	89e5      	ldrh	r5, [r4, #14]
  401d30:	9619      	str	r6, [sp, #100]	; 0x64
  401d32:	f021 0102 	bic.w	r1, r1, #2
  401d36:	4606      	mov	r6, r0
  401d38:	69e0      	ldr	r0, [r4, #28]
  401d3a:	f8ad 100c 	strh.w	r1, [sp, #12]
  401d3e:	4617      	mov	r7, r2
  401d40:	f44f 6180 	mov.w	r1, #1024	; 0x400
  401d44:	6a62      	ldr	r2, [r4, #36]	; 0x24
  401d46:	f8ad 500e 	strh.w	r5, [sp, #14]
  401d4a:	4698      	mov	r8, r3
  401d4c:	ad1a      	add	r5, sp, #104	; 0x68
  401d4e:	2300      	movs	r3, #0
  401d50:	9007      	str	r0, [sp, #28]
  401d52:	a816      	add	r0, sp, #88	; 0x58
  401d54:	9209      	str	r2, [sp, #36]	; 0x24
  401d56:	9306      	str	r3, [sp, #24]
  401d58:	9500      	str	r5, [sp, #0]
  401d5a:	9504      	str	r5, [sp, #16]
  401d5c:	9102      	str	r1, [sp, #8]
  401d5e:	9105      	str	r1, [sp, #20]
  401d60:	f000 fd48 	bl	4027f4 <__retarget_lock_init_recursive>
  401d64:	4643      	mov	r3, r8
  401d66:	463a      	mov	r2, r7
  401d68:	4669      	mov	r1, sp
  401d6a:	4630      	mov	r0, r6
  401d6c:	f7ff f990 	bl	401090 <_vfiprintf_r>
  401d70:	1e05      	subs	r5, r0, #0
  401d72:	db07      	blt.n	401d84 <__sbprintf+0x64>
  401d74:	4630      	mov	r0, r6
  401d76:	4669      	mov	r1, sp
  401d78:	f000 f928 	bl	401fcc <_fflush_r>
  401d7c:	2800      	cmp	r0, #0
  401d7e:	bf18      	it	ne
  401d80:	f04f 35ff 	movne.w	r5, #4294967295
  401d84:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  401d88:	065b      	lsls	r3, r3, #25
  401d8a:	d503      	bpl.n	401d94 <__sbprintf+0x74>
  401d8c:	89a3      	ldrh	r3, [r4, #12]
  401d8e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401d92:	81a3      	strh	r3, [r4, #12]
  401d94:	9816      	ldr	r0, [sp, #88]	; 0x58
  401d96:	f000 fd2f 	bl	4027f8 <__retarget_lock_close_recursive>
  401d9a:	4628      	mov	r0, r5
  401d9c:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  401da0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00401da4 <__swsetup_r>:
  401da4:	b538      	push	{r3, r4, r5, lr}
  401da6:	4b30      	ldr	r3, [pc, #192]	; (401e68 <__swsetup_r+0xc4>)
  401da8:	681b      	ldr	r3, [r3, #0]
  401daa:	4605      	mov	r5, r0
  401dac:	460c      	mov	r4, r1
  401dae:	b113      	cbz	r3, 401db6 <__swsetup_r+0x12>
  401db0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  401db2:	2a00      	cmp	r2, #0
  401db4:	d038      	beq.n	401e28 <__swsetup_r+0x84>
  401db6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  401dba:	b293      	uxth	r3, r2
  401dbc:	0718      	lsls	r0, r3, #28
  401dbe:	d50c      	bpl.n	401dda <__swsetup_r+0x36>
  401dc0:	6920      	ldr	r0, [r4, #16]
  401dc2:	b1a8      	cbz	r0, 401df0 <__swsetup_r+0x4c>
  401dc4:	f013 0201 	ands.w	r2, r3, #1
  401dc8:	d01e      	beq.n	401e08 <__swsetup_r+0x64>
  401dca:	6963      	ldr	r3, [r4, #20]
  401dcc:	2200      	movs	r2, #0
  401dce:	425b      	negs	r3, r3
  401dd0:	61a3      	str	r3, [r4, #24]
  401dd2:	60a2      	str	r2, [r4, #8]
  401dd4:	b1f0      	cbz	r0, 401e14 <__swsetup_r+0x70>
  401dd6:	2000      	movs	r0, #0
  401dd8:	bd38      	pop	{r3, r4, r5, pc}
  401dda:	06d9      	lsls	r1, r3, #27
  401ddc:	d53c      	bpl.n	401e58 <__swsetup_r+0xb4>
  401dde:	0758      	lsls	r0, r3, #29
  401de0:	d426      	bmi.n	401e30 <__swsetup_r+0x8c>
  401de2:	6920      	ldr	r0, [r4, #16]
  401de4:	f042 0308 	orr.w	r3, r2, #8
  401de8:	81a3      	strh	r3, [r4, #12]
  401dea:	b29b      	uxth	r3, r3
  401dec:	2800      	cmp	r0, #0
  401dee:	d1e9      	bne.n	401dc4 <__swsetup_r+0x20>
  401df0:	f403 7220 	and.w	r2, r3, #640	; 0x280
  401df4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  401df8:	d0e4      	beq.n	401dc4 <__swsetup_r+0x20>
  401dfa:	4628      	mov	r0, r5
  401dfc:	4621      	mov	r1, r4
  401dfe:	f000 fd2f 	bl	402860 <__smakebuf_r>
  401e02:	89a3      	ldrh	r3, [r4, #12]
  401e04:	6920      	ldr	r0, [r4, #16]
  401e06:	e7dd      	b.n	401dc4 <__swsetup_r+0x20>
  401e08:	0799      	lsls	r1, r3, #30
  401e0a:	bf58      	it	pl
  401e0c:	6962      	ldrpl	r2, [r4, #20]
  401e0e:	60a2      	str	r2, [r4, #8]
  401e10:	2800      	cmp	r0, #0
  401e12:	d1e0      	bne.n	401dd6 <__swsetup_r+0x32>
  401e14:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401e18:	061a      	lsls	r2, r3, #24
  401e1a:	d5dd      	bpl.n	401dd8 <__swsetup_r+0x34>
  401e1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401e20:	81a3      	strh	r3, [r4, #12]
  401e22:	f04f 30ff 	mov.w	r0, #4294967295
  401e26:	bd38      	pop	{r3, r4, r5, pc}
  401e28:	4618      	mov	r0, r3
  401e2a:	f000 f927 	bl	40207c <__sinit>
  401e2e:	e7c2      	b.n	401db6 <__swsetup_r+0x12>
  401e30:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401e32:	b151      	cbz	r1, 401e4a <__swsetup_r+0xa6>
  401e34:	f104 0340 	add.w	r3, r4, #64	; 0x40
  401e38:	4299      	cmp	r1, r3
  401e3a:	d004      	beq.n	401e46 <__swsetup_r+0xa2>
  401e3c:	4628      	mov	r0, r5
  401e3e:	f000 fa43 	bl	4022c8 <_free_r>
  401e42:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  401e46:	2300      	movs	r3, #0
  401e48:	6323      	str	r3, [r4, #48]	; 0x30
  401e4a:	2300      	movs	r3, #0
  401e4c:	6920      	ldr	r0, [r4, #16]
  401e4e:	6063      	str	r3, [r4, #4]
  401e50:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  401e54:	6020      	str	r0, [r4, #0]
  401e56:	e7c5      	b.n	401de4 <__swsetup_r+0x40>
  401e58:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  401e5c:	2309      	movs	r3, #9
  401e5e:	602b      	str	r3, [r5, #0]
  401e60:	f04f 30ff 	mov.w	r0, #4294967295
  401e64:	81a2      	strh	r2, [r4, #12]
  401e66:	bd38      	pop	{r3, r4, r5, pc}
  401e68:	20400008 	.word	0x20400008

00401e6c <register_fini>:
  401e6c:	4b02      	ldr	r3, [pc, #8]	; (401e78 <register_fini+0xc>)
  401e6e:	b113      	cbz	r3, 401e76 <register_fini+0xa>
  401e70:	4802      	ldr	r0, [pc, #8]	; (401e7c <register_fini+0x10>)
  401e72:	f000 b805 	b.w	401e80 <atexit>
  401e76:	4770      	bx	lr
  401e78:	00000000 	.word	0x00000000
  401e7c:	004020ed 	.word	0x004020ed

00401e80 <atexit>:
  401e80:	2300      	movs	r3, #0
  401e82:	4601      	mov	r1, r0
  401e84:	461a      	mov	r2, r3
  401e86:	4618      	mov	r0, r3
  401e88:	f001 bc6e 	b.w	403768 <__register_exitproc>

00401e8c <__sflush_r>:
  401e8c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  401e90:	b29a      	uxth	r2, r3
  401e92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401e96:	460d      	mov	r5, r1
  401e98:	0711      	lsls	r1, r2, #28
  401e9a:	4680      	mov	r8, r0
  401e9c:	d43a      	bmi.n	401f14 <__sflush_r+0x88>
  401e9e:	686a      	ldr	r2, [r5, #4]
  401ea0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  401ea4:	2a00      	cmp	r2, #0
  401ea6:	81ab      	strh	r3, [r5, #12]
  401ea8:	dd6f      	ble.n	401f8a <__sflush_r+0xfe>
  401eaa:	6aac      	ldr	r4, [r5, #40]	; 0x28
  401eac:	2c00      	cmp	r4, #0
  401eae:	d049      	beq.n	401f44 <__sflush_r+0xb8>
  401eb0:	2200      	movs	r2, #0
  401eb2:	b29b      	uxth	r3, r3
  401eb4:	f8d8 6000 	ldr.w	r6, [r8]
  401eb8:	f8c8 2000 	str.w	r2, [r8]
  401ebc:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  401ec0:	d067      	beq.n	401f92 <__sflush_r+0x106>
  401ec2:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  401ec4:	075f      	lsls	r7, r3, #29
  401ec6:	d505      	bpl.n	401ed4 <__sflush_r+0x48>
  401ec8:	6869      	ldr	r1, [r5, #4]
  401eca:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  401ecc:	1a52      	subs	r2, r2, r1
  401ece:	b10b      	cbz	r3, 401ed4 <__sflush_r+0x48>
  401ed0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  401ed2:	1ad2      	subs	r2, r2, r3
  401ed4:	2300      	movs	r3, #0
  401ed6:	69e9      	ldr	r1, [r5, #28]
  401ed8:	4640      	mov	r0, r8
  401eda:	47a0      	blx	r4
  401edc:	1c44      	adds	r4, r0, #1
  401ede:	d03c      	beq.n	401f5a <__sflush_r+0xce>
  401ee0:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  401ee4:	692a      	ldr	r2, [r5, #16]
  401ee6:	602a      	str	r2, [r5, #0]
  401ee8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  401eec:	2200      	movs	r2, #0
  401eee:	81ab      	strh	r3, [r5, #12]
  401ef0:	04db      	lsls	r3, r3, #19
  401ef2:	606a      	str	r2, [r5, #4]
  401ef4:	d447      	bmi.n	401f86 <__sflush_r+0xfa>
  401ef6:	6b29      	ldr	r1, [r5, #48]	; 0x30
  401ef8:	f8c8 6000 	str.w	r6, [r8]
  401efc:	b311      	cbz	r1, 401f44 <__sflush_r+0xb8>
  401efe:	f105 0340 	add.w	r3, r5, #64	; 0x40
  401f02:	4299      	cmp	r1, r3
  401f04:	d002      	beq.n	401f0c <__sflush_r+0x80>
  401f06:	4640      	mov	r0, r8
  401f08:	f000 f9de 	bl	4022c8 <_free_r>
  401f0c:	2000      	movs	r0, #0
  401f0e:	6328      	str	r0, [r5, #48]	; 0x30
  401f10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401f14:	692e      	ldr	r6, [r5, #16]
  401f16:	b1ae      	cbz	r6, 401f44 <__sflush_r+0xb8>
  401f18:	682c      	ldr	r4, [r5, #0]
  401f1a:	602e      	str	r6, [r5, #0]
  401f1c:	0791      	lsls	r1, r2, #30
  401f1e:	bf0c      	ite	eq
  401f20:	696b      	ldreq	r3, [r5, #20]
  401f22:	2300      	movne	r3, #0
  401f24:	1ba4      	subs	r4, r4, r6
  401f26:	60ab      	str	r3, [r5, #8]
  401f28:	e00a      	b.n	401f40 <__sflush_r+0xb4>
  401f2a:	4623      	mov	r3, r4
  401f2c:	4632      	mov	r2, r6
  401f2e:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  401f30:	69e9      	ldr	r1, [r5, #28]
  401f32:	4640      	mov	r0, r8
  401f34:	47b8      	blx	r7
  401f36:	2800      	cmp	r0, #0
  401f38:	eba4 0400 	sub.w	r4, r4, r0
  401f3c:	4406      	add	r6, r0
  401f3e:	dd04      	ble.n	401f4a <__sflush_r+0xbe>
  401f40:	2c00      	cmp	r4, #0
  401f42:	dcf2      	bgt.n	401f2a <__sflush_r+0x9e>
  401f44:	2000      	movs	r0, #0
  401f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401f4a:	89ab      	ldrh	r3, [r5, #12]
  401f4c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401f50:	81ab      	strh	r3, [r5, #12]
  401f52:	f04f 30ff 	mov.w	r0, #4294967295
  401f56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401f5a:	f8d8 4000 	ldr.w	r4, [r8]
  401f5e:	2c1d      	cmp	r4, #29
  401f60:	d8f3      	bhi.n	401f4a <__sflush_r+0xbe>
  401f62:	4b19      	ldr	r3, [pc, #100]	; (401fc8 <__sflush_r+0x13c>)
  401f64:	40e3      	lsrs	r3, r4
  401f66:	43db      	mvns	r3, r3
  401f68:	f013 0301 	ands.w	r3, r3, #1
  401f6c:	d1ed      	bne.n	401f4a <__sflush_r+0xbe>
  401f6e:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  401f72:	606b      	str	r3, [r5, #4]
  401f74:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  401f78:	6929      	ldr	r1, [r5, #16]
  401f7a:	81ab      	strh	r3, [r5, #12]
  401f7c:	04da      	lsls	r2, r3, #19
  401f7e:	6029      	str	r1, [r5, #0]
  401f80:	d5b9      	bpl.n	401ef6 <__sflush_r+0x6a>
  401f82:	2c00      	cmp	r4, #0
  401f84:	d1b7      	bne.n	401ef6 <__sflush_r+0x6a>
  401f86:	6528      	str	r0, [r5, #80]	; 0x50
  401f88:	e7b5      	b.n	401ef6 <__sflush_r+0x6a>
  401f8a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  401f8c:	2a00      	cmp	r2, #0
  401f8e:	dc8c      	bgt.n	401eaa <__sflush_r+0x1e>
  401f90:	e7d8      	b.n	401f44 <__sflush_r+0xb8>
  401f92:	2301      	movs	r3, #1
  401f94:	69e9      	ldr	r1, [r5, #28]
  401f96:	4640      	mov	r0, r8
  401f98:	47a0      	blx	r4
  401f9a:	1c43      	adds	r3, r0, #1
  401f9c:	4602      	mov	r2, r0
  401f9e:	d002      	beq.n	401fa6 <__sflush_r+0x11a>
  401fa0:	89ab      	ldrh	r3, [r5, #12]
  401fa2:	6aac      	ldr	r4, [r5, #40]	; 0x28
  401fa4:	e78e      	b.n	401ec4 <__sflush_r+0x38>
  401fa6:	f8d8 3000 	ldr.w	r3, [r8]
  401faa:	2b00      	cmp	r3, #0
  401fac:	d0f8      	beq.n	401fa0 <__sflush_r+0x114>
  401fae:	2b1d      	cmp	r3, #29
  401fb0:	d001      	beq.n	401fb6 <__sflush_r+0x12a>
  401fb2:	2b16      	cmp	r3, #22
  401fb4:	d102      	bne.n	401fbc <__sflush_r+0x130>
  401fb6:	f8c8 6000 	str.w	r6, [r8]
  401fba:	e7c3      	b.n	401f44 <__sflush_r+0xb8>
  401fbc:	89ab      	ldrh	r3, [r5, #12]
  401fbe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401fc2:	81ab      	strh	r3, [r5, #12]
  401fc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401fc8:	20400001 	.word	0x20400001

00401fcc <_fflush_r>:
  401fcc:	b538      	push	{r3, r4, r5, lr}
  401fce:	460d      	mov	r5, r1
  401fd0:	4604      	mov	r4, r0
  401fd2:	b108      	cbz	r0, 401fd8 <_fflush_r+0xc>
  401fd4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401fd6:	b1bb      	cbz	r3, 402008 <_fflush_r+0x3c>
  401fd8:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  401fdc:	b188      	cbz	r0, 402002 <_fflush_r+0x36>
  401fde:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  401fe0:	07db      	lsls	r3, r3, #31
  401fe2:	d401      	bmi.n	401fe8 <_fflush_r+0x1c>
  401fe4:	0581      	lsls	r1, r0, #22
  401fe6:	d517      	bpl.n	402018 <_fflush_r+0x4c>
  401fe8:	4620      	mov	r0, r4
  401fea:	4629      	mov	r1, r5
  401fec:	f7ff ff4e 	bl	401e8c <__sflush_r>
  401ff0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  401ff2:	07da      	lsls	r2, r3, #31
  401ff4:	4604      	mov	r4, r0
  401ff6:	d402      	bmi.n	401ffe <_fflush_r+0x32>
  401ff8:	89ab      	ldrh	r3, [r5, #12]
  401ffa:	059b      	lsls	r3, r3, #22
  401ffc:	d507      	bpl.n	40200e <_fflush_r+0x42>
  401ffe:	4620      	mov	r0, r4
  402000:	bd38      	pop	{r3, r4, r5, pc}
  402002:	4604      	mov	r4, r0
  402004:	4620      	mov	r0, r4
  402006:	bd38      	pop	{r3, r4, r5, pc}
  402008:	f000 f838 	bl	40207c <__sinit>
  40200c:	e7e4      	b.n	401fd8 <_fflush_r+0xc>
  40200e:	6da8      	ldr	r0, [r5, #88]	; 0x58
  402010:	f000 fbf6 	bl	402800 <__retarget_lock_release_recursive>
  402014:	4620      	mov	r0, r4
  402016:	bd38      	pop	{r3, r4, r5, pc}
  402018:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40201a:	f000 fbef 	bl	4027fc <__retarget_lock_acquire_recursive>
  40201e:	e7e3      	b.n	401fe8 <_fflush_r+0x1c>

00402020 <_cleanup_r>:
  402020:	4901      	ldr	r1, [pc, #4]	; (402028 <_cleanup_r+0x8>)
  402022:	f000 bbaf 	b.w	402784 <_fwalk_reent>
  402026:	bf00      	nop
  402028:	00403851 	.word	0x00403851

0040202c <std.isra.0>:
  40202c:	b510      	push	{r4, lr}
  40202e:	2300      	movs	r3, #0
  402030:	4604      	mov	r4, r0
  402032:	8181      	strh	r1, [r0, #12]
  402034:	81c2      	strh	r2, [r0, #14]
  402036:	6003      	str	r3, [r0, #0]
  402038:	6043      	str	r3, [r0, #4]
  40203a:	6083      	str	r3, [r0, #8]
  40203c:	6643      	str	r3, [r0, #100]	; 0x64
  40203e:	6103      	str	r3, [r0, #16]
  402040:	6143      	str	r3, [r0, #20]
  402042:	6183      	str	r3, [r0, #24]
  402044:	4619      	mov	r1, r3
  402046:	2208      	movs	r2, #8
  402048:	305c      	adds	r0, #92	; 0x5c
  40204a:	f7fe fec3 	bl	400dd4 <memset>
  40204e:	4807      	ldr	r0, [pc, #28]	; (40206c <std.isra.0+0x40>)
  402050:	4907      	ldr	r1, [pc, #28]	; (402070 <std.isra.0+0x44>)
  402052:	4a08      	ldr	r2, [pc, #32]	; (402074 <std.isra.0+0x48>)
  402054:	4b08      	ldr	r3, [pc, #32]	; (402078 <std.isra.0+0x4c>)
  402056:	6220      	str	r0, [r4, #32]
  402058:	61e4      	str	r4, [r4, #28]
  40205a:	6261      	str	r1, [r4, #36]	; 0x24
  40205c:	62a2      	str	r2, [r4, #40]	; 0x28
  40205e:	62e3      	str	r3, [r4, #44]	; 0x2c
  402060:	f104 0058 	add.w	r0, r4, #88	; 0x58
  402064:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402068:	f000 bbc4 	b.w	4027f4 <__retarget_lock_init_recursive>
  40206c:	004034b5 	.word	0x004034b5
  402070:	004034d9 	.word	0x004034d9
  402074:	00403515 	.word	0x00403515
  402078:	00403535 	.word	0x00403535

0040207c <__sinit>:
  40207c:	b510      	push	{r4, lr}
  40207e:	4604      	mov	r4, r0
  402080:	4812      	ldr	r0, [pc, #72]	; (4020cc <__sinit+0x50>)
  402082:	f000 fbbb 	bl	4027fc <__retarget_lock_acquire_recursive>
  402086:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  402088:	b9d2      	cbnz	r2, 4020c0 <__sinit+0x44>
  40208a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  40208e:	4810      	ldr	r0, [pc, #64]	; (4020d0 <__sinit+0x54>)
  402090:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  402094:	2103      	movs	r1, #3
  402096:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  40209a:	63e0      	str	r0, [r4, #60]	; 0x3c
  40209c:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  4020a0:	6860      	ldr	r0, [r4, #4]
  4020a2:	2104      	movs	r1, #4
  4020a4:	f7ff ffc2 	bl	40202c <std.isra.0>
  4020a8:	2201      	movs	r2, #1
  4020aa:	2109      	movs	r1, #9
  4020ac:	68a0      	ldr	r0, [r4, #8]
  4020ae:	f7ff ffbd 	bl	40202c <std.isra.0>
  4020b2:	2202      	movs	r2, #2
  4020b4:	2112      	movs	r1, #18
  4020b6:	68e0      	ldr	r0, [r4, #12]
  4020b8:	f7ff ffb8 	bl	40202c <std.isra.0>
  4020bc:	2301      	movs	r3, #1
  4020be:	63a3      	str	r3, [r4, #56]	; 0x38
  4020c0:	4802      	ldr	r0, [pc, #8]	; (4020cc <__sinit+0x50>)
  4020c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4020c6:	f000 bb9b 	b.w	402800 <__retarget_lock_release_recursive>
  4020ca:	bf00      	nop
  4020cc:	20400a98 	.word	0x20400a98
  4020d0:	00402021 	.word	0x00402021

004020d4 <__sfp_lock_acquire>:
  4020d4:	4801      	ldr	r0, [pc, #4]	; (4020dc <__sfp_lock_acquire+0x8>)
  4020d6:	f000 bb91 	b.w	4027fc <__retarget_lock_acquire_recursive>
  4020da:	bf00      	nop
  4020dc:	20400aac 	.word	0x20400aac

004020e0 <__sfp_lock_release>:
  4020e0:	4801      	ldr	r0, [pc, #4]	; (4020e8 <__sfp_lock_release+0x8>)
  4020e2:	f000 bb8d 	b.w	402800 <__retarget_lock_release_recursive>
  4020e6:	bf00      	nop
  4020e8:	20400aac 	.word	0x20400aac

004020ec <__libc_fini_array>:
  4020ec:	b538      	push	{r3, r4, r5, lr}
  4020ee:	4c0a      	ldr	r4, [pc, #40]	; (402118 <__libc_fini_array+0x2c>)
  4020f0:	4d0a      	ldr	r5, [pc, #40]	; (40211c <__libc_fini_array+0x30>)
  4020f2:	1b64      	subs	r4, r4, r5
  4020f4:	10a4      	asrs	r4, r4, #2
  4020f6:	d00a      	beq.n	40210e <__libc_fini_array+0x22>
  4020f8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4020fc:	3b01      	subs	r3, #1
  4020fe:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  402102:	3c01      	subs	r4, #1
  402104:	f855 3904 	ldr.w	r3, [r5], #-4
  402108:	4798      	blx	r3
  40210a:	2c00      	cmp	r4, #0
  40210c:	d1f9      	bne.n	402102 <__libc_fini_array+0x16>
  40210e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402112:	f001 bed3 	b.w	403ebc <_fini>
  402116:	bf00      	nop
  402118:	00403ecc 	.word	0x00403ecc
  40211c:	00403ec8 	.word	0x00403ec8

00402120 <__fputwc>:
  402120:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  402124:	b082      	sub	sp, #8
  402126:	4680      	mov	r8, r0
  402128:	4689      	mov	r9, r1
  40212a:	4614      	mov	r4, r2
  40212c:	f000 fb54 	bl	4027d8 <__locale_mb_cur_max>
  402130:	2801      	cmp	r0, #1
  402132:	d036      	beq.n	4021a2 <__fputwc+0x82>
  402134:	464a      	mov	r2, r9
  402136:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  40213a:	a901      	add	r1, sp, #4
  40213c:	4640      	mov	r0, r8
  40213e:	f001 fac5 	bl	4036cc <_wcrtomb_r>
  402142:	1c42      	adds	r2, r0, #1
  402144:	4606      	mov	r6, r0
  402146:	d025      	beq.n	402194 <__fputwc+0x74>
  402148:	b3a8      	cbz	r0, 4021b6 <__fputwc+0x96>
  40214a:	f89d e004 	ldrb.w	lr, [sp, #4]
  40214e:	2500      	movs	r5, #0
  402150:	f10d 0a04 	add.w	sl, sp, #4
  402154:	e009      	b.n	40216a <__fputwc+0x4a>
  402156:	6823      	ldr	r3, [r4, #0]
  402158:	1c5a      	adds	r2, r3, #1
  40215a:	6022      	str	r2, [r4, #0]
  40215c:	f883 e000 	strb.w	lr, [r3]
  402160:	3501      	adds	r5, #1
  402162:	42b5      	cmp	r5, r6
  402164:	d227      	bcs.n	4021b6 <__fputwc+0x96>
  402166:	f815 e00a 	ldrb.w	lr, [r5, sl]
  40216a:	68a3      	ldr	r3, [r4, #8]
  40216c:	3b01      	subs	r3, #1
  40216e:	2b00      	cmp	r3, #0
  402170:	60a3      	str	r3, [r4, #8]
  402172:	daf0      	bge.n	402156 <__fputwc+0x36>
  402174:	69a7      	ldr	r7, [r4, #24]
  402176:	42bb      	cmp	r3, r7
  402178:	4671      	mov	r1, lr
  40217a:	4622      	mov	r2, r4
  40217c:	4640      	mov	r0, r8
  40217e:	db02      	blt.n	402186 <__fputwc+0x66>
  402180:	f1be 0f0a 	cmp.w	lr, #10
  402184:	d1e7      	bne.n	402156 <__fputwc+0x36>
  402186:	f001 fa49 	bl	40361c <__swbuf_r>
  40218a:	1c43      	adds	r3, r0, #1
  40218c:	d1e8      	bne.n	402160 <__fputwc+0x40>
  40218e:	b002      	add	sp, #8
  402190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402194:	89a3      	ldrh	r3, [r4, #12]
  402196:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40219a:	81a3      	strh	r3, [r4, #12]
  40219c:	b002      	add	sp, #8
  40219e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4021a2:	f109 33ff 	add.w	r3, r9, #4294967295
  4021a6:	2bfe      	cmp	r3, #254	; 0xfe
  4021a8:	d8c4      	bhi.n	402134 <__fputwc+0x14>
  4021aa:	fa5f fe89 	uxtb.w	lr, r9
  4021ae:	4606      	mov	r6, r0
  4021b0:	f88d e004 	strb.w	lr, [sp, #4]
  4021b4:	e7cb      	b.n	40214e <__fputwc+0x2e>
  4021b6:	4648      	mov	r0, r9
  4021b8:	b002      	add	sp, #8
  4021ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4021be:	bf00      	nop

004021c0 <_fputwc_r>:
  4021c0:	b530      	push	{r4, r5, lr}
  4021c2:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4021c4:	f013 0f01 	tst.w	r3, #1
  4021c8:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4021cc:	4614      	mov	r4, r2
  4021ce:	b083      	sub	sp, #12
  4021d0:	4605      	mov	r5, r0
  4021d2:	b29a      	uxth	r2, r3
  4021d4:	d101      	bne.n	4021da <_fputwc_r+0x1a>
  4021d6:	0590      	lsls	r0, r2, #22
  4021d8:	d51c      	bpl.n	402214 <_fputwc_r+0x54>
  4021da:	0490      	lsls	r0, r2, #18
  4021dc:	d406      	bmi.n	4021ec <_fputwc_r+0x2c>
  4021de:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4021e0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4021e4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4021e8:	81a3      	strh	r3, [r4, #12]
  4021ea:	6662      	str	r2, [r4, #100]	; 0x64
  4021ec:	4628      	mov	r0, r5
  4021ee:	4622      	mov	r2, r4
  4021f0:	f7ff ff96 	bl	402120 <__fputwc>
  4021f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4021f6:	07da      	lsls	r2, r3, #31
  4021f8:	4605      	mov	r5, r0
  4021fa:	d402      	bmi.n	402202 <_fputwc_r+0x42>
  4021fc:	89a3      	ldrh	r3, [r4, #12]
  4021fe:	059b      	lsls	r3, r3, #22
  402200:	d502      	bpl.n	402208 <_fputwc_r+0x48>
  402202:	4628      	mov	r0, r5
  402204:	b003      	add	sp, #12
  402206:	bd30      	pop	{r4, r5, pc}
  402208:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40220a:	f000 faf9 	bl	402800 <__retarget_lock_release_recursive>
  40220e:	4628      	mov	r0, r5
  402210:	b003      	add	sp, #12
  402212:	bd30      	pop	{r4, r5, pc}
  402214:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402216:	9101      	str	r1, [sp, #4]
  402218:	f000 faf0 	bl	4027fc <__retarget_lock_acquire_recursive>
  40221c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402220:	9901      	ldr	r1, [sp, #4]
  402222:	b29a      	uxth	r2, r3
  402224:	e7d9      	b.n	4021da <_fputwc_r+0x1a>
  402226:	bf00      	nop

00402228 <_malloc_trim_r>:
  402228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40222a:	4f24      	ldr	r7, [pc, #144]	; (4022bc <_malloc_trim_r+0x94>)
  40222c:	460c      	mov	r4, r1
  40222e:	4606      	mov	r6, r0
  402230:	f000 ff7c 	bl	40312c <__malloc_lock>
  402234:	68bb      	ldr	r3, [r7, #8]
  402236:	685d      	ldr	r5, [r3, #4]
  402238:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  40223c:	310f      	adds	r1, #15
  40223e:	f025 0503 	bic.w	r5, r5, #3
  402242:	4429      	add	r1, r5
  402244:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402248:	f021 010f 	bic.w	r1, r1, #15
  40224c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402250:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402254:	db07      	blt.n	402266 <_malloc_trim_r+0x3e>
  402256:	2100      	movs	r1, #0
  402258:	4630      	mov	r0, r6
  40225a:	f001 f919 	bl	403490 <_sbrk_r>
  40225e:	68bb      	ldr	r3, [r7, #8]
  402260:	442b      	add	r3, r5
  402262:	4298      	cmp	r0, r3
  402264:	d004      	beq.n	402270 <_malloc_trim_r+0x48>
  402266:	4630      	mov	r0, r6
  402268:	f000 ff66 	bl	403138 <__malloc_unlock>
  40226c:	2000      	movs	r0, #0
  40226e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402270:	4261      	negs	r1, r4
  402272:	4630      	mov	r0, r6
  402274:	f001 f90c 	bl	403490 <_sbrk_r>
  402278:	3001      	adds	r0, #1
  40227a:	d00d      	beq.n	402298 <_malloc_trim_r+0x70>
  40227c:	4b10      	ldr	r3, [pc, #64]	; (4022c0 <_malloc_trim_r+0x98>)
  40227e:	68ba      	ldr	r2, [r7, #8]
  402280:	6819      	ldr	r1, [r3, #0]
  402282:	1b2d      	subs	r5, r5, r4
  402284:	f045 0501 	orr.w	r5, r5, #1
  402288:	4630      	mov	r0, r6
  40228a:	1b09      	subs	r1, r1, r4
  40228c:	6055      	str	r5, [r2, #4]
  40228e:	6019      	str	r1, [r3, #0]
  402290:	f000 ff52 	bl	403138 <__malloc_unlock>
  402294:	2001      	movs	r0, #1
  402296:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402298:	2100      	movs	r1, #0
  40229a:	4630      	mov	r0, r6
  40229c:	f001 f8f8 	bl	403490 <_sbrk_r>
  4022a0:	68ba      	ldr	r2, [r7, #8]
  4022a2:	1a83      	subs	r3, r0, r2
  4022a4:	2b0f      	cmp	r3, #15
  4022a6:	ddde      	ble.n	402266 <_malloc_trim_r+0x3e>
  4022a8:	4c06      	ldr	r4, [pc, #24]	; (4022c4 <_malloc_trim_r+0x9c>)
  4022aa:	4905      	ldr	r1, [pc, #20]	; (4022c0 <_malloc_trim_r+0x98>)
  4022ac:	6824      	ldr	r4, [r4, #0]
  4022ae:	f043 0301 	orr.w	r3, r3, #1
  4022b2:	1b00      	subs	r0, r0, r4
  4022b4:	6053      	str	r3, [r2, #4]
  4022b6:	6008      	str	r0, [r1, #0]
  4022b8:	e7d5      	b.n	402266 <_malloc_trim_r+0x3e>
  4022ba:	bf00      	nop
  4022bc:	204005a8 	.word	0x204005a8
  4022c0:	20400a4c 	.word	0x20400a4c
  4022c4:	204009b0 	.word	0x204009b0

004022c8 <_free_r>:
  4022c8:	2900      	cmp	r1, #0
  4022ca:	d044      	beq.n	402356 <_free_r+0x8e>
  4022cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4022d0:	460d      	mov	r5, r1
  4022d2:	4680      	mov	r8, r0
  4022d4:	f000 ff2a 	bl	40312c <__malloc_lock>
  4022d8:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4022dc:	4969      	ldr	r1, [pc, #420]	; (402484 <_free_r+0x1bc>)
  4022de:	f027 0301 	bic.w	r3, r7, #1
  4022e2:	f1a5 0408 	sub.w	r4, r5, #8
  4022e6:	18e2      	adds	r2, r4, r3
  4022e8:	688e      	ldr	r6, [r1, #8]
  4022ea:	6850      	ldr	r0, [r2, #4]
  4022ec:	42b2      	cmp	r2, r6
  4022ee:	f020 0003 	bic.w	r0, r0, #3
  4022f2:	d05e      	beq.n	4023b2 <_free_r+0xea>
  4022f4:	07fe      	lsls	r6, r7, #31
  4022f6:	6050      	str	r0, [r2, #4]
  4022f8:	d40b      	bmi.n	402312 <_free_r+0x4a>
  4022fa:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4022fe:	1be4      	subs	r4, r4, r7
  402300:	f101 0e08 	add.w	lr, r1, #8
  402304:	68a5      	ldr	r5, [r4, #8]
  402306:	4575      	cmp	r5, lr
  402308:	443b      	add	r3, r7
  40230a:	d06d      	beq.n	4023e8 <_free_r+0x120>
  40230c:	68e7      	ldr	r7, [r4, #12]
  40230e:	60ef      	str	r7, [r5, #12]
  402310:	60bd      	str	r5, [r7, #8]
  402312:	1815      	adds	r5, r2, r0
  402314:	686d      	ldr	r5, [r5, #4]
  402316:	07ed      	lsls	r5, r5, #31
  402318:	d53e      	bpl.n	402398 <_free_r+0xd0>
  40231a:	f043 0201 	orr.w	r2, r3, #1
  40231e:	6062      	str	r2, [r4, #4]
  402320:	50e3      	str	r3, [r4, r3]
  402322:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402326:	d217      	bcs.n	402358 <_free_r+0x90>
  402328:	08db      	lsrs	r3, r3, #3
  40232a:	1c58      	adds	r0, r3, #1
  40232c:	109a      	asrs	r2, r3, #2
  40232e:	684d      	ldr	r5, [r1, #4]
  402330:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  402334:	60a7      	str	r7, [r4, #8]
  402336:	2301      	movs	r3, #1
  402338:	4093      	lsls	r3, r2
  40233a:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40233e:	432b      	orrs	r3, r5
  402340:	3a08      	subs	r2, #8
  402342:	60e2      	str	r2, [r4, #12]
  402344:	604b      	str	r3, [r1, #4]
  402346:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40234a:	60fc      	str	r4, [r7, #12]
  40234c:	4640      	mov	r0, r8
  40234e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402352:	f000 bef1 	b.w	403138 <__malloc_unlock>
  402356:	4770      	bx	lr
  402358:	0a5a      	lsrs	r2, r3, #9
  40235a:	2a04      	cmp	r2, #4
  40235c:	d852      	bhi.n	402404 <_free_r+0x13c>
  40235e:	099a      	lsrs	r2, r3, #6
  402360:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402364:	00ff      	lsls	r7, r7, #3
  402366:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40236a:	19c8      	adds	r0, r1, r7
  40236c:	59ca      	ldr	r2, [r1, r7]
  40236e:	3808      	subs	r0, #8
  402370:	4290      	cmp	r0, r2
  402372:	d04f      	beq.n	402414 <_free_r+0x14c>
  402374:	6851      	ldr	r1, [r2, #4]
  402376:	f021 0103 	bic.w	r1, r1, #3
  40237a:	428b      	cmp	r3, r1
  40237c:	d232      	bcs.n	4023e4 <_free_r+0x11c>
  40237e:	6892      	ldr	r2, [r2, #8]
  402380:	4290      	cmp	r0, r2
  402382:	d1f7      	bne.n	402374 <_free_r+0xac>
  402384:	68c3      	ldr	r3, [r0, #12]
  402386:	60a0      	str	r0, [r4, #8]
  402388:	60e3      	str	r3, [r4, #12]
  40238a:	609c      	str	r4, [r3, #8]
  40238c:	60c4      	str	r4, [r0, #12]
  40238e:	4640      	mov	r0, r8
  402390:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402394:	f000 bed0 	b.w	403138 <__malloc_unlock>
  402398:	6895      	ldr	r5, [r2, #8]
  40239a:	4f3b      	ldr	r7, [pc, #236]	; (402488 <_free_r+0x1c0>)
  40239c:	42bd      	cmp	r5, r7
  40239e:	4403      	add	r3, r0
  4023a0:	d040      	beq.n	402424 <_free_r+0x15c>
  4023a2:	68d0      	ldr	r0, [r2, #12]
  4023a4:	60e8      	str	r0, [r5, #12]
  4023a6:	f043 0201 	orr.w	r2, r3, #1
  4023aa:	6085      	str	r5, [r0, #8]
  4023ac:	6062      	str	r2, [r4, #4]
  4023ae:	50e3      	str	r3, [r4, r3]
  4023b0:	e7b7      	b.n	402322 <_free_r+0x5a>
  4023b2:	07ff      	lsls	r7, r7, #31
  4023b4:	4403      	add	r3, r0
  4023b6:	d407      	bmi.n	4023c8 <_free_r+0x100>
  4023b8:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4023bc:	1aa4      	subs	r4, r4, r2
  4023be:	4413      	add	r3, r2
  4023c0:	68a0      	ldr	r0, [r4, #8]
  4023c2:	68e2      	ldr	r2, [r4, #12]
  4023c4:	60c2      	str	r2, [r0, #12]
  4023c6:	6090      	str	r0, [r2, #8]
  4023c8:	4a30      	ldr	r2, [pc, #192]	; (40248c <_free_r+0x1c4>)
  4023ca:	6812      	ldr	r2, [r2, #0]
  4023cc:	f043 0001 	orr.w	r0, r3, #1
  4023d0:	4293      	cmp	r3, r2
  4023d2:	6060      	str	r0, [r4, #4]
  4023d4:	608c      	str	r4, [r1, #8]
  4023d6:	d3b9      	bcc.n	40234c <_free_r+0x84>
  4023d8:	4b2d      	ldr	r3, [pc, #180]	; (402490 <_free_r+0x1c8>)
  4023da:	4640      	mov	r0, r8
  4023dc:	6819      	ldr	r1, [r3, #0]
  4023de:	f7ff ff23 	bl	402228 <_malloc_trim_r>
  4023e2:	e7b3      	b.n	40234c <_free_r+0x84>
  4023e4:	4610      	mov	r0, r2
  4023e6:	e7cd      	b.n	402384 <_free_r+0xbc>
  4023e8:	1811      	adds	r1, r2, r0
  4023ea:	6849      	ldr	r1, [r1, #4]
  4023ec:	07c9      	lsls	r1, r1, #31
  4023ee:	d444      	bmi.n	40247a <_free_r+0x1b2>
  4023f0:	6891      	ldr	r1, [r2, #8]
  4023f2:	68d2      	ldr	r2, [r2, #12]
  4023f4:	60ca      	str	r2, [r1, #12]
  4023f6:	4403      	add	r3, r0
  4023f8:	f043 0001 	orr.w	r0, r3, #1
  4023fc:	6091      	str	r1, [r2, #8]
  4023fe:	6060      	str	r0, [r4, #4]
  402400:	50e3      	str	r3, [r4, r3]
  402402:	e7a3      	b.n	40234c <_free_r+0x84>
  402404:	2a14      	cmp	r2, #20
  402406:	d816      	bhi.n	402436 <_free_r+0x16e>
  402408:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40240c:	00ff      	lsls	r7, r7, #3
  40240e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  402412:	e7aa      	b.n	40236a <_free_r+0xa2>
  402414:	10aa      	asrs	r2, r5, #2
  402416:	2301      	movs	r3, #1
  402418:	684d      	ldr	r5, [r1, #4]
  40241a:	4093      	lsls	r3, r2
  40241c:	432b      	orrs	r3, r5
  40241e:	604b      	str	r3, [r1, #4]
  402420:	4603      	mov	r3, r0
  402422:	e7b0      	b.n	402386 <_free_r+0xbe>
  402424:	f043 0201 	orr.w	r2, r3, #1
  402428:	614c      	str	r4, [r1, #20]
  40242a:	610c      	str	r4, [r1, #16]
  40242c:	60e5      	str	r5, [r4, #12]
  40242e:	60a5      	str	r5, [r4, #8]
  402430:	6062      	str	r2, [r4, #4]
  402432:	50e3      	str	r3, [r4, r3]
  402434:	e78a      	b.n	40234c <_free_r+0x84>
  402436:	2a54      	cmp	r2, #84	; 0x54
  402438:	d806      	bhi.n	402448 <_free_r+0x180>
  40243a:	0b1a      	lsrs	r2, r3, #12
  40243c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  402440:	00ff      	lsls	r7, r7, #3
  402442:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  402446:	e790      	b.n	40236a <_free_r+0xa2>
  402448:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40244c:	d806      	bhi.n	40245c <_free_r+0x194>
  40244e:	0bda      	lsrs	r2, r3, #15
  402450:	f102 0778 	add.w	r7, r2, #120	; 0x78
  402454:	00ff      	lsls	r7, r7, #3
  402456:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40245a:	e786      	b.n	40236a <_free_r+0xa2>
  40245c:	f240 5054 	movw	r0, #1364	; 0x554
  402460:	4282      	cmp	r2, r0
  402462:	d806      	bhi.n	402472 <_free_r+0x1aa>
  402464:	0c9a      	lsrs	r2, r3, #18
  402466:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40246a:	00ff      	lsls	r7, r7, #3
  40246c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  402470:	e77b      	b.n	40236a <_free_r+0xa2>
  402472:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  402476:	257e      	movs	r5, #126	; 0x7e
  402478:	e777      	b.n	40236a <_free_r+0xa2>
  40247a:	f043 0101 	orr.w	r1, r3, #1
  40247e:	6061      	str	r1, [r4, #4]
  402480:	6013      	str	r3, [r2, #0]
  402482:	e763      	b.n	40234c <_free_r+0x84>
  402484:	204005a8 	.word	0x204005a8
  402488:	204005b0 	.word	0x204005b0
  40248c:	204009b4 	.word	0x204009b4
  402490:	20400a7c 	.word	0x20400a7c

00402494 <__sfvwrite_r>:
  402494:	6893      	ldr	r3, [r2, #8]
  402496:	2b00      	cmp	r3, #0
  402498:	d073      	beq.n	402582 <__sfvwrite_r+0xee>
  40249a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40249e:	898b      	ldrh	r3, [r1, #12]
  4024a0:	b083      	sub	sp, #12
  4024a2:	460c      	mov	r4, r1
  4024a4:	0719      	lsls	r1, r3, #28
  4024a6:	9000      	str	r0, [sp, #0]
  4024a8:	4616      	mov	r6, r2
  4024aa:	d526      	bpl.n	4024fa <__sfvwrite_r+0x66>
  4024ac:	6922      	ldr	r2, [r4, #16]
  4024ae:	b322      	cbz	r2, 4024fa <__sfvwrite_r+0x66>
  4024b0:	f013 0002 	ands.w	r0, r3, #2
  4024b4:	6835      	ldr	r5, [r6, #0]
  4024b6:	d02c      	beq.n	402512 <__sfvwrite_r+0x7e>
  4024b8:	f04f 0900 	mov.w	r9, #0
  4024bc:	4fb0      	ldr	r7, [pc, #704]	; (402780 <__sfvwrite_r+0x2ec>)
  4024be:	46c8      	mov	r8, r9
  4024c0:	46b2      	mov	sl, r6
  4024c2:	45b8      	cmp	r8, r7
  4024c4:	4643      	mov	r3, r8
  4024c6:	464a      	mov	r2, r9
  4024c8:	bf28      	it	cs
  4024ca:	463b      	movcs	r3, r7
  4024cc:	9800      	ldr	r0, [sp, #0]
  4024ce:	f1b8 0f00 	cmp.w	r8, #0
  4024d2:	d050      	beq.n	402576 <__sfvwrite_r+0xe2>
  4024d4:	69e1      	ldr	r1, [r4, #28]
  4024d6:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4024d8:	47b0      	blx	r6
  4024da:	2800      	cmp	r0, #0
  4024dc:	dd58      	ble.n	402590 <__sfvwrite_r+0xfc>
  4024de:	f8da 3008 	ldr.w	r3, [sl, #8]
  4024e2:	1a1b      	subs	r3, r3, r0
  4024e4:	4481      	add	r9, r0
  4024e6:	eba8 0800 	sub.w	r8, r8, r0
  4024ea:	f8ca 3008 	str.w	r3, [sl, #8]
  4024ee:	2b00      	cmp	r3, #0
  4024f0:	d1e7      	bne.n	4024c2 <__sfvwrite_r+0x2e>
  4024f2:	2000      	movs	r0, #0
  4024f4:	b003      	add	sp, #12
  4024f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4024fa:	4621      	mov	r1, r4
  4024fc:	9800      	ldr	r0, [sp, #0]
  4024fe:	f7ff fc51 	bl	401da4 <__swsetup_r>
  402502:	2800      	cmp	r0, #0
  402504:	f040 8133 	bne.w	40276e <__sfvwrite_r+0x2da>
  402508:	89a3      	ldrh	r3, [r4, #12]
  40250a:	6835      	ldr	r5, [r6, #0]
  40250c:	f013 0002 	ands.w	r0, r3, #2
  402510:	d1d2      	bne.n	4024b8 <__sfvwrite_r+0x24>
  402512:	f013 0901 	ands.w	r9, r3, #1
  402516:	d145      	bne.n	4025a4 <__sfvwrite_r+0x110>
  402518:	464f      	mov	r7, r9
  40251a:	9601      	str	r6, [sp, #4]
  40251c:	b337      	cbz	r7, 40256c <__sfvwrite_r+0xd8>
  40251e:	059a      	lsls	r2, r3, #22
  402520:	f8d4 8008 	ldr.w	r8, [r4, #8]
  402524:	f140 8083 	bpl.w	40262e <__sfvwrite_r+0x19a>
  402528:	4547      	cmp	r7, r8
  40252a:	46c3      	mov	fp, r8
  40252c:	f0c0 80ab 	bcc.w	402686 <__sfvwrite_r+0x1f2>
  402530:	f413 6f90 	tst.w	r3, #1152	; 0x480
  402534:	f040 80ac 	bne.w	402690 <__sfvwrite_r+0x1fc>
  402538:	6820      	ldr	r0, [r4, #0]
  40253a:	46ba      	mov	sl, r7
  40253c:	465a      	mov	r2, fp
  40253e:	4649      	mov	r1, r9
  402540:	f000 fd90 	bl	403064 <memmove>
  402544:	68a2      	ldr	r2, [r4, #8]
  402546:	6823      	ldr	r3, [r4, #0]
  402548:	eba2 0208 	sub.w	r2, r2, r8
  40254c:	445b      	add	r3, fp
  40254e:	60a2      	str	r2, [r4, #8]
  402550:	6023      	str	r3, [r4, #0]
  402552:	9a01      	ldr	r2, [sp, #4]
  402554:	6893      	ldr	r3, [r2, #8]
  402556:	eba3 030a 	sub.w	r3, r3, sl
  40255a:	44d1      	add	r9, sl
  40255c:	eba7 070a 	sub.w	r7, r7, sl
  402560:	6093      	str	r3, [r2, #8]
  402562:	2b00      	cmp	r3, #0
  402564:	d0c5      	beq.n	4024f2 <__sfvwrite_r+0x5e>
  402566:	89a3      	ldrh	r3, [r4, #12]
  402568:	2f00      	cmp	r7, #0
  40256a:	d1d8      	bne.n	40251e <__sfvwrite_r+0x8a>
  40256c:	f8d5 9000 	ldr.w	r9, [r5]
  402570:	686f      	ldr	r7, [r5, #4]
  402572:	3508      	adds	r5, #8
  402574:	e7d2      	b.n	40251c <__sfvwrite_r+0x88>
  402576:	f8d5 9000 	ldr.w	r9, [r5]
  40257a:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40257e:	3508      	adds	r5, #8
  402580:	e79f      	b.n	4024c2 <__sfvwrite_r+0x2e>
  402582:	2000      	movs	r0, #0
  402584:	4770      	bx	lr
  402586:	4621      	mov	r1, r4
  402588:	9800      	ldr	r0, [sp, #0]
  40258a:	f7ff fd1f 	bl	401fcc <_fflush_r>
  40258e:	b370      	cbz	r0, 4025ee <__sfvwrite_r+0x15a>
  402590:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402594:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402598:	f04f 30ff 	mov.w	r0, #4294967295
  40259c:	81a3      	strh	r3, [r4, #12]
  40259e:	b003      	add	sp, #12
  4025a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025a4:	4681      	mov	r9, r0
  4025a6:	4633      	mov	r3, r6
  4025a8:	464e      	mov	r6, r9
  4025aa:	46a8      	mov	r8, r5
  4025ac:	469a      	mov	sl, r3
  4025ae:	464d      	mov	r5, r9
  4025b0:	b34e      	cbz	r6, 402606 <__sfvwrite_r+0x172>
  4025b2:	b380      	cbz	r0, 402616 <__sfvwrite_r+0x182>
  4025b4:	6820      	ldr	r0, [r4, #0]
  4025b6:	6923      	ldr	r3, [r4, #16]
  4025b8:	6962      	ldr	r2, [r4, #20]
  4025ba:	45b1      	cmp	r9, r6
  4025bc:	46cb      	mov	fp, r9
  4025be:	bf28      	it	cs
  4025c0:	46b3      	movcs	fp, r6
  4025c2:	4298      	cmp	r0, r3
  4025c4:	465f      	mov	r7, fp
  4025c6:	d904      	bls.n	4025d2 <__sfvwrite_r+0x13e>
  4025c8:	68a3      	ldr	r3, [r4, #8]
  4025ca:	4413      	add	r3, r2
  4025cc:	459b      	cmp	fp, r3
  4025ce:	f300 80a6 	bgt.w	40271e <__sfvwrite_r+0x28a>
  4025d2:	4593      	cmp	fp, r2
  4025d4:	db4b      	blt.n	40266e <__sfvwrite_r+0x1da>
  4025d6:	4613      	mov	r3, r2
  4025d8:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4025da:	69e1      	ldr	r1, [r4, #28]
  4025dc:	9800      	ldr	r0, [sp, #0]
  4025de:	462a      	mov	r2, r5
  4025e0:	47b8      	blx	r7
  4025e2:	1e07      	subs	r7, r0, #0
  4025e4:	ddd4      	ble.n	402590 <__sfvwrite_r+0xfc>
  4025e6:	ebb9 0907 	subs.w	r9, r9, r7
  4025ea:	d0cc      	beq.n	402586 <__sfvwrite_r+0xf2>
  4025ec:	2001      	movs	r0, #1
  4025ee:	f8da 3008 	ldr.w	r3, [sl, #8]
  4025f2:	1bdb      	subs	r3, r3, r7
  4025f4:	443d      	add	r5, r7
  4025f6:	1bf6      	subs	r6, r6, r7
  4025f8:	f8ca 3008 	str.w	r3, [sl, #8]
  4025fc:	2b00      	cmp	r3, #0
  4025fe:	f43f af78 	beq.w	4024f2 <__sfvwrite_r+0x5e>
  402602:	2e00      	cmp	r6, #0
  402604:	d1d5      	bne.n	4025b2 <__sfvwrite_r+0x11e>
  402606:	f108 0308 	add.w	r3, r8, #8
  40260a:	e913 0060 	ldmdb	r3, {r5, r6}
  40260e:	4698      	mov	r8, r3
  402610:	3308      	adds	r3, #8
  402612:	2e00      	cmp	r6, #0
  402614:	d0f9      	beq.n	40260a <__sfvwrite_r+0x176>
  402616:	4632      	mov	r2, r6
  402618:	210a      	movs	r1, #10
  40261a:	4628      	mov	r0, r5
  40261c:	f000 fc38 	bl	402e90 <memchr>
  402620:	2800      	cmp	r0, #0
  402622:	f000 80a1 	beq.w	402768 <__sfvwrite_r+0x2d4>
  402626:	3001      	adds	r0, #1
  402628:	eba0 0905 	sub.w	r9, r0, r5
  40262c:	e7c2      	b.n	4025b4 <__sfvwrite_r+0x120>
  40262e:	6820      	ldr	r0, [r4, #0]
  402630:	6923      	ldr	r3, [r4, #16]
  402632:	4298      	cmp	r0, r3
  402634:	d802      	bhi.n	40263c <__sfvwrite_r+0x1a8>
  402636:	6963      	ldr	r3, [r4, #20]
  402638:	429f      	cmp	r7, r3
  40263a:	d25d      	bcs.n	4026f8 <__sfvwrite_r+0x264>
  40263c:	45b8      	cmp	r8, r7
  40263e:	bf28      	it	cs
  402640:	46b8      	movcs	r8, r7
  402642:	4642      	mov	r2, r8
  402644:	4649      	mov	r1, r9
  402646:	f000 fd0d 	bl	403064 <memmove>
  40264a:	68a3      	ldr	r3, [r4, #8]
  40264c:	6822      	ldr	r2, [r4, #0]
  40264e:	eba3 0308 	sub.w	r3, r3, r8
  402652:	4442      	add	r2, r8
  402654:	60a3      	str	r3, [r4, #8]
  402656:	6022      	str	r2, [r4, #0]
  402658:	b10b      	cbz	r3, 40265e <__sfvwrite_r+0x1ca>
  40265a:	46c2      	mov	sl, r8
  40265c:	e779      	b.n	402552 <__sfvwrite_r+0xbe>
  40265e:	4621      	mov	r1, r4
  402660:	9800      	ldr	r0, [sp, #0]
  402662:	f7ff fcb3 	bl	401fcc <_fflush_r>
  402666:	2800      	cmp	r0, #0
  402668:	d192      	bne.n	402590 <__sfvwrite_r+0xfc>
  40266a:	46c2      	mov	sl, r8
  40266c:	e771      	b.n	402552 <__sfvwrite_r+0xbe>
  40266e:	465a      	mov	r2, fp
  402670:	4629      	mov	r1, r5
  402672:	f000 fcf7 	bl	403064 <memmove>
  402676:	68a2      	ldr	r2, [r4, #8]
  402678:	6823      	ldr	r3, [r4, #0]
  40267a:	eba2 020b 	sub.w	r2, r2, fp
  40267e:	445b      	add	r3, fp
  402680:	60a2      	str	r2, [r4, #8]
  402682:	6023      	str	r3, [r4, #0]
  402684:	e7af      	b.n	4025e6 <__sfvwrite_r+0x152>
  402686:	6820      	ldr	r0, [r4, #0]
  402688:	46b8      	mov	r8, r7
  40268a:	46ba      	mov	sl, r7
  40268c:	46bb      	mov	fp, r7
  40268e:	e755      	b.n	40253c <__sfvwrite_r+0xa8>
  402690:	6962      	ldr	r2, [r4, #20]
  402692:	6820      	ldr	r0, [r4, #0]
  402694:	6921      	ldr	r1, [r4, #16]
  402696:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40269a:	eba0 0a01 	sub.w	sl, r0, r1
  40269e:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  4026a2:	f10a 0001 	add.w	r0, sl, #1
  4026a6:	ea4f 0868 	mov.w	r8, r8, asr #1
  4026aa:	4438      	add	r0, r7
  4026ac:	4540      	cmp	r0, r8
  4026ae:	4642      	mov	r2, r8
  4026b0:	bf84      	itt	hi
  4026b2:	4680      	movhi	r8, r0
  4026b4:	4642      	movhi	r2, r8
  4026b6:	055b      	lsls	r3, r3, #21
  4026b8:	d544      	bpl.n	402744 <__sfvwrite_r+0x2b0>
  4026ba:	4611      	mov	r1, r2
  4026bc:	9800      	ldr	r0, [sp, #0]
  4026be:	f000 f921 	bl	402904 <_malloc_r>
  4026c2:	4683      	mov	fp, r0
  4026c4:	2800      	cmp	r0, #0
  4026c6:	d055      	beq.n	402774 <__sfvwrite_r+0x2e0>
  4026c8:	4652      	mov	r2, sl
  4026ca:	6921      	ldr	r1, [r4, #16]
  4026cc:	f000 fc30 	bl	402f30 <memcpy>
  4026d0:	89a3      	ldrh	r3, [r4, #12]
  4026d2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  4026d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4026da:	81a3      	strh	r3, [r4, #12]
  4026dc:	eb0b 000a 	add.w	r0, fp, sl
  4026e0:	eba8 030a 	sub.w	r3, r8, sl
  4026e4:	f8c4 b010 	str.w	fp, [r4, #16]
  4026e8:	f8c4 8014 	str.w	r8, [r4, #20]
  4026ec:	6020      	str	r0, [r4, #0]
  4026ee:	60a3      	str	r3, [r4, #8]
  4026f0:	46b8      	mov	r8, r7
  4026f2:	46ba      	mov	sl, r7
  4026f4:	46bb      	mov	fp, r7
  4026f6:	e721      	b.n	40253c <__sfvwrite_r+0xa8>
  4026f8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  4026fc:	42b9      	cmp	r1, r7
  4026fe:	bf28      	it	cs
  402700:	4639      	movcs	r1, r7
  402702:	464a      	mov	r2, r9
  402704:	fb91 f1f3 	sdiv	r1, r1, r3
  402708:	9800      	ldr	r0, [sp, #0]
  40270a:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40270c:	fb03 f301 	mul.w	r3, r3, r1
  402710:	69e1      	ldr	r1, [r4, #28]
  402712:	47b0      	blx	r6
  402714:	f1b0 0a00 	subs.w	sl, r0, #0
  402718:	f73f af1b 	bgt.w	402552 <__sfvwrite_r+0xbe>
  40271c:	e738      	b.n	402590 <__sfvwrite_r+0xfc>
  40271e:	461a      	mov	r2, r3
  402720:	4629      	mov	r1, r5
  402722:	9301      	str	r3, [sp, #4]
  402724:	f000 fc9e 	bl	403064 <memmove>
  402728:	6822      	ldr	r2, [r4, #0]
  40272a:	9b01      	ldr	r3, [sp, #4]
  40272c:	9800      	ldr	r0, [sp, #0]
  40272e:	441a      	add	r2, r3
  402730:	6022      	str	r2, [r4, #0]
  402732:	4621      	mov	r1, r4
  402734:	f7ff fc4a 	bl	401fcc <_fflush_r>
  402738:	9b01      	ldr	r3, [sp, #4]
  40273a:	2800      	cmp	r0, #0
  40273c:	f47f af28 	bne.w	402590 <__sfvwrite_r+0xfc>
  402740:	461f      	mov	r7, r3
  402742:	e750      	b.n	4025e6 <__sfvwrite_r+0x152>
  402744:	9800      	ldr	r0, [sp, #0]
  402746:	f000 fcfd 	bl	403144 <_realloc_r>
  40274a:	4683      	mov	fp, r0
  40274c:	2800      	cmp	r0, #0
  40274e:	d1c5      	bne.n	4026dc <__sfvwrite_r+0x248>
  402750:	9d00      	ldr	r5, [sp, #0]
  402752:	6921      	ldr	r1, [r4, #16]
  402754:	4628      	mov	r0, r5
  402756:	f7ff fdb7 	bl	4022c8 <_free_r>
  40275a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40275e:	220c      	movs	r2, #12
  402760:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  402764:	602a      	str	r2, [r5, #0]
  402766:	e715      	b.n	402594 <__sfvwrite_r+0x100>
  402768:	f106 0901 	add.w	r9, r6, #1
  40276c:	e722      	b.n	4025b4 <__sfvwrite_r+0x120>
  40276e:	f04f 30ff 	mov.w	r0, #4294967295
  402772:	e6bf      	b.n	4024f4 <__sfvwrite_r+0x60>
  402774:	9a00      	ldr	r2, [sp, #0]
  402776:	230c      	movs	r3, #12
  402778:	6013      	str	r3, [r2, #0]
  40277a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40277e:	e709      	b.n	402594 <__sfvwrite_r+0x100>
  402780:	7ffffc00 	.word	0x7ffffc00

00402784 <_fwalk_reent>:
  402784:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402788:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  40278c:	d01f      	beq.n	4027ce <_fwalk_reent+0x4a>
  40278e:	4688      	mov	r8, r1
  402790:	4606      	mov	r6, r0
  402792:	f04f 0900 	mov.w	r9, #0
  402796:	687d      	ldr	r5, [r7, #4]
  402798:	68bc      	ldr	r4, [r7, #8]
  40279a:	3d01      	subs	r5, #1
  40279c:	d411      	bmi.n	4027c2 <_fwalk_reent+0x3e>
  40279e:	89a3      	ldrh	r3, [r4, #12]
  4027a0:	2b01      	cmp	r3, #1
  4027a2:	f105 35ff 	add.w	r5, r5, #4294967295
  4027a6:	d908      	bls.n	4027ba <_fwalk_reent+0x36>
  4027a8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4027ac:	3301      	adds	r3, #1
  4027ae:	4621      	mov	r1, r4
  4027b0:	4630      	mov	r0, r6
  4027b2:	d002      	beq.n	4027ba <_fwalk_reent+0x36>
  4027b4:	47c0      	blx	r8
  4027b6:	ea49 0900 	orr.w	r9, r9, r0
  4027ba:	1c6b      	adds	r3, r5, #1
  4027bc:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4027c0:	d1ed      	bne.n	40279e <_fwalk_reent+0x1a>
  4027c2:	683f      	ldr	r7, [r7, #0]
  4027c4:	2f00      	cmp	r7, #0
  4027c6:	d1e6      	bne.n	402796 <_fwalk_reent+0x12>
  4027c8:	4648      	mov	r0, r9
  4027ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4027ce:	46b9      	mov	r9, r7
  4027d0:	4648      	mov	r0, r9
  4027d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4027d6:	bf00      	nop

004027d8 <__locale_mb_cur_max>:
  4027d8:	4b04      	ldr	r3, [pc, #16]	; (4027ec <__locale_mb_cur_max+0x14>)
  4027da:	4a05      	ldr	r2, [pc, #20]	; (4027f0 <__locale_mb_cur_max+0x18>)
  4027dc:	681b      	ldr	r3, [r3, #0]
  4027de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4027e0:	2b00      	cmp	r3, #0
  4027e2:	bf08      	it	eq
  4027e4:	4613      	moveq	r3, r2
  4027e6:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  4027ea:	4770      	bx	lr
  4027ec:	20400008 	.word	0x20400008
  4027f0:	2040043c 	.word	0x2040043c

004027f4 <__retarget_lock_init_recursive>:
  4027f4:	4770      	bx	lr
  4027f6:	bf00      	nop

004027f8 <__retarget_lock_close_recursive>:
  4027f8:	4770      	bx	lr
  4027fa:	bf00      	nop

004027fc <__retarget_lock_acquire_recursive>:
  4027fc:	4770      	bx	lr
  4027fe:	bf00      	nop

00402800 <__retarget_lock_release_recursive>:
  402800:	4770      	bx	lr
  402802:	bf00      	nop

00402804 <__swhatbuf_r>:
  402804:	b570      	push	{r4, r5, r6, lr}
  402806:	460c      	mov	r4, r1
  402808:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40280c:	2900      	cmp	r1, #0
  40280e:	b090      	sub	sp, #64	; 0x40
  402810:	4615      	mov	r5, r2
  402812:	461e      	mov	r6, r3
  402814:	db14      	blt.n	402840 <__swhatbuf_r+0x3c>
  402816:	aa01      	add	r2, sp, #4
  402818:	f001 f87c 	bl	403914 <_fstat_r>
  40281c:	2800      	cmp	r0, #0
  40281e:	db0f      	blt.n	402840 <__swhatbuf_r+0x3c>
  402820:	9a02      	ldr	r2, [sp, #8]
  402822:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  402826:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40282a:	fab2 f282 	clz	r2, r2
  40282e:	0952      	lsrs	r2, r2, #5
  402830:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402834:	f44f 6000 	mov.w	r0, #2048	; 0x800
  402838:	6032      	str	r2, [r6, #0]
  40283a:	602b      	str	r3, [r5, #0]
  40283c:	b010      	add	sp, #64	; 0x40
  40283e:	bd70      	pop	{r4, r5, r6, pc}
  402840:	89a2      	ldrh	r2, [r4, #12]
  402842:	2300      	movs	r3, #0
  402844:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  402848:	6033      	str	r3, [r6, #0]
  40284a:	d004      	beq.n	402856 <__swhatbuf_r+0x52>
  40284c:	2240      	movs	r2, #64	; 0x40
  40284e:	4618      	mov	r0, r3
  402850:	602a      	str	r2, [r5, #0]
  402852:	b010      	add	sp, #64	; 0x40
  402854:	bd70      	pop	{r4, r5, r6, pc}
  402856:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40285a:	602b      	str	r3, [r5, #0]
  40285c:	b010      	add	sp, #64	; 0x40
  40285e:	bd70      	pop	{r4, r5, r6, pc}

00402860 <__smakebuf_r>:
  402860:	898a      	ldrh	r2, [r1, #12]
  402862:	0792      	lsls	r2, r2, #30
  402864:	460b      	mov	r3, r1
  402866:	d506      	bpl.n	402876 <__smakebuf_r+0x16>
  402868:	f101 0243 	add.w	r2, r1, #67	; 0x43
  40286c:	2101      	movs	r1, #1
  40286e:	601a      	str	r2, [r3, #0]
  402870:	611a      	str	r2, [r3, #16]
  402872:	6159      	str	r1, [r3, #20]
  402874:	4770      	bx	lr
  402876:	b5f0      	push	{r4, r5, r6, r7, lr}
  402878:	b083      	sub	sp, #12
  40287a:	ab01      	add	r3, sp, #4
  40287c:	466a      	mov	r2, sp
  40287e:	460c      	mov	r4, r1
  402880:	4606      	mov	r6, r0
  402882:	f7ff ffbf 	bl	402804 <__swhatbuf_r>
  402886:	9900      	ldr	r1, [sp, #0]
  402888:	4605      	mov	r5, r0
  40288a:	4630      	mov	r0, r6
  40288c:	f000 f83a 	bl	402904 <_malloc_r>
  402890:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402894:	b1d8      	cbz	r0, 4028ce <__smakebuf_r+0x6e>
  402896:	9a01      	ldr	r2, [sp, #4]
  402898:	4f15      	ldr	r7, [pc, #84]	; (4028f0 <__smakebuf_r+0x90>)
  40289a:	9900      	ldr	r1, [sp, #0]
  40289c:	63f7      	str	r7, [r6, #60]	; 0x3c
  40289e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4028a2:	81a3      	strh	r3, [r4, #12]
  4028a4:	6020      	str	r0, [r4, #0]
  4028a6:	6120      	str	r0, [r4, #16]
  4028a8:	6161      	str	r1, [r4, #20]
  4028aa:	b91a      	cbnz	r2, 4028b4 <__smakebuf_r+0x54>
  4028ac:	432b      	orrs	r3, r5
  4028ae:	81a3      	strh	r3, [r4, #12]
  4028b0:	b003      	add	sp, #12
  4028b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4028b4:	4630      	mov	r0, r6
  4028b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4028ba:	f001 f83f 	bl	40393c <_isatty_r>
  4028be:	b1a0      	cbz	r0, 4028ea <__smakebuf_r+0x8a>
  4028c0:	89a3      	ldrh	r3, [r4, #12]
  4028c2:	f023 0303 	bic.w	r3, r3, #3
  4028c6:	f043 0301 	orr.w	r3, r3, #1
  4028ca:	b21b      	sxth	r3, r3
  4028cc:	e7ee      	b.n	4028ac <__smakebuf_r+0x4c>
  4028ce:	059a      	lsls	r2, r3, #22
  4028d0:	d4ee      	bmi.n	4028b0 <__smakebuf_r+0x50>
  4028d2:	f023 0303 	bic.w	r3, r3, #3
  4028d6:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4028da:	f043 0302 	orr.w	r3, r3, #2
  4028de:	2101      	movs	r1, #1
  4028e0:	81a3      	strh	r3, [r4, #12]
  4028e2:	6022      	str	r2, [r4, #0]
  4028e4:	6122      	str	r2, [r4, #16]
  4028e6:	6161      	str	r1, [r4, #20]
  4028e8:	e7e2      	b.n	4028b0 <__smakebuf_r+0x50>
  4028ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4028ee:	e7dd      	b.n	4028ac <__smakebuf_r+0x4c>
  4028f0:	00402021 	.word	0x00402021

004028f4 <malloc>:
  4028f4:	4b02      	ldr	r3, [pc, #8]	; (402900 <malloc+0xc>)
  4028f6:	4601      	mov	r1, r0
  4028f8:	6818      	ldr	r0, [r3, #0]
  4028fa:	f000 b803 	b.w	402904 <_malloc_r>
  4028fe:	bf00      	nop
  402900:	20400008 	.word	0x20400008

00402904 <_malloc_r>:
  402904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402908:	f101 060b 	add.w	r6, r1, #11
  40290c:	2e16      	cmp	r6, #22
  40290e:	b083      	sub	sp, #12
  402910:	4605      	mov	r5, r0
  402912:	f240 809e 	bls.w	402a52 <_malloc_r+0x14e>
  402916:	f036 0607 	bics.w	r6, r6, #7
  40291a:	f100 80bd 	bmi.w	402a98 <_malloc_r+0x194>
  40291e:	42b1      	cmp	r1, r6
  402920:	f200 80ba 	bhi.w	402a98 <_malloc_r+0x194>
  402924:	f000 fc02 	bl	40312c <__malloc_lock>
  402928:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40292c:	f0c0 8293 	bcc.w	402e56 <_malloc_r+0x552>
  402930:	0a73      	lsrs	r3, r6, #9
  402932:	f000 80b8 	beq.w	402aa6 <_malloc_r+0x1a2>
  402936:	2b04      	cmp	r3, #4
  402938:	f200 8179 	bhi.w	402c2e <_malloc_r+0x32a>
  40293c:	09b3      	lsrs	r3, r6, #6
  40293e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  402942:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  402946:	00c3      	lsls	r3, r0, #3
  402948:	4fbf      	ldr	r7, [pc, #764]	; (402c48 <_malloc_r+0x344>)
  40294a:	443b      	add	r3, r7
  40294c:	f1a3 0108 	sub.w	r1, r3, #8
  402950:	685c      	ldr	r4, [r3, #4]
  402952:	42a1      	cmp	r1, r4
  402954:	d106      	bne.n	402964 <_malloc_r+0x60>
  402956:	e00c      	b.n	402972 <_malloc_r+0x6e>
  402958:	2a00      	cmp	r2, #0
  40295a:	f280 80aa 	bge.w	402ab2 <_malloc_r+0x1ae>
  40295e:	68e4      	ldr	r4, [r4, #12]
  402960:	42a1      	cmp	r1, r4
  402962:	d006      	beq.n	402972 <_malloc_r+0x6e>
  402964:	6863      	ldr	r3, [r4, #4]
  402966:	f023 0303 	bic.w	r3, r3, #3
  40296a:	1b9a      	subs	r2, r3, r6
  40296c:	2a0f      	cmp	r2, #15
  40296e:	ddf3      	ble.n	402958 <_malloc_r+0x54>
  402970:	4670      	mov	r0, lr
  402972:	693c      	ldr	r4, [r7, #16]
  402974:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 402c5c <_malloc_r+0x358>
  402978:	4574      	cmp	r4, lr
  40297a:	f000 81ab 	beq.w	402cd4 <_malloc_r+0x3d0>
  40297e:	6863      	ldr	r3, [r4, #4]
  402980:	f023 0303 	bic.w	r3, r3, #3
  402984:	1b9a      	subs	r2, r3, r6
  402986:	2a0f      	cmp	r2, #15
  402988:	f300 8190 	bgt.w	402cac <_malloc_r+0x3a8>
  40298c:	2a00      	cmp	r2, #0
  40298e:	f8c7 e014 	str.w	lr, [r7, #20]
  402992:	f8c7 e010 	str.w	lr, [r7, #16]
  402996:	f280 809d 	bge.w	402ad4 <_malloc_r+0x1d0>
  40299a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40299e:	f080 8161 	bcs.w	402c64 <_malloc_r+0x360>
  4029a2:	08db      	lsrs	r3, r3, #3
  4029a4:	f103 0c01 	add.w	ip, r3, #1
  4029a8:	1099      	asrs	r1, r3, #2
  4029aa:	687a      	ldr	r2, [r7, #4]
  4029ac:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4029b0:	f8c4 8008 	str.w	r8, [r4, #8]
  4029b4:	2301      	movs	r3, #1
  4029b6:	408b      	lsls	r3, r1
  4029b8:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4029bc:	4313      	orrs	r3, r2
  4029be:	3908      	subs	r1, #8
  4029c0:	60e1      	str	r1, [r4, #12]
  4029c2:	607b      	str	r3, [r7, #4]
  4029c4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4029c8:	f8c8 400c 	str.w	r4, [r8, #12]
  4029cc:	1082      	asrs	r2, r0, #2
  4029ce:	2401      	movs	r4, #1
  4029d0:	4094      	lsls	r4, r2
  4029d2:	429c      	cmp	r4, r3
  4029d4:	f200 808b 	bhi.w	402aee <_malloc_r+0x1ea>
  4029d8:	421c      	tst	r4, r3
  4029da:	d106      	bne.n	4029ea <_malloc_r+0xe6>
  4029dc:	f020 0003 	bic.w	r0, r0, #3
  4029e0:	0064      	lsls	r4, r4, #1
  4029e2:	421c      	tst	r4, r3
  4029e4:	f100 0004 	add.w	r0, r0, #4
  4029e8:	d0fa      	beq.n	4029e0 <_malloc_r+0xdc>
  4029ea:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4029ee:	46cc      	mov	ip, r9
  4029f0:	4680      	mov	r8, r0
  4029f2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4029f6:	459c      	cmp	ip, r3
  4029f8:	d107      	bne.n	402a0a <_malloc_r+0x106>
  4029fa:	e16d      	b.n	402cd8 <_malloc_r+0x3d4>
  4029fc:	2a00      	cmp	r2, #0
  4029fe:	f280 817b 	bge.w	402cf8 <_malloc_r+0x3f4>
  402a02:	68db      	ldr	r3, [r3, #12]
  402a04:	459c      	cmp	ip, r3
  402a06:	f000 8167 	beq.w	402cd8 <_malloc_r+0x3d4>
  402a0a:	6859      	ldr	r1, [r3, #4]
  402a0c:	f021 0103 	bic.w	r1, r1, #3
  402a10:	1b8a      	subs	r2, r1, r6
  402a12:	2a0f      	cmp	r2, #15
  402a14:	ddf2      	ble.n	4029fc <_malloc_r+0xf8>
  402a16:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  402a1a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  402a1e:	9300      	str	r3, [sp, #0]
  402a20:	199c      	adds	r4, r3, r6
  402a22:	4628      	mov	r0, r5
  402a24:	f046 0601 	orr.w	r6, r6, #1
  402a28:	f042 0501 	orr.w	r5, r2, #1
  402a2c:	605e      	str	r6, [r3, #4]
  402a2e:	f8c8 c00c 	str.w	ip, [r8, #12]
  402a32:	f8cc 8008 	str.w	r8, [ip, #8]
  402a36:	617c      	str	r4, [r7, #20]
  402a38:	613c      	str	r4, [r7, #16]
  402a3a:	f8c4 e00c 	str.w	lr, [r4, #12]
  402a3e:	f8c4 e008 	str.w	lr, [r4, #8]
  402a42:	6065      	str	r5, [r4, #4]
  402a44:	505a      	str	r2, [r3, r1]
  402a46:	f000 fb77 	bl	403138 <__malloc_unlock>
  402a4a:	9b00      	ldr	r3, [sp, #0]
  402a4c:	f103 0408 	add.w	r4, r3, #8
  402a50:	e01e      	b.n	402a90 <_malloc_r+0x18c>
  402a52:	2910      	cmp	r1, #16
  402a54:	d820      	bhi.n	402a98 <_malloc_r+0x194>
  402a56:	f000 fb69 	bl	40312c <__malloc_lock>
  402a5a:	2610      	movs	r6, #16
  402a5c:	2318      	movs	r3, #24
  402a5e:	2002      	movs	r0, #2
  402a60:	4f79      	ldr	r7, [pc, #484]	; (402c48 <_malloc_r+0x344>)
  402a62:	443b      	add	r3, r7
  402a64:	f1a3 0208 	sub.w	r2, r3, #8
  402a68:	685c      	ldr	r4, [r3, #4]
  402a6a:	4294      	cmp	r4, r2
  402a6c:	f000 813d 	beq.w	402cea <_malloc_r+0x3e6>
  402a70:	6863      	ldr	r3, [r4, #4]
  402a72:	68e1      	ldr	r1, [r4, #12]
  402a74:	68a6      	ldr	r6, [r4, #8]
  402a76:	f023 0303 	bic.w	r3, r3, #3
  402a7a:	4423      	add	r3, r4
  402a7c:	4628      	mov	r0, r5
  402a7e:	685a      	ldr	r2, [r3, #4]
  402a80:	60f1      	str	r1, [r6, #12]
  402a82:	f042 0201 	orr.w	r2, r2, #1
  402a86:	608e      	str	r6, [r1, #8]
  402a88:	605a      	str	r2, [r3, #4]
  402a8a:	f000 fb55 	bl	403138 <__malloc_unlock>
  402a8e:	3408      	adds	r4, #8
  402a90:	4620      	mov	r0, r4
  402a92:	b003      	add	sp, #12
  402a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a98:	2400      	movs	r4, #0
  402a9a:	230c      	movs	r3, #12
  402a9c:	4620      	mov	r0, r4
  402a9e:	602b      	str	r3, [r5, #0]
  402aa0:	b003      	add	sp, #12
  402aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402aa6:	2040      	movs	r0, #64	; 0x40
  402aa8:	f44f 7300 	mov.w	r3, #512	; 0x200
  402aac:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  402ab0:	e74a      	b.n	402948 <_malloc_r+0x44>
  402ab2:	4423      	add	r3, r4
  402ab4:	68e1      	ldr	r1, [r4, #12]
  402ab6:	685a      	ldr	r2, [r3, #4]
  402ab8:	68a6      	ldr	r6, [r4, #8]
  402aba:	f042 0201 	orr.w	r2, r2, #1
  402abe:	60f1      	str	r1, [r6, #12]
  402ac0:	4628      	mov	r0, r5
  402ac2:	608e      	str	r6, [r1, #8]
  402ac4:	605a      	str	r2, [r3, #4]
  402ac6:	f000 fb37 	bl	403138 <__malloc_unlock>
  402aca:	3408      	adds	r4, #8
  402acc:	4620      	mov	r0, r4
  402ace:	b003      	add	sp, #12
  402ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ad4:	4423      	add	r3, r4
  402ad6:	4628      	mov	r0, r5
  402ad8:	685a      	ldr	r2, [r3, #4]
  402ada:	f042 0201 	orr.w	r2, r2, #1
  402ade:	605a      	str	r2, [r3, #4]
  402ae0:	f000 fb2a 	bl	403138 <__malloc_unlock>
  402ae4:	3408      	adds	r4, #8
  402ae6:	4620      	mov	r0, r4
  402ae8:	b003      	add	sp, #12
  402aea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402aee:	68bc      	ldr	r4, [r7, #8]
  402af0:	6863      	ldr	r3, [r4, #4]
  402af2:	f023 0803 	bic.w	r8, r3, #3
  402af6:	45b0      	cmp	r8, r6
  402af8:	d304      	bcc.n	402b04 <_malloc_r+0x200>
  402afa:	eba8 0306 	sub.w	r3, r8, r6
  402afe:	2b0f      	cmp	r3, #15
  402b00:	f300 8085 	bgt.w	402c0e <_malloc_r+0x30a>
  402b04:	f8df 9158 	ldr.w	r9, [pc, #344]	; 402c60 <_malloc_r+0x35c>
  402b08:	4b50      	ldr	r3, [pc, #320]	; (402c4c <_malloc_r+0x348>)
  402b0a:	f8d9 2000 	ldr.w	r2, [r9]
  402b0e:	681b      	ldr	r3, [r3, #0]
  402b10:	3201      	adds	r2, #1
  402b12:	4433      	add	r3, r6
  402b14:	eb04 0a08 	add.w	sl, r4, r8
  402b18:	f000 8155 	beq.w	402dc6 <_malloc_r+0x4c2>
  402b1c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  402b20:	330f      	adds	r3, #15
  402b22:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  402b26:	f02b 0b0f 	bic.w	fp, fp, #15
  402b2a:	4659      	mov	r1, fp
  402b2c:	4628      	mov	r0, r5
  402b2e:	f000 fcaf 	bl	403490 <_sbrk_r>
  402b32:	1c41      	adds	r1, r0, #1
  402b34:	4602      	mov	r2, r0
  402b36:	f000 80fc 	beq.w	402d32 <_malloc_r+0x42e>
  402b3a:	4582      	cmp	sl, r0
  402b3c:	f200 80f7 	bhi.w	402d2e <_malloc_r+0x42a>
  402b40:	4b43      	ldr	r3, [pc, #268]	; (402c50 <_malloc_r+0x34c>)
  402b42:	6819      	ldr	r1, [r3, #0]
  402b44:	4459      	add	r1, fp
  402b46:	6019      	str	r1, [r3, #0]
  402b48:	f000 814d 	beq.w	402de6 <_malloc_r+0x4e2>
  402b4c:	f8d9 0000 	ldr.w	r0, [r9]
  402b50:	3001      	adds	r0, #1
  402b52:	bf1b      	ittet	ne
  402b54:	eba2 0a0a 	subne.w	sl, r2, sl
  402b58:	4451      	addne	r1, sl
  402b5a:	f8c9 2000 	streq.w	r2, [r9]
  402b5e:	6019      	strne	r1, [r3, #0]
  402b60:	f012 0107 	ands.w	r1, r2, #7
  402b64:	f000 8115 	beq.w	402d92 <_malloc_r+0x48e>
  402b68:	f1c1 0008 	rsb	r0, r1, #8
  402b6c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  402b70:	4402      	add	r2, r0
  402b72:	3108      	adds	r1, #8
  402b74:	eb02 090b 	add.w	r9, r2, fp
  402b78:	f3c9 090b 	ubfx	r9, r9, #0, #12
  402b7c:	eba1 0909 	sub.w	r9, r1, r9
  402b80:	4649      	mov	r1, r9
  402b82:	4628      	mov	r0, r5
  402b84:	9301      	str	r3, [sp, #4]
  402b86:	9200      	str	r2, [sp, #0]
  402b88:	f000 fc82 	bl	403490 <_sbrk_r>
  402b8c:	1c43      	adds	r3, r0, #1
  402b8e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  402b92:	f000 8143 	beq.w	402e1c <_malloc_r+0x518>
  402b96:	1a80      	subs	r0, r0, r2
  402b98:	4448      	add	r0, r9
  402b9a:	f040 0001 	orr.w	r0, r0, #1
  402b9e:	6819      	ldr	r1, [r3, #0]
  402ba0:	60ba      	str	r2, [r7, #8]
  402ba2:	4449      	add	r1, r9
  402ba4:	42bc      	cmp	r4, r7
  402ba6:	6050      	str	r0, [r2, #4]
  402ba8:	6019      	str	r1, [r3, #0]
  402baa:	d017      	beq.n	402bdc <_malloc_r+0x2d8>
  402bac:	f1b8 0f0f 	cmp.w	r8, #15
  402bb0:	f240 80fb 	bls.w	402daa <_malloc_r+0x4a6>
  402bb4:	6860      	ldr	r0, [r4, #4]
  402bb6:	f1a8 020c 	sub.w	r2, r8, #12
  402bba:	f022 0207 	bic.w	r2, r2, #7
  402bbe:	eb04 0e02 	add.w	lr, r4, r2
  402bc2:	f000 0001 	and.w	r0, r0, #1
  402bc6:	f04f 0c05 	mov.w	ip, #5
  402bca:	4310      	orrs	r0, r2
  402bcc:	2a0f      	cmp	r2, #15
  402bce:	6060      	str	r0, [r4, #4]
  402bd0:	f8ce c004 	str.w	ip, [lr, #4]
  402bd4:	f8ce c008 	str.w	ip, [lr, #8]
  402bd8:	f200 8117 	bhi.w	402e0a <_malloc_r+0x506>
  402bdc:	4b1d      	ldr	r3, [pc, #116]	; (402c54 <_malloc_r+0x350>)
  402bde:	68bc      	ldr	r4, [r7, #8]
  402be0:	681a      	ldr	r2, [r3, #0]
  402be2:	4291      	cmp	r1, r2
  402be4:	bf88      	it	hi
  402be6:	6019      	strhi	r1, [r3, #0]
  402be8:	4b1b      	ldr	r3, [pc, #108]	; (402c58 <_malloc_r+0x354>)
  402bea:	681a      	ldr	r2, [r3, #0]
  402bec:	4291      	cmp	r1, r2
  402bee:	6862      	ldr	r2, [r4, #4]
  402bf0:	bf88      	it	hi
  402bf2:	6019      	strhi	r1, [r3, #0]
  402bf4:	f022 0203 	bic.w	r2, r2, #3
  402bf8:	4296      	cmp	r6, r2
  402bfa:	eba2 0306 	sub.w	r3, r2, r6
  402bfe:	d801      	bhi.n	402c04 <_malloc_r+0x300>
  402c00:	2b0f      	cmp	r3, #15
  402c02:	dc04      	bgt.n	402c0e <_malloc_r+0x30a>
  402c04:	4628      	mov	r0, r5
  402c06:	f000 fa97 	bl	403138 <__malloc_unlock>
  402c0a:	2400      	movs	r4, #0
  402c0c:	e740      	b.n	402a90 <_malloc_r+0x18c>
  402c0e:	19a2      	adds	r2, r4, r6
  402c10:	f043 0301 	orr.w	r3, r3, #1
  402c14:	f046 0601 	orr.w	r6, r6, #1
  402c18:	6066      	str	r6, [r4, #4]
  402c1a:	4628      	mov	r0, r5
  402c1c:	60ba      	str	r2, [r7, #8]
  402c1e:	6053      	str	r3, [r2, #4]
  402c20:	f000 fa8a 	bl	403138 <__malloc_unlock>
  402c24:	3408      	adds	r4, #8
  402c26:	4620      	mov	r0, r4
  402c28:	b003      	add	sp, #12
  402c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c2e:	2b14      	cmp	r3, #20
  402c30:	d971      	bls.n	402d16 <_malloc_r+0x412>
  402c32:	2b54      	cmp	r3, #84	; 0x54
  402c34:	f200 80a3 	bhi.w	402d7e <_malloc_r+0x47a>
  402c38:	0b33      	lsrs	r3, r6, #12
  402c3a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  402c3e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  402c42:	00c3      	lsls	r3, r0, #3
  402c44:	e680      	b.n	402948 <_malloc_r+0x44>
  402c46:	bf00      	nop
  402c48:	204005a8 	.word	0x204005a8
  402c4c:	20400a7c 	.word	0x20400a7c
  402c50:	20400a4c 	.word	0x20400a4c
  402c54:	20400a74 	.word	0x20400a74
  402c58:	20400a78 	.word	0x20400a78
  402c5c:	204005b0 	.word	0x204005b0
  402c60:	204009b0 	.word	0x204009b0
  402c64:	0a5a      	lsrs	r2, r3, #9
  402c66:	2a04      	cmp	r2, #4
  402c68:	d95b      	bls.n	402d22 <_malloc_r+0x41e>
  402c6a:	2a14      	cmp	r2, #20
  402c6c:	f200 80ae 	bhi.w	402dcc <_malloc_r+0x4c8>
  402c70:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  402c74:	00c9      	lsls	r1, r1, #3
  402c76:	325b      	adds	r2, #91	; 0x5b
  402c78:	eb07 0c01 	add.w	ip, r7, r1
  402c7c:	5879      	ldr	r1, [r7, r1]
  402c7e:	f1ac 0c08 	sub.w	ip, ip, #8
  402c82:	458c      	cmp	ip, r1
  402c84:	f000 8088 	beq.w	402d98 <_malloc_r+0x494>
  402c88:	684a      	ldr	r2, [r1, #4]
  402c8a:	f022 0203 	bic.w	r2, r2, #3
  402c8e:	4293      	cmp	r3, r2
  402c90:	d273      	bcs.n	402d7a <_malloc_r+0x476>
  402c92:	6889      	ldr	r1, [r1, #8]
  402c94:	458c      	cmp	ip, r1
  402c96:	d1f7      	bne.n	402c88 <_malloc_r+0x384>
  402c98:	f8dc 200c 	ldr.w	r2, [ip, #12]
  402c9c:	687b      	ldr	r3, [r7, #4]
  402c9e:	60e2      	str	r2, [r4, #12]
  402ca0:	f8c4 c008 	str.w	ip, [r4, #8]
  402ca4:	6094      	str	r4, [r2, #8]
  402ca6:	f8cc 400c 	str.w	r4, [ip, #12]
  402caa:	e68f      	b.n	4029cc <_malloc_r+0xc8>
  402cac:	19a1      	adds	r1, r4, r6
  402cae:	f046 0c01 	orr.w	ip, r6, #1
  402cb2:	f042 0601 	orr.w	r6, r2, #1
  402cb6:	f8c4 c004 	str.w	ip, [r4, #4]
  402cba:	4628      	mov	r0, r5
  402cbc:	6179      	str	r1, [r7, #20]
  402cbe:	6139      	str	r1, [r7, #16]
  402cc0:	f8c1 e00c 	str.w	lr, [r1, #12]
  402cc4:	f8c1 e008 	str.w	lr, [r1, #8]
  402cc8:	604e      	str	r6, [r1, #4]
  402cca:	50e2      	str	r2, [r4, r3]
  402ccc:	f000 fa34 	bl	403138 <__malloc_unlock>
  402cd0:	3408      	adds	r4, #8
  402cd2:	e6dd      	b.n	402a90 <_malloc_r+0x18c>
  402cd4:	687b      	ldr	r3, [r7, #4]
  402cd6:	e679      	b.n	4029cc <_malloc_r+0xc8>
  402cd8:	f108 0801 	add.w	r8, r8, #1
  402cdc:	f018 0f03 	tst.w	r8, #3
  402ce0:	f10c 0c08 	add.w	ip, ip, #8
  402ce4:	f47f ae85 	bne.w	4029f2 <_malloc_r+0xee>
  402ce8:	e02d      	b.n	402d46 <_malloc_r+0x442>
  402cea:	68dc      	ldr	r4, [r3, #12]
  402cec:	42a3      	cmp	r3, r4
  402cee:	bf08      	it	eq
  402cf0:	3002      	addeq	r0, #2
  402cf2:	f43f ae3e 	beq.w	402972 <_malloc_r+0x6e>
  402cf6:	e6bb      	b.n	402a70 <_malloc_r+0x16c>
  402cf8:	4419      	add	r1, r3
  402cfa:	461c      	mov	r4, r3
  402cfc:	684a      	ldr	r2, [r1, #4]
  402cfe:	68db      	ldr	r3, [r3, #12]
  402d00:	f854 6f08 	ldr.w	r6, [r4, #8]!
  402d04:	f042 0201 	orr.w	r2, r2, #1
  402d08:	604a      	str	r2, [r1, #4]
  402d0a:	4628      	mov	r0, r5
  402d0c:	60f3      	str	r3, [r6, #12]
  402d0e:	609e      	str	r6, [r3, #8]
  402d10:	f000 fa12 	bl	403138 <__malloc_unlock>
  402d14:	e6bc      	b.n	402a90 <_malloc_r+0x18c>
  402d16:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  402d1a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  402d1e:	00c3      	lsls	r3, r0, #3
  402d20:	e612      	b.n	402948 <_malloc_r+0x44>
  402d22:	099a      	lsrs	r2, r3, #6
  402d24:	f102 0139 	add.w	r1, r2, #57	; 0x39
  402d28:	00c9      	lsls	r1, r1, #3
  402d2a:	3238      	adds	r2, #56	; 0x38
  402d2c:	e7a4      	b.n	402c78 <_malloc_r+0x374>
  402d2e:	42bc      	cmp	r4, r7
  402d30:	d054      	beq.n	402ddc <_malloc_r+0x4d8>
  402d32:	68bc      	ldr	r4, [r7, #8]
  402d34:	6862      	ldr	r2, [r4, #4]
  402d36:	f022 0203 	bic.w	r2, r2, #3
  402d3a:	e75d      	b.n	402bf8 <_malloc_r+0x2f4>
  402d3c:	f859 3908 	ldr.w	r3, [r9], #-8
  402d40:	4599      	cmp	r9, r3
  402d42:	f040 8086 	bne.w	402e52 <_malloc_r+0x54e>
  402d46:	f010 0f03 	tst.w	r0, #3
  402d4a:	f100 30ff 	add.w	r0, r0, #4294967295
  402d4e:	d1f5      	bne.n	402d3c <_malloc_r+0x438>
  402d50:	687b      	ldr	r3, [r7, #4]
  402d52:	ea23 0304 	bic.w	r3, r3, r4
  402d56:	607b      	str	r3, [r7, #4]
  402d58:	0064      	lsls	r4, r4, #1
  402d5a:	429c      	cmp	r4, r3
  402d5c:	f63f aec7 	bhi.w	402aee <_malloc_r+0x1ea>
  402d60:	2c00      	cmp	r4, #0
  402d62:	f43f aec4 	beq.w	402aee <_malloc_r+0x1ea>
  402d66:	421c      	tst	r4, r3
  402d68:	4640      	mov	r0, r8
  402d6a:	f47f ae3e 	bne.w	4029ea <_malloc_r+0xe6>
  402d6e:	0064      	lsls	r4, r4, #1
  402d70:	421c      	tst	r4, r3
  402d72:	f100 0004 	add.w	r0, r0, #4
  402d76:	d0fa      	beq.n	402d6e <_malloc_r+0x46a>
  402d78:	e637      	b.n	4029ea <_malloc_r+0xe6>
  402d7a:	468c      	mov	ip, r1
  402d7c:	e78c      	b.n	402c98 <_malloc_r+0x394>
  402d7e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402d82:	d815      	bhi.n	402db0 <_malloc_r+0x4ac>
  402d84:	0bf3      	lsrs	r3, r6, #15
  402d86:	f103 0078 	add.w	r0, r3, #120	; 0x78
  402d8a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  402d8e:	00c3      	lsls	r3, r0, #3
  402d90:	e5da      	b.n	402948 <_malloc_r+0x44>
  402d92:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  402d96:	e6ed      	b.n	402b74 <_malloc_r+0x270>
  402d98:	687b      	ldr	r3, [r7, #4]
  402d9a:	1092      	asrs	r2, r2, #2
  402d9c:	2101      	movs	r1, #1
  402d9e:	fa01 f202 	lsl.w	r2, r1, r2
  402da2:	4313      	orrs	r3, r2
  402da4:	607b      	str	r3, [r7, #4]
  402da6:	4662      	mov	r2, ip
  402da8:	e779      	b.n	402c9e <_malloc_r+0x39a>
  402daa:	2301      	movs	r3, #1
  402dac:	6053      	str	r3, [r2, #4]
  402dae:	e729      	b.n	402c04 <_malloc_r+0x300>
  402db0:	f240 5254 	movw	r2, #1364	; 0x554
  402db4:	4293      	cmp	r3, r2
  402db6:	d822      	bhi.n	402dfe <_malloc_r+0x4fa>
  402db8:	0cb3      	lsrs	r3, r6, #18
  402dba:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  402dbe:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  402dc2:	00c3      	lsls	r3, r0, #3
  402dc4:	e5c0      	b.n	402948 <_malloc_r+0x44>
  402dc6:	f103 0b10 	add.w	fp, r3, #16
  402dca:	e6ae      	b.n	402b2a <_malloc_r+0x226>
  402dcc:	2a54      	cmp	r2, #84	; 0x54
  402dce:	d829      	bhi.n	402e24 <_malloc_r+0x520>
  402dd0:	0b1a      	lsrs	r2, r3, #12
  402dd2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  402dd6:	00c9      	lsls	r1, r1, #3
  402dd8:	326e      	adds	r2, #110	; 0x6e
  402dda:	e74d      	b.n	402c78 <_malloc_r+0x374>
  402ddc:	4b20      	ldr	r3, [pc, #128]	; (402e60 <_malloc_r+0x55c>)
  402dde:	6819      	ldr	r1, [r3, #0]
  402de0:	4459      	add	r1, fp
  402de2:	6019      	str	r1, [r3, #0]
  402de4:	e6b2      	b.n	402b4c <_malloc_r+0x248>
  402de6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  402dea:	2800      	cmp	r0, #0
  402dec:	f47f aeae 	bne.w	402b4c <_malloc_r+0x248>
  402df0:	eb08 030b 	add.w	r3, r8, fp
  402df4:	68ba      	ldr	r2, [r7, #8]
  402df6:	f043 0301 	orr.w	r3, r3, #1
  402dfa:	6053      	str	r3, [r2, #4]
  402dfc:	e6ee      	b.n	402bdc <_malloc_r+0x2d8>
  402dfe:	207f      	movs	r0, #127	; 0x7f
  402e00:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  402e04:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  402e08:	e59e      	b.n	402948 <_malloc_r+0x44>
  402e0a:	f104 0108 	add.w	r1, r4, #8
  402e0e:	4628      	mov	r0, r5
  402e10:	9300      	str	r3, [sp, #0]
  402e12:	f7ff fa59 	bl	4022c8 <_free_r>
  402e16:	9b00      	ldr	r3, [sp, #0]
  402e18:	6819      	ldr	r1, [r3, #0]
  402e1a:	e6df      	b.n	402bdc <_malloc_r+0x2d8>
  402e1c:	2001      	movs	r0, #1
  402e1e:	f04f 0900 	mov.w	r9, #0
  402e22:	e6bc      	b.n	402b9e <_malloc_r+0x29a>
  402e24:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402e28:	d805      	bhi.n	402e36 <_malloc_r+0x532>
  402e2a:	0bda      	lsrs	r2, r3, #15
  402e2c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  402e30:	00c9      	lsls	r1, r1, #3
  402e32:	3277      	adds	r2, #119	; 0x77
  402e34:	e720      	b.n	402c78 <_malloc_r+0x374>
  402e36:	f240 5154 	movw	r1, #1364	; 0x554
  402e3a:	428a      	cmp	r2, r1
  402e3c:	d805      	bhi.n	402e4a <_malloc_r+0x546>
  402e3e:	0c9a      	lsrs	r2, r3, #18
  402e40:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  402e44:	00c9      	lsls	r1, r1, #3
  402e46:	327c      	adds	r2, #124	; 0x7c
  402e48:	e716      	b.n	402c78 <_malloc_r+0x374>
  402e4a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  402e4e:	227e      	movs	r2, #126	; 0x7e
  402e50:	e712      	b.n	402c78 <_malloc_r+0x374>
  402e52:	687b      	ldr	r3, [r7, #4]
  402e54:	e780      	b.n	402d58 <_malloc_r+0x454>
  402e56:	08f0      	lsrs	r0, r6, #3
  402e58:	f106 0308 	add.w	r3, r6, #8
  402e5c:	e600      	b.n	402a60 <_malloc_r+0x15c>
  402e5e:	bf00      	nop
  402e60:	20400a4c 	.word	0x20400a4c

00402e64 <__ascii_mbtowc>:
  402e64:	b082      	sub	sp, #8
  402e66:	b149      	cbz	r1, 402e7c <__ascii_mbtowc+0x18>
  402e68:	b15a      	cbz	r2, 402e82 <__ascii_mbtowc+0x1e>
  402e6a:	b16b      	cbz	r3, 402e88 <__ascii_mbtowc+0x24>
  402e6c:	7813      	ldrb	r3, [r2, #0]
  402e6e:	600b      	str	r3, [r1, #0]
  402e70:	7812      	ldrb	r2, [r2, #0]
  402e72:	1c10      	adds	r0, r2, #0
  402e74:	bf18      	it	ne
  402e76:	2001      	movne	r0, #1
  402e78:	b002      	add	sp, #8
  402e7a:	4770      	bx	lr
  402e7c:	a901      	add	r1, sp, #4
  402e7e:	2a00      	cmp	r2, #0
  402e80:	d1f3      	bne.n	402e6a <__ascii_mbtowc+0x6>
  402e82:	4610      	mov	r0, r2
  402e84:	b002      	add	sp, #8
  402e86:	4770      	bx	lr
  402e88:	f06f 0001 	mvn.w	r0, #1
  402e8c:	e7f4      	b.n	402e78 <__ascii_mbtowc+0x14>
  402e8e:	bf00      	nop

00402e90 <memchr>:
  402e90:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  402e94:	2a10      	cmp	r2, #16
  402e96:	db2b      	blt.n	402ef0 <memchr+0x60>
  402e98:	f010 0f07 	tst.w	r0, #7
  402e9c:	d008      	beq.n	402eb0 <memchr+0x20>
  402e9e:	f810 3b01 	ldrb.w	r3, [r0], #1
  402ea2:	3a01      	subs	r2, #1
  402ea4:	428b      	cmp	r3, r1
  402ea6:	d02d      	beq.n	402f04 <memchr+0x74>
  402ea8:	f010 0f07 	tst.w	r0, #7
  402eac:	b342      	cbz	r2, 402f00 <memchr+0x70>
  402eae:	d1f6      	bne.n	402e9e <memchr+0xe>
  402eb0:	b4f0      	push	{r4, r5, r6, r7}
  402eb2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  402eb6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  402eba:	f022 0407 	bic.w	r4, r2, #7
  402ebe:	f07f 0700 	mvns.w	r7, #0
  402ec2:	2300      	movs	r3, #0
  402ec4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  402ec8:	3c08      	subs	r4, #8
  402eca:	ea85 0501 	eor.w	r5, r5, r1
  402ece:	ea86 0601 	eor.w	r6, r6, r1
  402ed2:	fa85 f547 	uadd8	r5, r5, r7
  402ed6:	faa3 f587 	sel	r5, r3, r7
  402eda:	fa86 f647 	uadd8	r6, r6, r7
  402ede:	faa5 f687 	sel	r6, r5, r7
  402ee2:	b98e      	cbnz	r6, 402f08 <memchr+0x78>
  402ee4:	d1ee      	bne.n	402ec4 <memchr+0x34>
  402ee6:	bcf0      	pop	{r4, r5, r6, r7}
  402ee8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  402eec:	f002 0207 	and.w	r2, r2, #7
  402ef0:	b132      	cbz	r2, 402f00 <memchr+0x70>
  402ef2:	f810 3b01 	ldrb.w	r3, [r0], #1
  402ef6:	3a01      	subs	r2, #1
  402ef8:	ea83 0301 	eor.w	r3, r3, r1
  402efc:	b113      	cbz	r3, 402f04 <memchr+0x74>
  402efe:	d1f8      	bne.n	402ef2 <memchr+0x62>
  402f00:	2000      	movs	r0, #0
  402f02:	4770      	bx	lr
  402f04:	3801      	subs	r0, #1
  402f06:	4770      	bx	lr
  402f08:	2d00      	cmp	r5, #0
  402f0a:	bf06      	itte	eq
  402f0c:	4635      	moveq	r5, r6
  402f0e:	3803      	subeq	r0, #3
  402f10:	3807      	subne	r0, #7
  402f12:	f015 0f01 	tst.w	r5, #1
  402f16:	d107      	bne.n	402f28 <memchr+0x98>
  402f18:	3001      	adds	r0, #1
  402f1a:	f415 7f80 	tst.w	r5, #256	; 0x100
  402f1e:	bf02      	ittt	eq
  402f20:	3001      	addeq	r0, #1
  402f22:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  402f26:	3001      	addeq	r0, #1
  402f28:	bcf0      	pop	{r4, r5, r6, r7}
  402f2a:	3801      	subs	r0, #1
  402f2c:	4770      	bx	lr
  402f2e:	bf00      	nop

00402f30 <memcpy>:
  402f30:	4684      	mov	ip, r0
  402f32:	ea41 0300 	orr.w	r3, r1, r0
  402f36:	f013 0303 	ands.w	r3, r3, #3
  402f3a:	d16d      	bne.n	403018 <memcpy+0xe8>
  402f3c:	3a40      	subs	r2, #64	; 0x40
  402f3e:	d341      	bcc.n	402fc4 <memcpy+0x94>
  402f40:	f851 3b04 	ldr.w	r3, [r1], #4
  402f44:	f840 3b04 	str.w	r3, [r0], #4
  402f48:	f851 3b04 	ldr.w	r3, [r1], #4
  402f4c:	f840 3b04 	str.w	r3, [r0], #4
  402f50:	f851 3b04 	ldr.w	r3, [r1], #4
  402f54:	f840 3b04 	str.w	r3, [r0], #4
  402f58:	f851 3b04 	ldr.w	r3, [r1], #4
  402f5c:	f840 3b04 	str.w	r3, [r0], #4
  402f60:	f851 3b04 	ldr.w	r3, [r1], #4
  402f64:	f840 3b04 	str.w	r3, [r0], #4
  402f68:	f851 3b04 	ldr.w	r3, [r1], #4
  402f6c:	f840 3b04 	str.w	r3, [r0], #4
  402f70:	f851 3b04 	ldr.w	r3, [r1], #4
  402f74:	f840 3b04 	str.w	r3, [r0], #4
  402f78:	f851 3b04 	ldr.w	r3, [r1], #4
  402f7c:	f840 3b04 	str.w	r3, [r0], #4
  402f80:	f851 3b04 	ldr.w	r3, [r1], #4
  402f84:	f840 3b04 	str.w	r3, [r0], #4
  402f88:	f851 3b04 	ldr.w	r3, [r1], #4
  402f8c:	f840 3b04 	str.w	r3, [r0], #4
  402f90:	f851 3b04 	ldr.w	r3, [r1], #4
  402f94:	f840 3b04 	str.w	r3, [r0], #4
  402f98:	f851 3b04 	ldr.w	r3, [r1], #4
  402f9c:	f840 3b04 	str.w	r3, [r0], #4
  402fa0:	f851 3b04 	ldr.w	r3, [r1], #4
  402fa4:	f840 3b04 	str.w	r3, [r0], #4
  402fa8:	f851 3b04 	ldr.w	r3, [r1], #4
  402fac:	f840 3b04 	str.w	r3, [r0], #4
  402fb0:	f851 3b04 	ldr.w	r3, [r1], #4
  402fb4:	f840 3b04 	str.w	r3, [r0], #4
  402fb8:	f851 3b04 	ldr.w	r3, [r1], #4
  402fbc:	f840 3b04 	str.w	r3, [r0], #4
  402fc0:	3a40      	subs	r2, #64	; 0x40
  402fc2:	d2bd      	bcs.n	402f40 <memcpy+0x10>
  402fc4:	3230      	adds	r2, #48	; 0x30
  402fc6:	d311      	bcc.n	402fec <memcpy+0xbc>
  402fc8:	f851 3b04 	ldr.w	r3, [r1], #4
  402fcc:	f840 3b04 	str.w	r3, [r0], #4
  402fd0:	f851 3b04 	ldr.w	r3, [r1], #4
  402fd4:	f840 3b04 	str.w	r3, [r0], #4
  402fd8:	f851 3b04 	ldr.w	r3, [r1], #4
  402fdc:	f840 3b04 	str.w	r3, [r0], #4
  402fe0:	f851 3b04 	ldr.w	r3, [r1], #4
  402fe4:	f840 3b04 	str.w	r3, [r0], #4
  402fe8:	3a10      	subs	r2, #16
  402fea:	d2ed      	bcs.n	402fc8 <memcpy+0x98>
  402fec:	320c      	adds	r2, #12
  402fee:	d305      	bcc.n	402ffc <memcpy+0xcc>
  402ff0:	f851 3b04 	ldr.w	r3, [r1], #4
  402ff4:	f840 3b04 	str.w	r3, [r0], #4
  402ff8:	3a04      	subs	r2, #4
  402ffa:	d2f9      	bcs.n	402ff0 <memcpy+0xc0>
  402ffc:	3204      	adds	r2, #4
  402ffe:	d008      	beq.n	403012 <memcpy+0xe2>
  403000:	07d2      	lsls	r2, r2, #31
  403002:	bf1c      	itt	ne
  403004:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403008:	f800 3b01 	strbne.w	r3, [r0], #1
  40300c:	d301      	bcc.n	403012 <memcpy+0xe2>
  40300e:	880b      	ldrh	r3, [r1, #0]
  403010:	8003      	strh	r3, [r0, #0]
  403012:	4660      	mov	r0, ip
  403014:	4770      	bx	lr
  403016:	bf00      	nop
  403018:	2a08      	cmp	r2, #8
  40301a:	d313      	bcc.n	403044 <memcpy+0x114>
  40301c:	078b      	lsls	r3, r1, #30
  40301e:	d08d      	beq.n	402f3c <memcpy+0xc>
  403020:	f010 0303 	ands.w	r3, r0, #3
  403024:	d08a      	beq.n	402f3c <memcpy+0xc>
  403026:	f1c3 0304 	rsb	r3, r3, #4
  40302a:	1ad2      	subs	r2, r2, r3
  40302c:	07db      	lsls	r3, r3, #31
  40302e:	bf1c      	itt	ne
  403030:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403034:	f800 3b01 	strbne.w	r3, [r0], #1
  403038:	d380      	bcc.n	402f3c <memcpy+0xc>
  40303a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40303e:	f820 3b02 	strh.w	r3, [r0], #2
  403042:	e77b      	b.n	402f3c <memcpy+0xc>
  403044:	3a04      	subs	r2, #4
  403046:	d3d9      	bcc.n	402ffc <memcpy+0xcc>
  403048:	3a01      	subs	r2, #1
  40304a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40304e:	f800 3b01 	strb.w	r3, [r0], #1
  403052:	d2f9      	bcs.n	403048 <memcpy+0x118>
  403054:	780b      	ldrb	r3, [r1, #0]
  403056:	7003      	strb	r3, [r0, #0]
  403058:	784b      	ldrb	r3, [r1, #1]
  40305a:	7043      	strb	r3, [r0, #1]
  40305c:	788b      	ldrb	r3, [r1, #2]
  40305e:	7083      	strb	r3, [r0, #2]
  403060:	4660      	mov	r0, ip
  403062:	4770      	bx	lr

00403064 <memmove>:
  403064:	4288      	cmp	r0, r1
  403066:	b5f0      	push	{r4, r5, r6, r7, lr}
  403068:	d90d      	bls.n	403086 <memmove+0x22>
  40306a:	188b      	adds	r3, r1, r2
  40306c:	4298      	cmp	r0, r3
  40306e:	d20a      	bcs.n	403086 <memmove+0x22>
  403070:	1884      	adds	r4, r0, r2
  403072:	2a00      	cmp	r2, #0
  403074:	d051      	beq.n	40311a <memmove+0xb6>
  403076:	4622      	mov	r2, r4
  403078:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40307c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  403080:	4299      	cmp	r1, r3
  403082:	d1f9      	bne.n	403078 <memmove+0x14>
  403084:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403086:	2a0f      	cmp	r2, #15
  403088:	d948      	bls.n	40311c <memmove+0xb8>
  40308a:	ea41 0300 	orr.w	r3, r1, r0
  40308e:	079b      	lsls	r3, r3, #30
  403090:	d146      	bne.n	403120 <memmove+0xbc>
  403092:	f100 0410 	add.w	r4, r0, #16
  403096:	f101 0310 	add.w	r3, r1, #16
  40309a:	4615      	mov	r5, r2
  40309c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4030a0:	f844 6c10 	str.w	r6, [r4, #-16]
  4030a4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4030a8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4030ac:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4030b0:	f844 6c08 	str.w	r6, [r4, #-8]
  4030b4:	3d10      	subs	r5, #16
  4030b6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4030ba:	f844 6c04 	str.w	r6, [r4, #-4]
  4030be:	2d0f      	cmp	r5, #15
  4030c0:	f103 0310 	add.w	r3, r3, #16
  4030c4:	f104 0410 	add.w	r4, r4, #16
  4030c8:	d8e8      	bhi.n	40309c <memmove+0x38>
  4030ca:	f1a2 0310 	sub.w	r3, r2, #16
  4030ce:	f023 030f 	bic.w	r3, r3, #15
  4030d2:	f002 0e0f 	and.w	lr, r2, #15
  4030d6:	3310      	adds	r3, #16
  4030d8:	f1be 0f03 	cmp.w	lr, #3
  4030dc:	4419      	add	r1, r3
  4030de:	4403      	add	r3, r0
  4030e0:	d921      	bls.n	403126 <memmove+0xc2>
  4030e2:	1f1e      	subs	r6, r3, #4
  4030e4:	460d      	mov	r5, r1
  4030e6:	4674      	mov	r4, lr
  4030e8:	3c04      	subs	r4, #4
  4030ea:	f855 7b04 	ldr.w	r7, [r5], #4
  4030ee:	f846 7f04 	str.w	r7, [r6, #4]!
  4030f2:	2c03      	cmp	r4, #3
  4030f4:	d8f8      	bhi.n	4030e8 <memmove+0x84>
  4030f6:	f1ae 0404 	sub.w	r4, lr, #4
  4030fa:	f024 0403 	bic.w	r4, r4, #3
  4030fe:	3404      	adds	r4, #4
  403100:	4421      	add	r1, r4
  403102:	4423      	add	r3, r4
  403104:	f002 0203 	and.w	r2, r2, #3
  403108:	b162      	cbz	r2, 403124 <memmove+0xc0>
  40310a:	3b01      	subs	r3, #1
  40310c:	440a      	add	r2, r1
  40310e:	f811 4b01 	ldrb.w	r4, [r1], #1
  403112:	f803 4f01 	strb.w	r4, [r3, #1]!
  403116:	428a      	cmp	r2, r1
  403118:	d1f9      	bne.n	40310e <memmove+0xaa>
  40311a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40311c:	4603      	mov	r3, r0
  40311e:	e7f3      	b.n	403108 <memmove+0xa4>
  403120:	4603      	mov	r3, r0
  403122:	e7f2      	b.n	40310a <memmove+0xa6>
  403124:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403126:	4672      	mov	r2, lr
  403128:	e7ee      	b.n	403108 <memmove+0xa4>
  40312a:	bf00      	nop

0040312c <__malloc_lock>:
  40312c:	4801      	ldr	r0, [pc, #4]	; (403134 <__malloc_lock+0x8>)
  40312e:	f7ff bb65 	b.w	4027fc <__retarget_lock_acquire_recursive>
  403132:	bf00      	nop
  403134:	20400a9c 	.word	0x20400a9c

00403138 <__malloc_unlock>:
  403138:	4801      	ldr	r0, [pc, #4]	; (403140 <__malloc_unlock+0x8>)
  40313a:	f7ff bb61 	b.w	402800 <__retarget_lock_release_recursive>
  40313e:	bf00      	nop
  403140:	20400a9c 	.word	0x20400a9c

00403144 <_realloc_r>:
  403144:	2900      	cmp	r1, #0
  403146:	f000 8095 	beq.w	403274 <_realloc_r+0x130>
  40314a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40314e:	460d      	mov	r5, r1
  403150:	4616      	mov	r6, r2
  403152:	b083      	sub	sp, #12
  403154:	4680      	mov	r8, r0
  403156:	f106 070b 	add.w	r7, r6, #11
  40315a:	f7ff ffe7 	bl	40312c <__malloc_lock>
  40315e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  403162:	2f16      	cmp	r7, #22
  403164:	f02e 0403 	bic.w	r4, lr, #3
  403168:	f1a5 0908 	sub.w	r9, r5, #8
  40316c:	d83c      	bhi.n	4031e8 <_realloc_r+0xa4>
  40316e:	2210      	movs	r2, #16
  403170:	4617      	mov	r7, r2
  403172:	42be      	cmp	r6, r7
  403174:	d83d      	bhi.n	4031f2 <_realloc_r+0xae>
  403176:	4294      	cmp	r4, r2
  403178:	da43      	bge.n	403202 <_realloc_r+0xbe>
  40317a:	4bc4      	ldr	r3, [pc, #784]	; (40348c <_realloc_r+0x348>)
  40317c:	6899      	ldr	r1, [r3, #8]
  40317e:	eb09 0004 	add.w	r0, r9, r4
  403182:	4288      	cmp	r0, r1
  403184:	f000 80b4 	beq.w	4032f0 <_realloc_r+0x1ac>
  403188:	6843      	ldr	r3, [r0, #4]
  40318a:	f023 0101 	bic.w	r1, r3, #1
  40318e:	4401      	add	r1, r0
  403190:	6849      	ldr	r1, [r1, #4]
  403192:	07c9      	lsls	r1, r1, #31
  403194:	d54c      	bpl.n	403230 <_realloc_r+0xec>
  403196:	f01e 0f01 	tst.w	lr, #1
  40319a:	f000 809b 	beq.w	4032d4 <_realloc_r+0x190>
  40319e:	4631      	mov	r1, r6
  4031a0:	4640      	mov	r0, r8
  4031a2:	f7ff fbaf 	bl	402904 <_malloc_r>
  4031a6:	4606      	mov	r6, r0
  4031a8:	2800      	cmp	r0, #0
  4031aa:	d03a      	beq.n	403222 <_realloc_r+0xde>
  4031ac:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4031b0:	f023 0301 	bic.w	r3, r3, #1
  4031b4:	444b      	add	r3, r9
  4031b6:	f1a0 0208 	sub.w	r2, r0, #8
  4031ba:	429a      	cmp	r2, r3
  4031bc:	f000 8121 	beq.w	403402 <_realloc_r+0x2be>
  4031c0:	1f22      	subs	r2, r4, #4
  4031c2:	2a24      	cmp	r2, #36	; 0x24
  4031c4:	f200 8107 	bhi.w	4033d6 <_realloc_r+0x292>
  4031c8:	2a13      	cmp	r2, #19
  4031ca:	f200 80db 	bhi.w	403384 <_realloc_r+0x240>
  4031ce:	4603      	mov	r3, r0
  4031d0:	462a      	mov	r2, r5
  4031d2:	6811      	ldr	r1, [r2, #0]
  4031d4:	6019      	str	r1, [r3, #0]
  4031d6:	6851      	ldr	r1, [r2, #4]
  4031d8:	6059      	str	r1, [r3, #4]
  4031da:	6892      	ldr	r2, [r2, #8]
  4031dc:	609a      	str	r2, [r3, #8]
  4031de:	4629      	mov	r1, r5
  4031e0:	4640      	mov	r0, r8
  4031e2:	f7ff f871 	bl	4022c8 <_free_r>
  4031e6:	e01c      	b.n	403222 <_realloc_r+0xde>
  4031e8:	f027 0707 	bic.w	r7, r7, #7
  4031ec:	2f00      	cmp	r7, #0
  4031ee:	463a      	mov	r2, r7
  4031f0:	dabf      	bge.n	403172 <_realloc_r+0x2e>
  4031f2:	2600      	movs	r6, #0
  4031f4:	230c      	movs	r3, #12
  4031f6:	4630      	mov	r0, r6
  4031f8:	f8c8 3000 	str.w	r3, [r8]
  4031fc:	b003      	add	sp, #12
  4031fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403202:	462e      	mov	r6, r5
  403204:	1be3      	subs	r3, r4, r7
  403206:	2b0f      	cmp	r3, #15
  403208:	d81e      	bhi.n	403248 <_realloc_r+0x104>
  40320a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40320e:	f003 0301 	and.w	r3, r3, #1
  403212:	4323      	orrs	r3, r4
  403214:	444c      	add	r4, r9
  403216:	f8c9 3004 	str.w	r3, [r9, #4]
  40321a:	6863      	ldr	r3, [r4, #4]
  40321c:	f043 0301 	orr.w	r3, r3, #1
  403220:	6063      	str	r3, [r4, #4]
  403222:	4640      	mov	r0, r8
  403224:	f7ff ff88 	bl	403138 <__malloc_unlock>
  403228:	4630      	mov	r0, r6
  40322a:	b003      	add	sp, #12
  40322c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403230:	f023 0303 	bic.w	r3, r3, #3
  403234:	18e1      	adds	r1, r4, r3
  403236:	4291      	cmp	r1, r2
  403238:	db1f      	blt.n	40327a <_realloc_r+0x136>
  40323a:	68c3      	ldr	r3, [r0, #12]
  40323c:	6882      	ldr	r2, [r0, #8]
  40323e:	462e      	mov	r6, r5
  403240:	60d3      	str	r3, [r2, #12]
  403242:	460c      	mov	r4, r1
  403244:	609a      	str	r2, [r3, #8]
  403246:	e7dd      	b.n	403204 <_realloc_r+0xc0>
  403248:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40324c:	eb09 0107 	add.w	r1, r9, r7
  403250:	f002 0201 	and.w	r2, r2, #1
  403254:	444c      	add	r4, r9
  403256:	f043 0301 	orr.w	r3, r3, #1
  40325a:	4317      	orrs	r7, r2
  40325c:	f8c9 7004 	str.w	r7, [r9, #4]
  403260:	604b      	str	r3, [r1, #4]
  403262:	6863      	ldr	r3, [r4, #4]
  403264:	f043 0301 	orr.w	r3, r3, #1
  403268:	3108      	adds	r1, #8
  40326a:	6063      	str	r3, [r4, #4]
  40326c:	4640      	mov	r0, r8
  40326e:	f7ff f82b 	bl	4022c8 <_free_r>
  403272:	e7d6      	b.n	403222 <_realloc_r+0xde>
  403274:	4611      	mov	r1, r2
  403276:	f7ff bb45 	b.w	402904 <_malloc_r>
  40327a:	f01e 0f01 	tst.w	lr, #1
  40327e:	d18e      	bne.n	40319e <_realloc_r+0x5a>
  403280:	f855 1c08 	ldr.w	r1, [r5, #-8]
  403284:	eba9 0a01 	sub.w	sl, r9, r1
  403288:	f8da 1004 	ldr.w	r1, [sl, #4]
  40328c:	f021 0103 	bic.w	r1, r1, #3
  403290:	440b      	add	r3, r1
  403292:	4423      	add	r3, r4
  403294:	4293      	cmp	r3, r2
  403296:	db25      	blt.n	4032e4 <_realloc_r+0x1a0>
  403298:	68c2      	ldr	r2, [r0, #12]
  40329a:	6881      	ldr	r1, [r0, #8]
  40329c:	4656      	mov	r6, sl
  40329e:	60ca      	str	r2, [r1, #12]
  4032a0:	6091      	str	r1, [r2, #8]
  4032a2:	f8da 100c 	ldr.w	r1, [sl, #12]
  4032a6:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4032aa:	1f22      	subs	r2, r4, #4
  4032ac:	2a24      	cmp	r2, #36	; 0x24
  4032ae:	60c1      	str	r1, [r0, #12]
  4032b0:	6088      	str	r0, [r1, #8]
  4032b2:	f200 8094 	bhi.w	4033de <_realloc_r+0x29a>
  4032b6:	2a13      	cmp	r2, #19
  4032b8:	d96f      	bls.n	40339a <_realloc_r+0x256>
  4032ba:	6829      	ldr	r1, [r5, #0]
  4032bc:	f8ca 1008 	str.w	r1, [sl, #8]
  4032c0:	6869      	ldr	r1, [r5, #4]
  4032c2:	f8ca 100c 	str.w	r1, [sl, #12]
  4032c6:	2a1b      	cmp	r2, #27
  4032c8:	f200 80a2 	bhi.w	403410 <_realloc_r+0x2cc>
  4032cc:	3508      	adds	r5, #8
  4032ce:	f10a 0210 	add.w	r2, sl, #16
  4032d2:	e063      	b.n	40339c <_realloc_r+0x258>
  4032d4:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4032d8:	eba9 0a03 	sub.w	sl, r9, r3
  4032dc:	f8da 1004 	ldr.w	r1, [sl, #4]
  4032e0:	f021 0103 	bic.w	r1, r1, #3
  4032e4:	1863      	adds	r3, r4, r1
  4032e6:	4293      	cmp	r3, r2
  4032e8:	f6ff af59 	blt.w	40319e <_realloc_r+0x5a>
  4032ec:	4656      	mov	r6, sl
  4032ee:	e7d8      	b.n	4032a2 <_realloc_r+0x15e>
  4032f0:	6841      	ldr	r1, [r0, #4]
  4032f2:	f021 0b03 	bic.w	fp, r1, #3
  4032f6:	44a3      	add	fp, r4
  4032f8:	f107 0010 	add.w	r0, r7, #16
  4032fc:	4583      	cmp	fp, r0
  4032fe:	da56      	bge.n	4033ae <_realloc_r+0x26a>
  403300:	f01e 0f01 	tst.w	lr, #1
  403304:	f47f af4b 	bne.w	40319e <_realloc_r+0x5a>
  403308:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40330c:	eba9 0a01 	sub.w	sl, r9, r1
  403310:	f8da 1004 	ldr.w	r1, [sl, #4]
  403314:	f021 0103 	bic.w	r1, r1, #3
  403318:	448b      	add	fp, r1
  40331a:	4558      	cmp	r0, fp
  40331c:	dce2      	bgt.n	4032e4 <_realloc_r+0x1a0>
  40331e:	4656      	mov	r6, sl
  403320:	f8da 100c 	ldr.w	r1, [sl, #12]
  403324:	f856 0f08 	ldr.w	r0, [r6, #8]!
  403328:	1f22      	subs	r2, r4, #4
  40332a:	2a24      	cmp	r2, #36	; 0x24
  40332c:	60c1      	str	r1, [r0, #12]
  40332e:	6088      	str	r0, [r1, #8]
  403330:	f200 808f 	bhi.w	403452 <_realloc_r+0x30e>
  403334:	2a13      	cmp	r2, #19
  403336:	f240 808a 	bls.w	40344e <_realloc_r+0x30a>
  40333a:	6829      	ldr	r1, [r5, #0]
  40333c:	f8ca 1008 	str.w	r1, [sl, #8]
  403340:	6869      	ldr	r1, [r5, #4]
  403342:	f8ca 100c 	str.w	r1, [sl, #12]
  403346:	2a1b      	cmp	r2, #27
  403348:	f200 808a 	bhi.w	403460 <_realloc_r+0x31c>
  40334c:	3508      	adds	r5, #8
  40334e:	f10a 0210 	add.w	r2, sl, #16
  403352:	6829      	ldr	r1, [r5, #0]
  403354:	6011      	str	r1, [r2, #0]
  403356:	6869      	ldr	r1, [r5, #4]
  403358:	6051      	str	r1, [r2, #4]
  40335a:	68a9      	ldr	r1, [r5, #8]
  40335c:	6091      	str	r1, [r2, #8]
  40335e:	eb0a 0107 	add.w	r1, sl, r7
  403362:	ebab 0207 	sub.w	r2, fp, r7
  403366:	f042 0201 	orr.w	r2, r2, #1
  40336a:	6099      	str	r1, [r3, #8]
  40336c:	604a      	str	r2, [r1, #4]
  40336e:	f8da 3004 	ldr.w	r3, [sl, #4]
  403372:	f003 0301 	and.w	r3, r3, #1
  403376:	431f      	orrs	r7, r3
  403378:	4640      	mov	r0, r8
  40337a:	f8ca 7004 	str.w	r7, [sl, #4]
  40337e:	f7ff fedb 	bl	403138 <__malloc_unlock>
  403382:	e751      	b.n	403228 <_realloc_r+0xe4>
  403384:	682b      	ldr	r3, [r5, #0]
  403386:	6003      	str	r3, [r0, #0]
  403388:	686b      	ldr	r3, [r5, #4]
  40338a:	6043      	str	r3, [r0, #4]
  40338c:	2a1b      	cmp	r2, #27
  40338e:	d82d      	bhi.n	4033ec <_realloc_r+0x2a8>
  403390:	f100 0308 	add.w	r3, r0, #8
  403394:	f105 0208 	add.w	r2, r5, #8
  403398:	e71b      	b.n	4031d2 <_realloc_r+0x8e>
  40339a:	4632      	mov	r2, r6
  40339c:	6829      	ldr	r1, [r5, #0]
  40339e:	6011      	str	r1, [r2, #0]
  4033a0:	6869      	ldr	r1, [r5, #4]
  4033a2:	6051      	str	r1, [r2, #4]
  4033a4:	68a9      	ldr	r1, [r5, #8]
  4033a6:	6091      	str	r1, [r2, #8]
  4033a8:	461c      	mov	r4, r3
  4033aa:	46d1      	mov	r9, sl
  4033ac:	e72a      	b.n	403204 <_realloc_r+0xc0>
  4033ae:	eb09 0107 	add.w	r1, r9, r7
  4033b2:	ebab 0b07 	sub.w	fp, fp, r7
  4033b6:	f04b 0201 	orr.w	r2, fp, #1
  4033ba:	6099      	str	r1, [r3, #8]
  4033bc:	604a      	str	r2, [r1, #4]
  4033be:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4033c2:	f003 0301 	and.w	r3, r3, #1
  4033c6:	431f      	orrs	r7, r3
  4033c8:	4640      	mov	r0, r8
  4033ca:	f845 7c04 	str.w	r7, [r5, #-4]
  4033ce:	f7ff feb3 	bl	403138 <__malloc_unlock>
  4033d2:	462e      	mov	r6, r5
  4033d4:	e728      	b.n	403228 <_realloc_r+0xe4>
  4033d6:	4629      	mov	r1, r5
  4033d8:	f7ff fe44 	bl	403064 <memmove>
  4033dc:	e6ff      	b.n	4031de <_realloc_r+0x9a>
  4033de:	4629      	mov	r1, r5
  4033e0:	4630      	mov	r0, r6
  4033e2:	461c      	mov	r4, r3
  4033e4:	46d1      	mov	r9, sl
  4033e6:	f7ff fe3d 	bl	403064 <memmove>
  4033ea:	e70b      	b.n	403204 <_realloc_r+0xc0>
  4033ec:	68ab      	ldr	r3, [r5, #8]
  4033ee:	6083      	str	r3, [r0, #8]
  4033f0:	68eb      	ldr	r3, [r5, #12]
  4033f2:	60c3      	str	r3, [r0, #12]
  4033f4:	2a24      	cmp	r2, #36	; 0x24
  4033f6:	d017      	beq.n	403428 <_realloc_r+0x2e4>
  4033f8:	f100 0310 	add.w	r3, r0, #16
  4033fc:	f105 0210 	add.w	r2, r5, #16
  403400:	e6e7      	b.n	4031d2 <_realloc_r+0x8e>
  403402:	f850 3c04 	ldr.w	r3, [r0, #-4]
  403406:	f023 0303 	bic.w	r3, r3, #3
  40340a:	441c      	add	r4, r3
  40340c:	462e      	mov	r6, r5
  40340e:	e6f9      	b.n	403204 <_realloc_r+0xc0>
  403410:	68a9      	ldr	r1, [r5, #8]
  403412:	f8ca 1010 	str.w	r1, [sl, #16]
  403416:	68e9      	ldr	r1, [r5, #12]
  403418:	f8ca 1014 	str.w	r1, [sl, #20]
  40341c:	2a24      	cmp	r2, #36	; 0x24
  40341e:	d00c      	beq.n	40343a <_realloc_r+0x2f6>
  403420:	3510      	adds	r5, #16
  403422:	f10a 0218 	add.w	r2, sl, #24
  403426:	e7b9      	b.n	40339c <_realloc_r+0x258>
  403428:	692b      	ldr	r3, [r5, #16]
  40342a:	6103      	str	r3, [r0, #16]
  40342c:	696b      	ldr	r3, [r5, #20]
  40342e:	6143      	str	r3, [r0, #20]
  403430:	f105 0218 	add.w	r2, r5, #24
  403434:	f100 0318 	add.w	r3, r0, #24
  403438:	e6cb      	b.n	4031d2 <_realloc_r+0x8e>
  40343a:	692a      	ldr	r2, [r5, #16]
  40343c:	f8ca 2018 	str.w	r2, [sl, #24]
  403440:	696a      	ldr	r2, [r5, #20]
  403442:	f8ca 201c 	str.w	r2, [sl, #28]
  403446:	3518      	adds	r5, #24
  403448:	f10a 0220 	add.w	r2, sl, #32
  40344c:	e7a6      	b.n	40339c <_realloc_r+0x258>
  40344e:	4632      	mov	r2, r6
  403450:	e77f      	b.n	403352 <_realloc_r+0x20e>
  403452:	4629      	mov	r1, r5
  403454:	4630      	mov	r0, r6
  403456:	9301      	str	r3, [sp, #4]
  403458:	f7ff fe04 	bl	403064 <memmove>
  40345c:	9b01      	ldr	r3, [sp, #4]
  40345e:	e77e      	b.n	40335e <_realloc_r+0x21a>
  403460:	68a9      	ldr	r1, [r5, #8]
  403462:	f8ca 1010 	str.w	r1, [sl, #16]
  403466:	68e9      	ldr	r1, [r5, #12]
  403468:	f8ca 1014 	str.w	r1, [sl, #20]
  40346c:	2a24      	cmp	r2, #36	; 0x24
  40346e:	d003      	beq.n	403478 <_realloc_r+0x334>
  403470:	3510      	adds	r5, #16
  403472:	f10a 0218 	add.w	r2, sl, #24
  403476:	e76c      	b.n	403352 <_realloc_r+0x20e>
  403478:	692a      	ldr	r2, [r5, #16]
  40347a:	f8ca 2018 	str.w	r2, [sl, #24]
  40347e:	696a      	ldr	r2, [r5, #20]
  403480:	f8ca 201c 	str.w	r2, [sl, #28]
  403484:	3518      	adds	r5, #24
  403486:	f10a 0220 	add.w	r2, sl, #32
  40348a:	e762      	b.n	403352 <_realloc_r+0x20e>
  40348c:	204005a8 	.word	0x204005a8

00403490 <_sbrk_r>:
  403490:	b538      	push	{r3, r4, r5, lr}
  403492:	4c07      	ldr	r4, [pc, #28]	; (4034b0 <_sbrk_r+0x20>)
  403494:	2300      	movs	r3, #0
  403496:	4605      	mov	r5, r0
  403498:	4608      	mov	r0, r1
  40349a:	6023      	str	r3, [r4, #0]
  40349c:	f7fd faba 	bl	400a14 <_sbrk>
  4034a0:	1c43      	adds	r3, r0, #1
  4034a2:	d000      	beq.n	4034a6 <_sbrk_r+0x16>
  4034a4:	bd38      	pop	{r3, r4, r5, pc}
  4034a6:	6823      	ldr	r3, [r4, #0]
  4034a8:	2b00      	cmp	r3, #0
  4034aa:	d0fb      	beq.n	4034a4 <_sbrk_r+0x14>
  4034ac:	602b      	str	r3, [r5, #0]
  4034ae:	bd38      	pop	{r3, r4, r5, pc}
  4034b0:	20400ab0 	.word	0x20400ab0

004034b4 <__sread>:
  4034b4:	b510      	push	{r4, lr}
  4034b6:	460c      	mov	r4, r1
  4034b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4034bc:	f000 fa66 	bl	40398c <_read_r>
  4034c0:	2800      	cmp	r0, #0
  4034c2:	db03      	blt.n	4034cc <__sread+0x18>
  4034c4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4034c6:	4403      	add	r3, r0
  4034c8:	6523      	str	r3, [r4, #80]	; 0x50
  4034ca:	bd10      	pop	{r4, pc}
  4034cc:	89a3      	ldrh	r3, [r4, #12]
  4034ce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4034d2:	81a3      	strh	r3, [r4, #12]
  4034d4:	bd10      	pop	{r4, pc}
  4034d6:	bf00      	nop

004034d8 <__swrite>:
  4034d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4034dc:	4616      	mov	r6, r2
  4034de:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4034e2:	461f      	mov	r7, r3
  4034e4:	05d3      	lsls	r3, r2, #23
  4034e6:	460c      	mov	r4, r1
  4034e8:	4605      	mov	r5, r0
  4034ea:	d507      	bpl.n	4034fc <__swrite+0x24>
  4034ec:	2200      	movs	r2, #0
  4034ee:	2302      	movs	r3, #2
  4034f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4034f4:	f000 fa34 	bl	403960 <_lseek_r>
  4034f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4034fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403500:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  403504:	81a2      	strh	r2, [r4, #12]
  403506:	463b      	mov	r3, r7
  403508:	4632      	mov	r2, r6
  40350a:	4628      	mov	r0, r5
  40350c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403510:	f000 b914 	b.w	40373c <_write_r>

00403514 <__sseek>:
  403514:	b510      	push	{r4, lr}
  403516:	460c      	mov	r4, r1
  403518:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40351c:	f000 fa20 	bl	403960 <_lseek_r>
  403520:	89a3      	ldrh	r3, [r4, #12]
  403522:	1c42      	adds	r2, r0, #1
  403524:	bf0e      	itee	eq
  403526:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40352a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40352e:	6520      	strne	r0, [r4, #80]	; 0x50
  403530:	81a3      	strh	r3, [r4, #12]
  403532:	bd10      	pop	{r4, pc}

00403534 <__sclose>:
  403534:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403538:	f000 b978 	b.w	40382c <_close_r>
  40353c:	0000      	movs	r0, r0
	...

00403540 <strlen>:
  403540:	f890 f000 	pld	[r0]
  403544:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  403548:	f020 0107 	bic.w	r1, r0, #7
  40354c:	f06f 0c00 	mvn.w	ip, #0
  403550:	f010 0407 	ands.w	r4, r0, #7
  403554:	f891 f020 	pld	[r1, #32]
  403558:	f040 8049 	bne.w	4035ee <strlen+0xae>
  40355c:	f04f 0400 	mov.w	r4, #0
  403560:	f06f 0007 	mvn.w	r0, #7
  403564:	e9d1 2300 	ldrd	r2, r3, [r1]
  403568:	f891 f040 	pld	[r1, #64]	; 0x40
  40356c:	f100 0008 	add.w	r0, r0, #8
  403570:	fa82 f24c 	uadd8	r2, r2, ip
  403574:	faa4 f28c 	sel	r2, r4, ip
  403578:	fa83 f34c 	uadd8	r3, r3, ip
  40357c:	faa2 f38c 	sel	r3, r2, ip
  403580:	bb4b      	cbnz	r3, 4035d6 <strlen+0x96>
  403582:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  403586:	fa82 f24c 	uadd8	r2, r2, ip
  40358a:	f100 0008 	add.w	r0, r0, #8
  40358e:	faa4 f28c 	sel	r2, r4, ip
  403592:	fa83 f34c 	uadd8	r3, r3, ip
  403596:	faa2 f38c 	sel	r3, r2, ip
  40359a:	b9e3      	cbnz	r3, 4035d6 <strlen+0x96>
  40359c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4035a0:	fa82 f24c 	uadd8	r2, r2, ip
  4035a4:	f100 0008 	add.w	r0, r0, #8
  4035a8:	faa4 f28c 	sel	r2, r4, ip
  4035ac:	fa83 f34c 	uadd8	r3, r3, ip
  4035b0:	faa2 f38c 	sel	r3, r2, ip
  4035b4:	b97b      	cbnz	r3, 4035d6 <strlen+0x96>
  4035b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4035ba:	f101 0120 	add.w	r1, r1, #32
  4035be:	fa82 f24c 	uadd8	r2, r2, ip
  4035c2:	f100 0008 	add.w	r0, r0, #8
  4035c6:	faa4 f28c 	sel	r2, r4, ip
  4035ca:	fa83 f34c 	uadd8	r3, r3, ip
  4035ce:	faa2 f38c 	sel	r3, r2, ip
  4035d2:	2b00      	cmp	r3, #0
  4035d4:	d0c6      	beq.n	403564 <strlen+0x24>
  4035d6:	2a00      	cmp	r2, #0
  4035d8:	bf04      	itt	eq
  4035da:	3004      	addeq	r0, #4
  4035dc:	461a      	moveq	r2, r3
  4035de:	ba12      	rev	r2, r2
  4035e0:	fab2 f282 	clz	r2, r2
  4035e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4035e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4035ec:	4770      	bx	lr
  4035ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4035f2:	f004 0503 	and.w	r5, r4, #3
  4035f6:	f1c4 0000 	rsb	r0, r4, #0
  4035fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4035fe:	f014 0f04 	tst.w	r4, #4
  403602:	f891 f040 	pld	[r1, #64]	; 0x40
  403606:	fa0c f505 	lsl.w	r5, ip, r5
  40360a:	ea62 0205 	orn	r2, r2, r5
  40360e:	bf1c      	itt	ne
  403610:	ea63 0305 	ornne	r3, r3, r5
  403614:	4662      	movne	r2, ip
  403616:	f04f 0400 	mov.w	r4, #0
  40361a:	e7a9      	b.n	403570 <strlen+0x30>

0040361c <__swbuf_r>:
  40361c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40361e:	460d      	mov	r5, r1
  403620:	4614      	mov	r4, r2
  403622:	4606      	mov	r6, r0
  403624:	b110      	cbz	r0, 40362c <__swbuf_r+0x10>
  403626:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403628:	2b00      	cmp	r3, #0
  40362a:	d04b      	beq.n	4036c4 <__swbuf_r+0xa8>
  40362c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403630:	69a3      	ldr	r3, [r4, #24]
  403632:	60a3      	str	r3, [r4, #8]
  403634:	b291      	uxth	r1, r2
  403636:	0708      	lsls	r0, r1, #28
  403638:	d539      	bpl.n	4036ae <__swbuf_r+0x92>
  40363a:	6923      	ldr	r3, [r4, #16]
  40363c:	2b00      	cmp	r3, #0
  40363e:	d036      	beq.n	4036ae <__swbuf_r+0x92>
  403640:	b2ed      	uxtb	r5, r5
  403642:	0489      	lsls	r1, r1, #18
  403644:	462f      	mov	r7, r5
  403646:	d515      	bpl.n	403674 <__swbuf_r+0x58>
  403648:	6822      	ldr	r2, [r4, #0]
  40364a:	6961      	ldr	r1, [r4, #20]
  40364c:	1ad3      	subs	r3, r2, r3
  40364e:	428b      	cmp	r3, r1
  403650:	da1c      	bge.n	40368c <__swbuf_r+0x70>
  403652:	3301      	adds	r3, #1
  403654:	68a1      	ldr	r1, [r4, #8]
  403656:	1c50      	adds	r0, r2, #1
  403658:	3901      	subs	r1, #1
  40365a:	60a1      	str	r1, [r4, #8]
  40365c:	6020      	str	r0, [r4, #0]
  40365e:	7015      	strb	r5, [r2, #0]
  403660:	6962      	ldr	r2, [r4, #20]
  403662:	429a      	cmp	r2, r3
  403664:	d01a      	beq.n	40369c <__swbuf_r+0x80>
  403666:	89a3      	ldrh	r3, [r4, #12]
  403668:	07db      	lsls	r3, r3, #31
  40366a:	d501      	bpl.n	403670 <__swbuf_r+0x54>
  40366c:	2d0a      	cmp	r5, #10
  40366e:	d015      	beq.n	40369c <__swbuf_r+0x80>
  403670:	4638      	mov	r0, r7
  403672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403674:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403676:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40367a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40367e:	81a2      	strh	r2, [r4, #12]
  403680:	6822      	ldr	r2, [r4, #0]
  403682:	6661      	str	r1, [r4, #100]	; 0x64
  403684:	6961      	ldr	r1, [r4, #20]
  403686:	1ad3      	subs	r3, r2, r3
  403688:	428b      	cmp	r3, r1
  40368a:	dbe2      	blt.n	403652 <__swbuf_r+0x36>
  40368c:	4621      	mov	r1, r4
  40368e:	4630      	mov	r0, r6
  403690:	f7fe fc9c 	bl	401fcc <_fflush_r>
  403694:	b940      	cbnz	r0, 4036a8 <__swbuf_r+0x8c>
  403696:	6822      	ldr	r2, [r4, #0]
  403698:	2301      	movs	r3, #1
  40369a:	e7db      	b.n	403654 <__swbuf_r+0x38>
  40369c:	4621      	mov	r1, r4
  40369e:	4630      	mov	r0, r6
  4036a0:	f7fe fc94 	bl	401fcc <_fflush_r>
  4036a4:	2800      	cmp	r0, #0
  4036a6:	d0e3      	beq.n	403670 <__swbuf_r+0x54>
  4036a8:	f04f 37ff 	mov.w	r7, #4294967295
  4036ac:	e7e0      	b.n	403670 <__swbuf_r+0x54>
  4036ae:	4621      	mov	r1, r4
  4036b0:	4630      	mov	r0, r6
  4036b2:	f7fe fb77 	bl	401da4 <__swsetup_r>
  4036b6:	2800      	cmp	r0, #0
  4036b8:	d1f6      	bne.n	4036a8 <__swbuf_r+0x8c>
  4036ba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4036be:	6923      	ldr	r3, [r4, #16]
  4036c0:	b291      	uxth	r1, r2
  4036c2:	e7bd      	b.n	403640 <__swbuf_r+0x24>
  4036c4:	f7fe fcda 	bl	40207c <__sinit>
  4036c8:	e7b0      	b.n	40362c <__swbuf_r+0x10>
  4036ca:	bf00      	nop

004036cc <_wcrtomb_r>:
  4036cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4036ce:	4606      	mov	r6, r0
  4036d0:	b085      	sub	sp, #20
  4036d2:	461f      	mov	r7, r3
  4036d4:	b189      	cbz	r1, 4036fa <_wcrtomb_r+0x2e>
  4036d6:	4c10      	ldr	r4, [pc, #64]	; (403718 <_wcrtomb_r+0x4c>)
  4036d8:	4d10      	ldr	r5, [pc, #64]	; (40371c <_wcrtomb_r+0x50>)
  4036da:	6824      	ldr	r4, [r4, #0]
  4036dc:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4036de:	2c00      	cmp	r4, #0
  4036e0:	bf08      	it	eq
  4036e2:	462c      	moveq	r4, r5
  4036e4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  4036e8:	47a0      	blx	r4
  4036ea:	1c43      	adds	r3, r0, #1
  4036ec:	d103      	bne.n	4036f6 <_wcrtomb_r+0x2a>
  4036ee:	2200      	movs	r2, #0
  4036f0:	238a      	movs	r3, #138	; 0x8a
  4036f2:	603a      	str	r2, [r7, #0]
  4036f4:	6033      	str	r3, [r6, #0]
  4036f6:	b005      	add	sp, #20
  4036f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4036fa:	460c      	mov	r4, r1
  4036fc:	4906      	ldr	r1, [pc, #24]	; (403718 <_wcrtomb_r+0x4c>)
  4036fe:	4a07      	ldr	r2, [pc, #28]	; (40371c <_wcrtomb_r+0x50>)
  403700:	6809      	ldr	r1, [r1, #0]
  403702:	6b49      	ldr	r1, [r1, #52]	; 0x34
  403704:	2900      	cmp	r1, #0
  403706:	bf08      	it	eq
  403708:	4611      	moveq	r1, r2
  40370a:	4622      	mov	r2, r4
  40370c:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  403710:	a901      	add	r1, sp, #4
  403712:	47a0      	blx	r4
  403714:	e7e9      	b.n	4036ea <_wcrtomb_r+0x1e>
  403716:	bf00      	nop
  403718:	20400008 	.word	0x20400008
  40371c:	2040043c 	.word	0x2040043c

00403720 <__ascii_wctomb>:
  403720:	b121      	cbz	r1, 40372c <__ascii_wctomb+0xc>
  403722:	2aff      	cmp	r2, #255	; 0xff
  403724:	d804      	bhi.n	403730 <__ascii_wctomb+0x10>
  403726:	700a      	strb	r2, [r1, #0]
  403728:	2001      	movs	r0, #1
  40372a:	4770      	bx	lr
  40372c:	4608      	mov	r0, r1
  40372e:	4770      	bx	lr
  403730:	238a      	movs	r3, #138	; 0x8a
  403732:	6003      	str	r3, [r0, #0]
  403734:	f04f 30ff 	mov.w	r0, #4294967295
  403738:	4770      	bx	lr
  40373a:	bf00      	nop

0040373c <_write_r>:
  40373c:	b570      	push	{r4, r5, r6, lr}
  40373e:	460d      	mov	r5, r1
  403740:	4c08      	ldr	r4, [pc, #32]	; (403764 <_write_r+0x28>)
  403742:	4611      	mov	r1, r2
  403744:	4606      	mov	r6, r0
  403746:	461a      	mov	r2, r3
  403748:	4628      	mov	r0, r5
  40374a:	2300      	movs	r3, #0
  40374c:	6023      	str	r3, [r4, #0]
  40374e:	f7fc fd97 	bl	400280 <_write>
  403752:	1c43      	adds	r3, r0, #1
  403754:	d000      	beq.n	403758 <_write_r+0x1c>
  403756:	bd70      	pop	{r4, r5, r6, pc}
  403758:	6823      	ldr	r3, [r4, #0]
  40375a:	2b00      	cmp	r3, #0
  40375c:	d0fb      	beq.n	403756 <_write_r+0x1a>
  40375e:	6033      	str	r3, [r6, #0]
  403760:	bd70      	pop	{r4, r5, r6, pc}
  403762:	bf00      	nop
  403764:	20400ab0 	.word	0x20400ab0

00403768 <__register_exitproc>:
  403768:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40376c:	4d2c      	ldr	r5, [pc, #176]	; (403820 <__register_exitproc+0xb8>)
  40376e:	4606      	mov	r6, r0
  403770:	6828      	ldr	r0, [r5, #0]
  403772:	4698      	mov	r8, r3
  403774:	460f      	mov	r7, r1
  403776:	4691      	mov	r9, r2
  403778:	f7ff f840 	bl	4027fc <__retarget_lock_acquire_recursive>
  40377c:	4b29      	ldr	r3, [pc, #164]	; (403824 <__register_exitproc+0xbc>)
  40377e:	681c      	ldr	r4, [r3, #0]
  403780:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  403784:	2b00      	cmp	r3, #0
  403786:	d03e      	beq.n	403806 <__register_exitproc+0x9e>
  403788:	685a      	ldr	r2, [r3, #4]
  40378a:	2a1f      	cmp	r2, #31
  40378c:	dc1c      	bgt.n	4037c8 <__register_exitproc+0x60>
  40378e:	f102 0e01 	add.w	lr, r2, #1
  403792:	b176      	cbz	r6, 4037b2 <__register_exitproc+0x4a>
  403794:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  403798:	2401      	movs	r4, #1
  40379a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40379e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4037a2:	4094      	lsls	r4, r2
  4037a4:	4320      	orrs	r0, r4
  4037a6:	2e02      	cmp	r6, #2
  4037a8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4037ac:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4037b0:	d023      	beq.n	4037fa <__register_exitproc+0x92>
  4037b2:	3202      	adds	r2, #2
  4037b4:	f8c3 e004 	str.w	lr, [r3, #4]
  4037b8:	6828      	ldr	r0, [r5, #0]
  4037ba:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4037be:	f7ff f81f 	bl	402800 <__retarget_lock_release_recursive>
  4037c2:	2000      	movs	r0, #0
  4037c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4037c8:	4b17      	ldr	r3, [pc, #92]	; (403828 <__register_exitproc+0xc0>)
  4037ca:	b30b      	cbz	r3, 403810 <__register_exitproc+0xa8>
  4037cc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4037d0:	f7ff f890 	bl	4028f4 <malloc>
  4037d4:	4603      	mov	r3, r0
  4037d6:	b1d8      	cbz	r0, 403810 <__register_exitproc+0xa8>
  4037d8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4037dc:	6002      	str	r2, [r0, #0]
  4037de:	2100      	movs	r1, #0
  4037e0:	6041      	str	r1, [r0, #4]
  4037e2:	460a      	mov	r2, r1
  4037e4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4037e8:	f04f 0e01 	mov.w	lr, #1
  4037ec:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4037f0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4037f4:	2e00      	cmp	r6, #0
  4037f6:	d0dc      	beq.n	4037b2 <__register_exitproc+0x4a>
  4037f8:	e7cc      	b.n	403794 <__register_exitproc+0x2c>
  4037fa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4037fe:	430c      	orrs	r4, r1
  403800:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  403804:	e7d5      	b.n	4037b2 <__register_exitproc+0x4a>
  403806:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40380a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40380e:	e7bb      	b.n	403788 <__register_exitproc+0x20>
  403810:	6828      	ldr	r0, [r5, #0]
  403812:	f7fe fff5 	bl	402800 <__retarget_lock_release_recursive>
  403816:	f04f 30ff 	mov.w	r0, #4294967295
  40381a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40381e:	bf00      	nop
  403820:	20400438 	.word	0x20400438
  403824:	00403d40 	.word	0x00403d40
  403828:	004028f5 	.word	0x004028f5

0040382c <_close_r>:
  40382c:	b538      	push	{r3, r4, r5, lr}
  40382e:	4c07      	ldr	r4, [pc, #28]	; (40384c <_close_r+0x20>)
  403830:	2300      	movs	r3, #0
  403832:	4605      	mov	r5, r0
  403834:	4608      	mov	r0, r1
  403836:	6023      	str	r3, [r4, #0]
  403838:	f7fd f908 	bl	400a4c <_close>
  40383c:	1c43      	adds	r3, r0, #1
  40383e:	d000      	beq.n	403842 <_close_r+0x16>
  403840:	bd38      	pop	{r3, r4, r5, pc}
  403842:	6823      	ldr	r3, [r4, #0]
  403844:	2b00      	cmp	r3, #0
  403846:	d0fb      	beq.n	403840 <_close_r+0x14>
  403848:	602b      	str	r3, [r5, #0]
  40384a:	bd38      	pop	{r3, r4, r5, pc}
  40384c:	20400ab0 	.word	0x20400ab0

00403850 <_fclose_r>:
  403850:	b570      	push	{r4, r5, r6, lr}
  403852:	b159      	cbz	r1, 40386c <_fclose_r+0x1c>
  403854:	4605      	mov	r5, r0
  403856:	460c      	mov	r4, r1
  403858:	b110      	cbz	r0, 403860 <_fclose_r+0x10>
  40385a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40385c:	2b00      	cmp	r3, #0
  40385e:	d03c      	beq.n	4038da <_fclose_r+0x8a>
  403860:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403862:	07d8      	lsls	r0, r3, #31
  403864:	d505      	bpl.n	403872 <_fclose_r+0x22>
  403866:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40386a:	b92b      	cbnz	r3, 403878 <_fclose_r+0x28>
  40386c:	2600      	movs	r6, #0
  40386e:	4630      	mov	r0, r6
  403870:	bd70      	pop	{r4, r5, r6, pc}
  403872:	89a3      	ldrh	r3, [r4, #12]
  403874:	0599      	lsls	r1, r3, #22
  403876:	d53c      	bpl.n	4038f2 <_fclose_r+0xa2>
  403878:	4621      	mov	r1, r4
  40387a:	4628      	mov	r0, r5
  40387c:	f7fe fb06 	bl	401e8c <__sflush_r>
  403880:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  403882:	4606      	mov	r6, r0
  403884:	b133      	cbz	r3, 403894 <_fclose_r+0x44>
  403886:	69e1      	ldr	r1, [r4, #28]
  403888:	4628      	mov	r0, r5
  40388a:	4798      	blx	r3
  40388c:	2800      	cmp	r0, #0
  40388e:	bfb8      	it	lt
  403890:	f04f 36ff 	movlt.w	r6, #4294967295
  403894:	89a3      	ldrh	r3, [r4, #12]
  403896:	061a      	lsls	r2, r3, #24
  403898:	d422      	bmi.n	4038e0 <_fclose_r+0x90>
  40389a:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40389c:	b141      	cbz	r1, 4038b0 <_fclose_r+0x60>
  40389e:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4038a2:	4299      	cmp	r1, r3
  4038a4:	d002      	beq.n	4038ac <_fclose_r+0x5c>
  4038a6:	4628      	mov	r0, r5
  4038a8:	f7fe fd0e 	bl	4022c8 <_free_r>
  4038ac:	2300      	movs	r3, #0
  4038ae:	6323      	str	r3, [r4, #48]	; 0x30
  4038b0:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4038b2:	b121      	cbz	r1, 4038be <_fclose_r+0x6e>
  4038b4:	4628      	mov	r0, r5
  4038b6:	f7fe fd07 	bl	4022c8 <_free_r>
  4038ba:	2300      	movs	r3, #0
  4038bc:	6463      	str	r3, [r4, #68]	; 0x44
  4038be:	f7fe fc09 	bl	4020d4 <__sfp_lock_acquire>
  4038c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4038c4:	2200      	movs	r2, #0
  4038c6:	07db      	lsls	r3, r3, #31
  4038c8:	81a2      	strh	r2, [r4, #12]
  4038ca:	d50e      	bpl.n	4038ea <_fclose_r+0x9a>
  4038cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4038ce:	f7fe ff93 	bl	4027f8 <__retarget_lock_close_recursive>
  4038d2:	f7fe fc05 	bl	4020e0 <__sfp_lock_release>
  4038d6:	4630      	mov	r0, r6
  4038d8:	bd70      	pop	{r4, r5, r6, pc}
  4038da:	f7fe fbcf 	bl	40207c <__sinit>
  4038de:	e7bf      	b.n	403860 <_fclose_r+0x10>
  4038e0:	6921      	ldr	r1, [r4, #16]
  4038e2:	4628      	mov	r0, r5
  4038e4:	f7fe fcf0 	bl	4022c8 <_free_r>
  4038e8:	e7d7      	b.n	40389a <_fclose_r+0x4a>
  4038ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4038ec:	f7fe ff88 	bl	402800 <__retarget_lock_release_recursive>
  4038f0:	e7ec      	b.n	4038cc <_fclose_r+0x7c>
  4038f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4038f4:	f7fe ff82 	bl	4027fc <__retarget_lock_acquire_recursive>
  4038f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4038fc:	2b00      	cmp	r3, #0
  4038fe:	d1bb      	bne.n	403878 <_fclose_r+0x28>
  403900:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403902:	f016 0601 	ands.w	r6, r6, #1
  403906:	d1b1      	bne.n	40386c <_fclose_r+0x1c>
  403908:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40390a:	f7fe ff79 	bl	402800 <__retarget_lock_release_recursive>
  40390e:	4630      	mov	r0, r6
  403910:	bd70      	pop	{r4, r5, r6, pc}
  403912:	bf00      	nop

00403914 <_fstat_r>:
  403914:	b538      	push	{r3, r4, r5, lr}
  403916:	460b      	mov	r3, r1
  403918:	4c07      	ldr	r4, [pc, #28]	; (403938 <_fstat_r+0x24>)
  40391a:	4605      	mov	r5, r0
  40391c:	4611      	mov	r1, r2
  40391e:	4618      	mov	r0, r3
  403920:	2300      	movs	r3, #0
  403922:	6023      	str	r3, [r4, #0]
  403924:	f7fd f895 	bl	400a52 <_fstat>
  403928:	1c43      	adds	r3, r0, #1
  40392a:	d000      	beq.n	40392e <_fstat_r+0x1a>
  40392c:	bd38      	pop	{r3, r4, r5, pc}
  40392e:	6823      	ldr	r3, [r4, #0]
  403930:	2b00      	cmp	r3, #0
  403932:	d0fb      	beq.n	40392c <_fstat_r+0x18>
  403934:	602b      	str	r3, [r5, #0]
  403936:	bd38      	pop	{r3, r4, r5, pc}
  403938:	20400ab0 	.word	0x20400ab0

0040393c <_isatty_r>:
  40393c:	b538      	push	{r3, r4, r5, lr}
  40393e:	4c07      	ldr	r4, [pc, #28]	; (40395c <_isatty_r+0x20>)
  403940:	2300      	movs	r3, #0
  403942:	4605      	mov	r5, r0
  403944:	4608      	mov	r0, r1
  403946:	6023      	str	r3, [r4, #0]
  403948:	f7fd f888 	bl	400a5c <_isatty>
  40394c:	1c43      	adds	r3, r0, #1
  40394e:	d000      	beq.n	403952 <_isatty_r+0x16>
  403950:	bd38      	pop	{r3, r4, r5, pc}
  403952:	6823      	ldr	r3, [r4, #0]
  403954:	2b00      	cmp	r3, #0
  403956:	d0fb      	beq.n	403950 <_isatty_r+0x14>
  403958:	602b      	str	r3, [r5, #0]
  40395a:	bd38      	pop	{r3, r4, r5, pc}
  40395c:	20400ab0 	.word	0x20400ab0

00403960 <_lseek_r>:
  403960:	b570      	push	{r4, r5, r6, lr}
  403962:	460d      	mov	r5, r1
  403964:	4c08      	ldr	r4, [pc, #32]	; (403988 <_lseek_r+0x28>)
  403966:	4611      	mov	r1, r2
  403968:	4606      	mov	r6, r0
  40396a:	461a      	mov	r2, r3
  40396c:	4628      	mov	r0, r5
  40396e:	2300      	movs	r3, #0
  403970:	6023      	str	r3, [r4, #0]
  403972:	f7fd f875 	bl	400a60 <_lseek>
  403976:	1c43      	adds	r3, r0, #1
  403978:	d000      	beq.n	40397c <_lseek_r+0x1c>
  40397a:	bd70      	pop	{r4, r5, r6, pc}
  40397c:	6823      	ldr	r3, [r4, #0]
  40397e:	2b00      	cmp	r3, #0
  403980:	d0fb      	beq.n	40397a <_lseek_r+0x1a>
  403982:	6033      	str	r3, [r6, #0]
  403984:	bd70      	pop	{r4, r5, r6, pc}
  403986:	bf00      	nop
  403988:	20400ab0 	.word	0x20400ab0

0040398c <_read_r>:
  40398c:	b570      	push	{r4, r5, r6, lr}
  40398e:	460d      	mov	r5, r1
  403990:	4c08      	ldr	r4, [pc, #32]	; (4039b4 <_read_r+0x28>)
  403992:	4611      	mov	r1, r2
  403994:	4606      	mov	r6, r0
  403996:	461a      	mov	r2, r3
  403998:	4628      	mov	r0, r5
  40399a:	2300      	movs	r3, #0
  40399c:	6023      	str	r3, [r4, #0]
  40399e:	f7fc fc51 	bl	400244 <_read>
  4039a2:	1c43      	adds	r3, r0, #1
  4039a4:	d000      	beq.n	4039a8 <_read_r+0x1c>
  4039a6:	bd70      	pop	{r4, r5, r6, pc}
  4039a8:	6823      	ldr	r3, [r4, #0]
  4039aa:	2b00      	cmp	r3, #0
  4039ac:	d0fb      	beq.n	4039a6 <_read_r+0x1a>
  4039ae:	6033      	str	r3, [r6, #0]
  4039b0:	bd70      	pop	{r4, r5, r6, pc}
  4039b2:	bf00      	nop
  4039b4:	20400ab0 	.word	0x20400ab0

004039b8 <__aeabi_uldivmod>:
  4039b8:	b953      	cbnz	r3, 4039d0 <__aeabi_uldivmod+0x18>
  4039ba:	b94a      	cbnz	r2, 4039d0 <__aeabi_uldivmod+0x18>
  4039bc:	2900      	cmp	r1, #0
  4039be:	bf08      	it	eq
  4039c0:	2800      	cmpeq	r0, #0
  4039c2:	bf1c      	itt	ne
  4039c4:	f04f 31ff 	movne.w	r1, #4294967295
  4039c8:	f04f 30ff 	movne.w	r0, #4294967295
  4039cc:	f000 b97a 	b.w	403cc4 <__aeabi_idiv0>
  4039d0:	f1ad 0c08 	sub.w	ip, sp, #8
  4039d4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4039d8:	f000 f806 	bl	4039e8 <__udivmoddi4>
  4039dc:	f8dd e004 	ldr.w	lr, [sp, #4]
  4039e0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4039e4:	b004      	add	sp, #16
  4039e6:	4770      	bx	lr

004039e8 <__udivmoddi4>:
  4039e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4039ec:	468c      	mov	ip, r1
  4039ee:	460d      	mov	r5, r1
  4039f0:	4604      	mov	r4, r0
  4039f2:	9e08      	ldr	r6, [sp, #32]
  4039f4:	2b00      	cmp	r3, #0
  4039f6:	d151      	bne.n	403a9c <__udivmoddi4+0xb4>
  4039f8:	428a      	cmp	r2, r1
  4039fa:	4617      	mov	r7, r2
  4039fc:	d96d      	bls.n	403ada <__udivmoddi4+0xf2>
  4039fe:	fab2 fe82 	clz	lr, r2
  403a02:	f1be 0f00 	cmp.w	lr, #0
  403a06:	d00b      	beq.n	403a20 <__udivmoddi4+0x38>
  403a08:	f1ce 0c20 	rsb	ip, lr, #32
  403a0c:	fa01 f50e 	lsl.w	r5, r1, lr
  403a10:	fa20 fc0c 	lsr.w	ip, r0, ip
  403a14:	fa02 f70e 	lsl.w	r7, r2, lr
  403a18:	ea4c 0c05 	orr.w	ip, ip, r5
  403a1c:	fa00 f40e 	lsl.w	r4, r0, lr
  403a20:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  403a24:	0c25      	lsrs	r5, r4, #16
  403a26:	fbbc f8fa 	udiv	r8, ip, sl
  403a2a:	fa1f f987 	uxth.w	r9, r7
  403a2e:	fb0a cc18 	mls	ip, sl, r8, ip
  403a32:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  403a36:	fb08 f309 	mul.w	r3, r8, r9
  403a3a:	42ab      	cmp	r3, r5
  403a3c:	d90a      	bls.n	403a54 <__udivmoddi4+0x6c>
  403a3e:	19ed      	adds	r5, r5, r7
  403a40:	f108 32ff 	add.w	r2, r8, #4294967295
  403a44:	f080 8123 	bcs.w	403c8e <__udivmoddi4+0x2a6>
  403a48:	42ab      	cmp	r3, r5
  403a4a:	f240 8120 	bls.w	403c8e <__udivmoddi4+0x2a6>
  403a4e:	f1a8 0802 	sub.w	r8, r8, #2
  403a52:	443d      	add	r5, r7
  403a54:	1aed      	subs	r5, r5, r3
  403a56:	b2a4      	uxth	r4, r4
  403a58:	fbb5 f0fa 	udiv	r0, r5, sl
  403a5c:	fb0a 5510 	mls	r5, sl, r0, r5
  403a60:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  403a64:	fb00 f909 	mul.w	r9, r0, r9
  403a68:	45a1      	cmp	r9, r4
  403a6a:	d909      	bls.n	403a80 <__udivmoddi4+0x98>
  403a6c:	19e4      	adds	r4, r4, r7
  403a6e:	f100 33ff 	add.w	r3, r0, #4294967295
  403a72:	f080 810a 	bcs.w	403c8a <__udivmoddi4+0x2a2>
  403a76:	45a1      	cmp	r9, r4
  403a78:	f240 8107 	bls.w	403c8a <__udivmoddi4+0x2a2>
  403a7c:	3802      	subs	r0, #2
  403a7e:	443c      	add	r4, r7
  403a80:	eba4 0409 	sub.w	r4, r4, r9
  403a84:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403a88:	2100      	movs	r1, #0
  403a8a:	2e00      	cmp	r6, #0
  403a8c:	d061      	beq.n	403b52 <__udivmoddi4+0x16a>
  403a8e:	fa24 f40e 	lsr.w	r4, r4, lr
  403a92:	2300      	movs	r3, #0
  403a94:	6034      	str	r4, [r6, #0]
  403a96:	6073      	str	r3, [r6, #4]
  403a98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403a9c:	428b      	cmp	r3, r1
  403a9e:	d907      	bls.n	403ab0 <__udivmoddi4+0xc8>
  403aa0:	2e00      	cmp	r6, #0
  403aa2:	d054      	beq.n	403b4e <__udivmoddi4+0x166>
  403aa4:	2100      	movs	r1, #0
  403aa6:	e886 0021 	stmia.w	r6, {r0, r5}
  403aaa:	4608      	mov	r0, r1
  403aac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403ab0:	fab3 f183 	clz	r1, r3
  403ab4:	2900      	cmp	r1, #0
  403ab6:	f040 808e 	bne.w	403bd6 <__udivmoddi4+0x1ee>
  403aba:	42ab      	cmp	r3, r5
  403abc:	d302      	bcc.n	403ac4 <__udivmoddi4+0xdc>
  403abe:	4282      	cmp	r2, r0
  403ac0:	f200 80fa 	bhi.w	403cb8 <__udivmoddi4+0x2d0>
  403ac4:	1a84      	subs	r4, r0, r2
  403ac6:	eb65 0503 	sbc.w	r5, r5, r3
  403aca:	2001      	movs	r0, #1
  403acc:	46ac      	mov	ip, r5
  403ace:	2e00      	cmp	r6, #0
  403ad0:	d03f      	beq.n	403b52 <__udivmoddi4+0x16a>
  403ad2:	e886 1010 	stmia.w	r6, {r4, ip}
  403ad6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403ada:	b912      	cbnz	r2, 403ae2 <__udivmoddi4+0xfa>
  403adc:	2701      	movs	r7, #1
  403ade:	fbb7 f7f2 	udiv	r7, r7, r2
  403ae2:	fab7 fe87 	clz	lr, r7
  403ae6:	f1be 0f00 	cmp.w	lr, #0
  403aea:	d134      	bne.n	403b56 <__udivmoddi4+0x16e>
  403aec:	1beb      	subs	r3, r5, r7
  403aee:	0c3a      	lsrs	r2, r7, #16
  403af0:	fa1f fc87 	uxth.w	ip, r7
  403af4:	2101      	movs	r1, #1
  403af6:	fbb3 f8f2 	udiv	r8, r3, r2
  403afa:	0c25      	lsrs	r5, r4, #16
  403afc:	fb02 3318 	mls	r3, r2, r8, r3
  403b00:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403b04:	fb0c f308 	mul.w	r3, ip, r8
  403b08:	42ab      	cmp	r3, r5
  403b0a:	d907      	bls.n	403b1c <__udivmoddi4+0x134>
  403b0c:	19ed      	adds	r5, r5, r7
  403b0e:	f108 30ff 	add.w	r0, r8, #4294967295
  403b12:	d202      	bcs.n	403b1a <__udivmoddi4+0x132>
  403b14:	42ab      	cmp	r3, r5
  403b16:	f200 80d1 	bhi.w	403cbc <__udivmoddi4+0x2d4>
  403b1a:	4680      	mov	r8, r0
  403b1c:	1aed      	subs	r5, r5, r3
  403b1e:	b2a3      	uxth	r3, r4
  403b20:	fbb5 f0f2 	udiv	r0, r5, r2
  403b24:	fb02 5510 	mls	r5, r2, r0, r5
  403b28:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  403b2c:	fb0c fc00 	mul.w	ip, ip, r0
  403b30:	45a4      	cmp	ip, r4
  403b32:	d907      	bls.n	403b44 <__udivmoddi4+0x15c>
  403b34:	19e4      	adds	r4, r4, r7
  403b36:	f100 33ff 	add.w	r3, r0, #4294967295
  403b3a:	d202      	bcs.n	403b42 <__udivmoddi4+0x15a>
  403b3c:	45a4      	cmp	ip, r4
  403b3e:	f200 80b8 	bhi.w	403cb2 <__udivmoddi4+0x2ca>
  403b42:	4618      	mov	r0, r3
  403b44:	eba4 040c 	sub.w	r4, r4, ip
  403b48:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403b4c:	e79d      	b.n	403a8a <__udivmoddi4+0xa2>
  403b4e:	4631      	mov	r1, r6
  403b50:	4630      	mov	r0, r6
  403b52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403b56:	f1ce 0420 	rsb	r4, lr, #32
  403b5a:	fa05 f30e 	lsl.w	r3, r5, lr
  403b5e:	fa07 f70e 	lsl.w	r7, r7, lr
  403b62:	fa20 f804 	lsr.w	r8, r0, r4
  403b66:	0c3a      	lsrs	r2, r7, #16
  403b68:	fa25 f404 	lsr.w	r4, r5, r4
  403b6c:	ea48 0803 	orr.w	r8, r8, r3
  403b70:	fbb4 f1f2 	udiv	r1, r4, r2
  403b74:	ea4f 4518 	mov.w	r5, r8, lsr #16
  403b78:	fb02 4411 	mls	r4, r2, r1, r4
  403b7c:	fa1f fc87 	uxth.w	ip, r7
  403b80:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  403b84:	fb01 f30c 	mul.w	r3, r1, ip
  403b88:	42ab      	cmp	r3, r5
  403b8a:	fa00 f40e 	lsl.w	r4, r0, lr
  403b8e:	d909      	bls.n	403ba4 <__udivmoddi4+0x1bc>
  403b90:	19ed      	adds	r5, r5, r7
  403b92:	f101 30ff 	add.w	r0, r1, #4294967295
  403b96:	f080 808a 	bcs.w	403cae <__udivmoddi4+0x2c6>
  403b9a:	42ab      	cmp	r3, r5
  403b9c:	f240 8087 	bls.w	403cae <__udivmoddi4+0x2c6>
  403ba0:	3902      	subs	r1, #2
  403ba2:	443d      	add	r5, r7
  403ba4:	1aeb      	subs	r3, r5, r3
  403ba6:	fa1f f588 	uxth.w	r5, r8
  403baa:	fbb3 f0f2 	udiv	r0, r3, r2
  403bae:	fb02 3310 	mls	r3, r2, r0, r3
  403bb2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403bb6:	fb00 f30c 	mul.w	r3, r0, ip
  403bba:	42ab      	cmp	r3, r5
  403bbc:	d907      	bls.n	403bce <__udivmoddi4+0x1e6>
  403bbe:	19ed      	adds	r5, r5, r7
  403bc0:	f100 38ff 	add.w	r8, r0, #4294967295
  403bc4:	d26f      	bcs.n	403ca6 <__udivmoddi4+0x2be>
  403bc6:	42ab      	cmp	r3, r5
  403bc8:	d96d      	bls.n	403ca6 <__udivmoddi4+0x2be>
  403bca:	3802      	subs	r0, #2
  403bcc:	443d      	add	r5, r7
  403bce:	1aeb      	subs	r3, r5, r3
  403bd0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  403bd4:	e78f      	b.n	403af6 <__udivmoddi4+0x10e>
  403bd6:	f1c1 0720 	rsb	r7, r1, #32
  403bda:	fa22 f807 	lsr.w	r8, r2, r7
  403bde:	408b      	lsls	r3, r1
  403be0:	fa05 f401 	lsl.w	r4, r5, r1
  403be4:	ea48 0303 	orr.w	r3, r8, r3
  403be8:	fa20 fe07 	lsr.w	lr, r0, r7
  403bec:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  403bf0:	40fd      	lsrs	r5, r7
  403bf2:	ea4e 0e04 	orr.w	lr, lr, r4
  403bf6:	fbb5 f9fc 	udiv	r9, r5, ip
  403bfa:	ea4f 441e 	mov.w	r4, lr, lsr #16
  403bfe:	fb0c 5519 	mls	r5, ip, r9, r5
  403c02:	fa1f f883 	uxth.w	r8, r3
  403c06:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  403c0a:	fb09 f408 	mul.w	r4, r9, r8
  403c0e:	42ac      	cmp	r4, r5
  403c10:	fa02 f201 	lsl.w	r2, r2, r1
  403c14:	fa00 fa01 	lsl.w	sl, r0, r1
  403c18:	d908      	bls.n	403c2c <__udivmoddi4+0x244>
  403c1a:	18ed      	adds	r5, r5, r3
  403c1c:	f109 30ff 	add.w	r0, r9, #4294967295
  403c20:	d243      	bcs.n	403caa <__udivmoddi4+0x2c2>
  403c22:	42ac      	cmp	r4, r5
  403c24:	d941      	bls.n	403caa <__udivmoddi4+0x2c2>
  403c26:	f1a9 0902 	sub.w	r9, r9, #2
  403c2a:	441d      	add	r5, r3
  403c2c:	1b2d      	subs	r5, r5, r4
  403c2e:	fa1f fe8e 	uxth.w	lr, lr
  403c32:	fbb5 f0fc 	udiv	r0, r5, ip
  403c36:	fb0c 5510 	mls	r5, ip, r0, r5
  403c3a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  403c3e:	fb00 f808 	mul.w	r8, r0, r8
  403c42:	45a0      	cmp	r8, r4
  403c44:	d907      	bls.n	403c56 <__udivmoddi4+0x26e>
  403c46:	18e4      	adds	r4, r4, r3
  403c48:	f100 35ff 	add.w	r5, r0, #4294967295
  403c4c:	d229      	bcs.n	403ca2 <__udivmoddi4+0x2ba>
  403c4e:	45a0      	cmp	r8, r4
  403c50:	d927      	bls.n	403ca2 <__udivmoddi4+0x2ba>
  403c52:	3802      	subs	r0, #2
  403c54:	441c      	add	r4, r3
  403c56:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  403c5a:	eba4 0408 	sub.w	r4, r4, r8
  403c5e:	fba0 8902 	umull	r8, r9, r0, r2
  403c62:	454c      	cmp	r4, r9
  403c64:	46c6      	mov	lr, r8
  403c66:	464d      	mov	r5, r9
  403c68:	d315      	bcc.n	403c96 <__udivmoddi4+0x2ae>
  403c6a:	d012      	beq.n	403c92 <__udivmoddi4+0x2aa>
  403c6c:	b156      	cbz	r6, 403c84 <__udivmoddi4+0x29c>
  403c6e:	ebba 030e 	subs.w	r3, sl, lr
  403c72:	eb64 0405 	sbc.w	r4, r4, r5
  403c76:	fa04 f707 	lsl.w	r7, r4, r7
  403c7a:	40cb      	lsrs	r3, r1
  403c7c:	431f      	orrs	r7, r3
  403c7e:	40cc      	lsrs	r4, r1
  403c80:	6037      	str	r7, [r6, #0]
  403c82:	6074      	str	r4, [r6, #4]
  403c84:	2100      	movs	r1, #0
  403c86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403c8a:	4618      	mov	r0, r3
  403c8c:	e6f8      	b.n	403a80 <__udivmoddi4+0x98>
  403c8e:	4690      	mov	r8, r2
  403c90:	e6e0      	b.n	403a54 <__udivmoddi4+0x6c>
  403c92:	45c2      	cmp	sl, r8
  403c94:	d2ea      	bcs.n	403c6c <__udivmoddi4+0x284>
  403c96:	ebb8 0e02 	subs.w	lr, r8, r2
  403c9a:	eb69 0503 	sbc.w	r5, r9, r3
  403c9e:	3801      	subs	r0, #1
  403ca0:	e7e4      	b.n	403c6c <__udivmoddi4+0x284>
  403ca2:	4628      	mov	r0, r5
  403ca4:	e7d7      	b.n	403c56 <__udivmoddi4+0x26e>
  403ca6:	4640      	mov	r0, r8
  403ca8:	e791      	b.n	403bce <__udivmoddi4+0x1e6>
  403caa:	4681      	mov	r9, r0
  403cac:	e7be      	b.n	403c2c <__udivmoddi4+0x244>
  403cae:	4601      	mov	r1, r0
  403cb0:	e778      	b.n	403ba4 <__udivmoddi4+0x1bc>
  403cb2:	3802      	subs	r0, #2
  403cb4:	443c      	add	r4, r7
  403cb6:	e745      	b.n	403b44 <__udivmoddi4+0x15c>
  403cb8:	4608      	mov	r0, r1
  403cba:	e708      	b.n	403ace <__udivmoddi4+0xe6>
  403cbc:	f1a8 0802 	sub.w	r8, r8, #2
  403cc0:	443d      	add	r5, r7
  403cc2:	e72b      	b.n	403b1c <__udivmoddi4+0x134>

00403cc4 <__aeabi_idiv0>:
  403cc4:	4770      	bx	lr
  403cc6:	bf00      	nop
  403cc8:	52202d2d 	.word	0x52202d2d
  403ccc:	6f646e61 	.word	0x6f646e61
  403cd0:	6156206d 	.word	0x6156206d
  403cd4:	3a65756c 	.word	0x3a65756c
  403cd8:	786c2520 	.word	0x786c2520
  403cdc:	0a2d2d20 	.word	0x0a2d2d20
  403ce0:	0000000d 	.word	0x0000000d
  403ce4:	54202d2d 	.word	0x54202d2d
  403ce8:	20474e52 	.word	0x20474e52
  403cec:	6d617845 	.word	0x6d617845
  403cf0:	20656c70 	.word	0x20656c70
  403cf4:	0d0a2d2d 	.word	0x0d0a2d2d
  403cf8:	00000000 	.word	0x00000000
  403cfc:	454d4153 	.word	0x454d4153
  403d00:	582d3037 	.word	0x582d3037
  403d04:	00444c50 	.word	0x00444c50
  403d08:	25202d2d 	.word	0x25202d2d
  403d0c:	000d0a73 	.word	0x000d0a73
  403d10:	353a3031 	.word	0x353a3031
  403d14:	33323a37 	.word	0x33323a37
  403d18:	00000000 	.word	0x00000000
  403d1c:	206e754a 	.word	0x206e754a
  403d20:	32203820 	.word	0x32203820
  403d24:	00323230 	.word	0x00323230
  403d28:	43202d2d 	.word	0x43202d2d
  403d2c:	69706d6f 	.word	0x69706d6f
  403d30:	3a64656c 	.word	0x3a64656c
  403d34:	20732520 	.word	0x20732520
  403d38:	2d207325 	.word	0x2d207325
  403d3c:	000d0a2d 	.word	0x000d0a2d

00403d40 <_global_impure_ptr>:
  403d40:	20400010 33323130 37363534 42413938     ..@ 0123456789AB
  403d50:	46454443 00000000 33323130 37363534     CDEF....01234567
  403d60:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  403d70:	0000296c                                l)..

00403d74 <blanks.7217>:
  403d74:	20202020 20202020 20202020 20202020                     

00403d84 <zeroes.7218>:
  403d84:	30303030 30303030 30303030 30303030     0000000000000000
  403d94:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00403da4 <_ctype_>:
  403da4:	20202000 20202020 28282020 20282828     .         ((((( 
  403db4:	20202020 20202020 20202020 20202020                     
  403dc4:	10108820 10101010 10101010 10101010      ...............
  403dd4:	04040410 04040404 10040404 10101010     ................
  403de4:	41411010 41414141 01010101 01010101     ..AAAAAA........
  403df4:	01010101 01010101 01010101 10101010     ................
  403e04:	42421010 42424242 02020202 02020202     ..BBBBBB........
  403e14:	02020202 02020202 02020202 10101010     ................
  403e24:	00000020 00000000 00000000 00000000      ...............
	...

00403ea8 <_init>:
  403ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403eaa:	bf00      	nop
  403eac:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403eae:	bc08      	pop	{r3}
  403eb0:	469e      	mov	lr, r3
  403eb2:	4770      	bx	lr

00403eb4 <__init_array_start>:
  403eb4:	00401e6d 	.word	0x00401e6d

00403eb8 <__frame_dummy_init_array_entry>:
  403eb8:	0040018d                                ..@.

00403ebc <_fini>:
  403ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403ebe:	bf00      	nop
  403ec0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403ec2:	bc08      	pop	{r3}
  403ec4:	469e      	mov	lr, r3
  403ec6:	4770      	bx	lr

00403ec8 <__fini_array_start>:
  403ec8:	00400169 	.word	0x00400169
